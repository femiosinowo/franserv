<?xml version="1.0"?>
<doc>
<assembly>
<name>
Ektron.Cms.User
</name>
</assembly>
<members>
<member name="M:Ektron.Cms.User.EkUser.SetAuthenticationCookie(Ektron.Cms.UserData)">
	<summary>
 This method set the authentication cookie.
 </summary>
	<param name="userInfo">Returned value of the logInUser method.</param>
	<remarks>First you must call the logInUser method to login the user.</remarks>
</member><member name="M:Ektron.Cms.User.EkUser.SetAuthenticationCookie(Ektron.Cms.UserData,System.Int64)">
	<summary>
 This method set the authentication cookie.
 </summary>
	<param name="userInfo">Returned value of the logInUser method.</param>
	<remarks>First you must call the logInUser method to login the user.</remarks>
</member><member name="M:Ektron.Cms.User.EkUser.SetAuthenticationCookie(Ektron.Cms.UserData,System.Int64,System.Int32)">
	<summary>
 This method set the authentication cookie.
 </summary>
	<param name="userInfo">Returned value of the logInUser method.</param>
	<remarks>First you must call the logInUser method to login the user.</remarks>
</member><member name="M:Ektron.Cms.User.EkUser.DeleteCookie">
	<summary>
 Removes the cookie from the site.
 </summary>
	<remarks></remarks>
</member><member name="M:Ektron.Cms.User.EkUser.GetCommunityUserByID(System.Int64)">
	<summary>
 Retrieves a communityUserData object
 </summary>
	<param name="userId">Id of user to retrieve</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Ektron.Cms.User.EkUser.GetCommunityUserByID(System.Int64,System.Boolean)">
	<summary>
 Retrieves a communityUserData object
 </summary>
	<param name="userId">Id of user to retrieve</param>
	<param name="retrievePreferences">true to retrieve user preferences.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Ektron.Cms.User.EkUser.GetUserCustomProperties(System.Int64)">
	<summary>
 Returns an array of custom properties for a given user's ID.
 </summary>
	<param name="UserId">User's ID</param>
	<returns>Ektron.Cms.CustomAttribute()</returns>
	<remarks>User login with administrator privileges are required to perform this operation.</remarks>
</member><member name="M:Ektron.Cms.User.EkUser.ResetMembershipUserPassword(System.String,System.Int64)">
	<summary>
 Reset the password for the given membership user.
 </summary>
	<param name="Username">User’s username to be reset</param>
	<returns>String</returns>
	<remarks>User login is required to perform this operation.</remarks>
</member><member name="M:Ektron.Cms.User.EkUser.RandomString(System.Int32)">
	<summary>
	</summary>
	<param name="size"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Ektron.Cms.User.EkUser.GetAllUsersByFolderId(System.Int64,System.Int64)">
 This API is deprecated. Use GetAllUsersAndUserGroupsByFolderId

</member><member name="M:Ektron.Cms.User.EkUser.GetAllUsersAndUserGroupsByFolderId(System.Int64,System.Int64)">
	<summary>
 This API returns a HashTable of user and usergroups
 Key - user_UserId Value - UserData object
 Key - usergroup_GroupId Value - UserGroupData object
 </summary>
	<param name="CallerID">The user ID that is logged on to the system.</param>
	<param name="FolderId">The ID of the folder.</param>
	<returns>This API returns a HashTable of user and usergroups</returns>
	<remarks>User login is required to perform this operation.</remarks>
</member>
</members>
</doc>