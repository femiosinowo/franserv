<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ektron.Cms.ObjectFactory</name>
    </assembly>
    <members>
        <member name="M:Ektron.Cms.DependencyContainer.Register(System.Type,System.Type)">
            <summary>
            Registers a mapping within the current container for the 
            specified types. If a type mapping already exists for the 
            'from' type, it will be override with the specified mapping.
            </summary>
            <param name="from">Interface or class type key</param>
            <param name="to">Type to map</param>
        </member>
        <member name="M:Ektron.Cms.DependencyContainer.IsRegistered(System.Type)">
            <summary>
            Returns true if the specified type has a corresponding
            mapping registered within the current container, false otherwise.
            </summary>
            <param name="from">Interface or class type key</param>
            <returns>True if the specified type has a mapping, false otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.DependencyContainer.GetMappedType(System.Type)">
            <summary>
            Returns the type mapped to the specified type within the current 
            container. If no mapping exists, null is returned.
            </summary>
            <param name="fromType">Type key</param>
            <returns>Mapped type</returns>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Caching.CacheManager">
            <summary>
            API for managing cache within the CMS.
            NOTE: The cachemanager will prefix aall keys with the key defined in the web.config AppSettings ek_CacheKeyPrefix.
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Add(System.String,System.Object)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The amount of time the item should be cached for.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Put(System.String,System.Object,System.TimeSpan,System.String[])">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The sliding expiration for the cached item</param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Put(System.String,System.Object,System.DateTime,System.String[])">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="absoluteExpiration">The absolute expiration for the cached item.</param>
            /// <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Put(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="dependency">a System.Web.Caching.CacheDependency to adhere to.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Get(System.String)">
            <summary>
            Gets an item from the cache. If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Get(System.String,System.Boolean)">
            <summary>
            Gets an item from the cache. If the key doesn't exist, null will be returned. 
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <param name="Clone">specify whether to clone the object coming out of the cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Remove(System.String)">
            <summary>
            Removes an item from the cache.
            </summary>
            <param name="key">key of the item to remove from cache.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Clear">
            <summary>
            Clears all items from the cache.
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.CacheList``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String[],System.String[])">
            <summary>
            Caches a List of ICmsDataObject.  The list will be cached as individual items with a list cache containing pointers to each item.  This allows individual items to be expired and shared by multiple lists.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to cache.</typeparam>
            <param name="list">List of items to cache.</param>
            <param name="listKey">Key for the entire list of items.</param>
            <param name="itemKeyPrefix">Key prefix for individual items.  Item.Id will be appended.  KeyPrefix should be cosistent for all items of this type to allow sharing.</param>
            <param name="requiredSegmentKeys"></param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.CacheList``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.TimeSpan,System.String[],System.String[])">
            <summary>
            Caches a List of ICmsDataObject.  The list will be cached as individual items with a list cache containing pointers to each item.  This allows individual items to be expired and shared by multiple lists.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to cache.</typeparam>
            <param name="list">List of items to cache.</param>
            <param name="listKey">Key for the entire list of items.</param>
            <param name="itemKeyPrefix">Key prefix for individual items.  Item.Id will be appended.  KeyPrefix should be cosistent for all items of this type to allow sharing.</param>
            <param name="slidingExpiration">The amount of time the items should be cached for.</param>
            <param name="requiredSegmentKeys"></param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.GetCachedList``1(System.String,System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <param name="itemKeyPrefix">Indovidual item keyPrefix.  Used for retreiving individual list items.</param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.GetCachedList``1(System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <param name="itemKeyPrefix">Indovidual item keyPrefix.  Used for retreiving individual list items.</param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.Invalidate(System.String)">
            <summary>
            Invalidates the current item with the supplied key.
            </summary>
            <param name="key">key of item to invalidate.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.InternalPut(System.String,System.Object,System.Nullable{System.TimeSpan},System.String[])">
            <summary>
            Internal helper for putting items in cache.  Checks for null SlidingExpiration and beahves accordingly.
            </summary>
            <param name="key"></param>
            <param name="item"></param>
            <param name="slidingExpiration"></param>
            <param name="cacheSegmentKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheManager.InternalCacheList``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Nullable{System.TimeSpan},System.String[],System.String[])">
            <summary>
            Internal helper for for Caching a List of ICmsDataObject.  The list will be cached as individual items with a list cache containing pointers to each item.  This allows individual items to be expired and shared by multiple lists.
            Checks for null SlidingExpiration and beahves accordingly.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheManager.Count">
            <summary>
            Gets the number of items currently in the cache.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheManager.Item(System.String)">
            <summary>
            Gets an item from the cache.  If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheKeys.KeyPrefix">
            <summary>
            Returns the KeyPrefix to be used when caching values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Add(System.String,System.Object)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, an exception will be thrown.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The amount of time the item should be cached for.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="slidingExpiration">The amount of time the item should be cached for.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object,System.DateTime)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="absoluteExpiration">The time at which the item should be removed from the cache.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Put(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            Adds an item to the cache.  If the cache already contains the supplied key, the item will be replaced.
            </summary>
            <param name="key">key of item to add to cache.</param>
            <param name="value">item to add to cache</param>
            <param name="dependency">a System.Web.Caching.CacheDependency to adhere to.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Get(System.String)">
            <summary>
            Gets an item from the cache.  If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Remove(System.String)">
            <summary>
            Removes an item from the cache.
            </summary>
            <param name="key">key of the item to remove from cache.</param>
        </member>
        <member name="M:Ektron.Cms.Caching.Provider.CacheProvider.Clear">
            <summary>
            Clears all items from the cache.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProvider.CacheSeconds">
            <summary>
            Gets or sets the the default amount of time (seconds) to cache an item for.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProvider.Count">
            <summary>
            Gets the number of items currently in the cache.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Caching.CacheService`1">
            <summary>
            Base class for creating Caching Layer service implemntations.
            </summary>
            <typeparam name="T">The interface type that the caching service is implementing. </typeparam>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheItem(System.String,System.Object)">
            <summary>
            Caches the supplied item.  If CacheSeconds is set it will be taken into consideration.
            </summary>
            <param name="key">key of item to cache.</param>
            <param name="item">item to cache.</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheList``1(System.Collections.Generic.List{``0},System.String,System.String,System.String[])">
            <summary>
            Caches the supplied list.  If CacheSeconds is set it will be taken into consideration.
            </summary>
            <param name="list">key of item to cache.</param>
            <param name="listKey">key of item to cache.</param>
            <param name="keyPrefix">item to cache.</param>
            <param name="dependencyKeys"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCachedList``1(System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCachedGetList``1(System.String)">
            <summary>
            Retrieves a list of cached items.  List is stored as pointers to individual items.  If any given item is expired, the list will be expired.
            </summary>
            <typeparam name="T">Type of ICmsDataObject to retrieve.</typeparam>
            <param name="listKey">Key of list to retrieve. </param>
            <returns>List of cached items or null if list items are expired or doesn't exist.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="function"></param>
            <param name="t1Param"></param>
            <param name="t2Param"></param>
            <param name="t3Param"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey(System.Int64)">
            <summary>
            Creates a cache Key for the supplied Id.
            </summary>
            <param name="id">id of item to get cache key for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey(System.Int64,System.Int64)">
            <summary>
            Creates a cache Key for the supplied Ids.
            </summary>
            <param name="id">id of item to get cache key for.</param>
            <param name="secondId">second id of item to get cache key for.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey(System.Int64,System.Int32,System.String)">
            <summary>
            Get Cache Key
            </summary>
            <param name="id">id</param>
            <param name="lang">lang</param>
            <param name="info">string</param>
            <returns>string</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Caching.CacheService`1.GetCacheKey``1(Ektron.Cms.Common.Criteria{``0})">
            <summary>
            Creates a cache Key for the supplied criteria.
            </summary>
            <typeparam name="T">Type of Criteria Property</typeparam>
            <param name="criteria">criteria to retreive key for.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.Service">
            <summary>
            Gets the underlying interface implementation to be used when the cache is empty.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheManager">
            <summary>
            Gets an instance of the ICacheManager.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.InPreviewMode">
            <summary> 
            Gets or sets the current Preview Mode.  Returns true if the site is in site preview mode.
            </summary> 
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.ContentLanguage">
            <summary> 
            Gets or sets the current content language. 
            </summary> 
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.CacheSeconds">
            <summary>
            Gets or sets the number of seconds to cache items for in this interface.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Caching.CacheService`1.Item(System.String)">
            <summary>
            Gets an item from the cache.  If the key doesn't exist, null will be returned.
            </summary>
            <param name="key">key of item to retreive from cache.</param>
            <returns>Object corresponding to supplied key or null if the key isn't in the cache.</returns>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Caching.CacheServiceFactory">
            <summary>
            Internal class used by abstract CacheService class for creating instance of the underlying interface that supports the caching Business Object.
            It's only responsibility it to supply the CacheService with the underlying interface implementation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProviderManager.Provider">
            <summary>
            gets teh default Caching provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Caching.Provider.CacheProviderManager.Providers">
            <summary>
            Gets the list of all configured caching providers.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Campaign.Common.CampaignProperty">
            <summary>
            Enumeration of Campaign columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Framework.Search.SearchCriteriaFilter`1">
            <summary>
            Search Criteria filter
            </summary>
            <typeparam name="V">Value Type, System.Type</typeparam>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.SearchPropertyMapper.GetContentProperties">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Framework.Search.SearchCriteria`1.IncludeRelevantResults">
            <summary>
            Specifies whether relevant results should be returned, default = true
            </summary>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.GetAbsoluteQuicklink(Ektron.Cms.Search.SearchResultData,Ektron.Cms.Common.EkRequestInformation,System.String,System.String)">
            <summary>
            Replaces the relative quicklink URL from search server with an 
            absolute path calculated based on whether or not the current 
            server is staging or production, and on the site id of the 
            result data passed into the rule.
            </summary>
            <param name="result">Search result to use for creating absolute quicklink</param>
            <param name="requestInformation">RequestInformation based on login information</param>
            <param name="stagingDomain">The staging domain of the folder of the search result</param>
            <param name="productionDomain">The production domain of the folder of the search result</param>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.GetRelativeQuicklink(System.String,System.Int64,Ektron.Cms.Common.EkRequestInformation,System.String,System.String)">
            <summary>
            Returns a relative quicklink after stripping Scheme, Port # and SitePath from absoluteUrl
            </summary>
            <param name="absoluteUrl">An absolute quicklink returned by our search controls/API</param>
            <param name="siteId">The SiteId of search result</param>
            <param name="requestInformation">RequestInformation based on login information</param>
            <param name="stagingDomain">The staging domain of the folder of the search result</param>
            <param name="productionDomain">The production domain of the folder of the search result</param>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.BuildAbsoluteUrl(System.String,System.String,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Builds an absolute URL from the specified inputs.
            </summary>
            <param name="host">URL Host</param>
            <param name="path">Path portion of the URL</param>        
            <returns>Absolute URL</returns>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.GetHostNameAndSitePath(System.String,System.String,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Builds an URL from the specified hostname, site path and scheme, port # from EkRequestInformation.
            </summary>
            <param name="host">URL Host</param>
            <param name="path">Path portion of the URL</param>        
            <returns>Absolute URL</returns>
        </member>
        <member name="M:Ektron.Cms.Framework.Search.QuickLinkBuilder.ConvertPort(System.String,System.Int32)">
            <summary>
            Converts the specified port string to a corresponding integer
            value in a format supported by the UriBuilder class.
            </summary>
            <param name="port">Port string to convert</param>
            <param name="defaultPort">Default port value</param>
            <returns>Port value as integer</returns>
        </member>
        <member name="T:Ektron.Cms.Framework.Search.ResultUrlBuilder">
            <summary>
            The ResultUrlBuilder extends UriBuilder to more easily
            prepare URLs for search results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Framework.Search.ResultUrlBuilder.RelativePath">
            <summary>
            Gets or sets the full relative URL path (including optional query 
            and/or fragment) of a URI.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.BaseUrl">
            <summary>
            Gets or sets the BaseUrl for Framework Services.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.ServiceFileName">
            <summary>
             Gets or Sets the service file name this service client needs to work with.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.Url">
            <summary>
             Gets the Service Url for the current Service Client.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.Binding">
            <summary>
            Gets Binding for Service Binding.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Services.ServiceClient.Address">
            <summary>
            Gets Endpoint address for service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Services.ServiceHeader.ReadCurrentHeader">
            <summary>
            Returns the current serviceheader if the current request is within a WCF service call.
            Otherwise returns null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.StringExtensions.SafeTrim(System.String)">
            <summary>
            Safely trims a string. Returns String.Empty if null.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.StringExtensions.IsValueNullOrEmpty(System.String)">
            <summary>
            Determines whether [is null or empty] [the specified value].
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if [is null or empty] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Ektron.Cms.Common.TemplateDataProperty">
            <summary>
            Enumeration of Template properties available for filtering TemplateCritera.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TemplateDataProperty.Id">
            <summary>
            Template Id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TemplateDataProperty.TemplateName">
            <summary>
            Template Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Common.TemplateDataProperty.FileName">
            <summary>
            File Name (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.TemplateCriteria">
            <summary>
            Criteria object for retreiving Metadata from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FavoriteTaxonomyData">
            <summary>
            Data class representing a user's Favorites Folder.  The folders themselves are stored as hidden taxonomies within the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Id">
            <summary>
            Gets or sets the ID of the favorite taxonomy. 
            </summary>
            <remarks>Overridden to clarify the description and taxonomy relationship.</remarks>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.ParentId">
            <summary>
            Gets or sets the ID of the favorite taxonomy's parent folder.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Name">
            <summary>
            Gets or sets the Favorites taxonomy Name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Description">
            <summary>
            gets or sets the description of the favorite's Taxonomy.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.Items">
            <summary>
            Gets or sets the Favorite Items in the taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FavoriteTaxonomyData.ChildTaxonomies">
            <summary>
            Gets or sets the Favorite Child taxonomies in the current taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FriendsData">
            <summary>
            Data class representing a Friend in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendsData.FriendUserId">
            <summary>
            Gets or sets the UserId of the friend being added.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendsData.UserId">
            <summary>
            Gets or sets the ID of the user who is adding the friend.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendsData.TaxonomyId">
            <summary>
            Id of the Taxonomy to put the friend in for User ID.  If not set, it will go in the users root Friends taxonomy folder.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FriendsCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Friends from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.FriendTaxonomyData">
            <summary>
            Data class representing a user's Friends Folder.  The folders themselves are stored as hidden taxonomies within the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Id">
            <summary>
            Gets or sets the ID of the Friends taxonomy. 
            </summary>
            <remarks>Overridden to clarify the description and taxonomy relationship.</remarks>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.ParentId">
            <summary>
            Gets or sets the ID of the Friends folder's parent taxonomy. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Name">
            <summary>
            Gets or sets the Friends taxonomy Name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Description">
            <summary>
            gets or sets the description of the taxonomy's folder.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.Items">
            <summary>
            Gets or sets the Friends in the taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.FriendTaxonomyData.ChildTaxonomies">
            <summary>
            Gets or sets the Friends child taxonomy in the current taxonomy.  If not retrieved, this will be an empty list.
            </summary>
        </member>
        <member name="T:Ektron.Cms.EventTaxonomyCriteria">
            <summary>
            Criteria class for retrieving WebEvent data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.EventTaxonomyFilter">
            <summary>
            Specialized criteria filter object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.EventTaxonomyFilterGroup">
            <summary>
            Specialized criteria filter group object for defining taxonomy filters for retreiving content.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.AssetProperty">
            <summary>
            Enumeration of ContentAssetData properties that can be used for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Id">
            <summary>
            Asset's ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.FolderId">
            <summary>
            Folder ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.FolderName">
            <summary>
            FolderName (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Title">
            <summary>
            Title (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Status">
            <summary>
            Status Flag of the Asset. (string)
              * <b>A</b> = Approved
              * <b>O</b> = Checked Out
              * <b>I</b> = Checked In
              * <b>S</b> = Submitted for Approval
              * <b>M</b> = Marked for Deletion
              * <b>P</b> = Pending Go Live Date
              * <b>T</b> = Awaiting Completion of Associated Tasks
              * <b>D</b> = Pending Deletion
            </summary>       
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.Type">
            <summary>
            Possible values are defined in EkEnumeration.CMSContentTypes.  Do not use "AllTypes", "ArchivedAssets" or any of the other combined types as these aren't valid values.  
            If All Types are wanted, simply do not filter on this property.
            If All archived types are wanted, filter on the IsArchived Property.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.SubType">
            <summary>
            Subtype (Integer as of EkEnumeration.CMSContentSubtype)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.LanguageId">
            <summary>
            Language ID (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.DateCreated">
            <summary>
            Date Created (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.DateModified">
            <summary>
            Date Modified (Date Time)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.UserId">
            <summary>
            User ID (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.LastEditorLastName">
            <summary>
            Last Editor Last Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.LastEditorFirstName">
            <summary>
            Last Editor First Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.XmlConfigurationId">
            <summary>
            XML Config Id (Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.IsPublished">
            <summary>
            Is Published (boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.AssetId">
            <summary>
            Asset ID (long Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.AssetProperty.IsArchived">
            <summary>
            IsArchived flag (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.AssetCriteria">
            <summary>
            Criteria class used for retrieving ContentAssetData objects from CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.ContentAssetData">
            <summary>
            Data class for Asset Content.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Content.ContentAssetData.Validate">
            <summary>
            Validates this instance
            </summary>
            <returns>a ValidationResults object</returns>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.IsXmlInherited">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.XmlInheritedFrom">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.LegacyData">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.XmlConfiguration">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.StyleSheet">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.MediaText">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.HyperLink">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.Html">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.TemplateConfiguration">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.FlagDefId">
            <summary>
            Not applicable to this class
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.AssetId">
            <summary>
            Gets or sets the Asset ID of the content item for the AssetInfoData object.
            </summary>
            <value></value>
            <returns>Asset ID of the content item.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Content.ContentAssetData.File">
            <summary>
            Gets or Sets an array of data that represents the asset's contents
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.SmartformTitle">
            <summary>
            SmartForm Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.SmartformDescription">
            <summary>
            Detailed description of configuration given by creator or last editor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt1">
            <summary>
            Display XSLT 1
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt2">
            <summary>
            Display XSLT 2
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt3">
            <summary>
            Display XSLT 3
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt4">
            <summary>
            Display XSLT 4
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Xslt5">
            <summary>
            Display XSLT 5
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.XmlSchema">
            <summary>
            Specify the .xsd file used to validate the XML content that the Smart Form will be assigned to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.DefaultXslt">
            <summary>
            Display XSLT that being assigned from collection of display xslts
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.PhysicalPath">
            <summary>
            SmartForm PhysicalPath
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.LogicalPath">
            <summary>
            SmartForm LogicalPath
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.FieldList">
             <summary>
            String that contains all the SmartForm Fields
             </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.PackageXslt">
            <summary>
            Display XSLT Package (created using the Data Designer)
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.Type">
            <summary>
            Set the Smartform Type(Content = 0,Product = 1,WebEvent = 2)
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormConfigurationData.SecondType">
            <summary>
            Set the catalog entry type(Product = 0, ComplexProduct = 1, Kit = 2, Bundle = 3, SubscriptionProduct = 4)
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.XPath">
            <summary>
            XPath of the Indexed field
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.DataType">
            <summary>
            DataType of the Indexed field
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.XmlSearchDisplayType">
            <summary>
            DisplayType of the Indexed field for Xml Search control
            0 - For Non-selection fields
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldData.Labels">
            <summary>
            Labels of the index field in all languages
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldLabel.Label">
            <summary>
            Label of the index field
            </summary>
        </member>
        <member name="P:Ektron.Cms.SmartFormIndexFieldLabel.Language">
            <summary>
            Language of the label of the index field
            </summary>
        </member>
        <member name="T:Ektron.Cms.CollectionCriteria">
            <summary>
            Collection Criteria
            </summary>
        </member>
        <member name="M:Ektron.Cms.CollectionCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.CollectionCriteria.#ctor(Ektron.Cms.Common.ContentCollectionProperty,Ektron.Cms.Common.EkEnumeration.OrderByDirection)">
            <summary>
            Constructor
            </summary>
            <param name="orderByField">order by field</param>
            <param name="orderByDirection">order by direction</param>
        </member>
        <member name="T:Ektron.Cms.Content.LibraryCriteria">
            <summary>
            Criteria object for retreiving Library items from the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.Id">
            <summary> 
            Gets or sets the library's ID.
            </summary> 
            <value></value> 
            <returns>The library's ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.TypeId">
            <summary> 
            Gets or sets the Type ID.
            </summary> 
            <value></value> 
            <returns>The type ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.LanguageId">
            <summary> 
            Gets or sets the language ID.
            </summary> 
            <value></value> 
            <returns>The language ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.Title">
            <summary> 
            Gets or sets the title.
            </summary> 
            <value></value> 
            <returns>The title</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.FileName">
            <summary> 
            Gets or sets a value based on LibraryType. If LibraryType = Images or Files then the property is a file name.
            If LibraryType = Hyperlink or QuickLink then the property is a Url link
            </summary> 
            <value></value> 
            <returns>The file name or Url link.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.StagingFileName">
            <summary> 
            Gets or sets the staging file name.
            </summary> 
            <value></value> 
            <returns>The staging file name.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryBaseData.File">
            <summary>
            Sets the Library File
            </summary>
        </member>
        <member name="P:Ektron.Cms.LibraryData.FolderName">
            <summary> 
            Gets or sets the folder's name for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The folder's name.</returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.LibraryData.EditorFirstName">
            <summary> 
            Gets or sets the Editor's first name for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The Editor's first name.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.EditorLastName">
            <summary> 
            Gets or sets the Editor's last name for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The Editor's last name.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.UserId">
            <summary> 
            Gets or sets the user's ID for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The library user's long ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.LastEditDate">
            <summary> 
            Gets or sets the last edit date for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The last edit date.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.DisplayLastEditDate">
            <summary> 
            Gets or sets the last edit date to show for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The last edit date to show.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.DateCreated">
            <summary> 
            Gets or sets the date created for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The date created.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.DisplayDateCreated">
            <summary> 
            Gets or sets the date created to show for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The date created to show.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ContentId">
            <summary> 
            Gets or sets the content's ID for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The content's long ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ParentId">
            <summary> 
            Gets or sets the parent's ID for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The parent's long ID.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Relative">
            <summary> 
            Gets or sets the Relative for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The Relative.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ContentType">
            <summary> 
            Gets or sets the content type for the LibraryData object.  Possible values are defined in Ektron.Cms.Common.EkEnumeration.CMSContentType enumeration.
            </summary> 
            <value></value> 
            <returns>The content type.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.ContentSubType">
            <summary> 
            Gets or sets the content sub type for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The content sub type.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.IsPrivate">
            <summary> 
            This property should be considered read-only. The value will be set to match the items parent folder privacy setting.
            </summary> 
            <value></value> 
            <returns>Returns true if the library is private. Otherwise, returns false.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Teaser">
            <summary> 
            Gets or sets the teaser for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The teaser.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.MetaData">
            <summary> 
            Gets or sets the content metadata list for the LibraryData object.  
            </summary> 
            <value></value> 
            <returns>The content metadata list.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Taxonomies">
            <summary> 
            Gets or sets the taxonomy data for this LibraryData Object
            </summary> 
            <value></value> 
            <returns>The taxonomydata list.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.OriginalLibraryId">
            <summary>
            The Id of the original library item. For example, when dealing with a thumbnail image, this is the master image it was generated from.
            </summary>
            <value></value> 
            <returns>The Id of the original library item.</returns> 
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.LibraryData.Html">
            <summary>
            gets or sets the Html for this library item.  Many library items will not have corresponding html.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Flag.FlagDefinitionCriteria">
            <summary>
            Criteria object for retreiving FlagDefinitions items from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.MetadataTypeProperty">
            <summary>
            Enumeration of Metadata properties available for filtering MetadataCritera.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Id">
            <summary>
            Metadata Type ID (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Name">
            <summary>
            Metadata Type Name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Language">
            <summary>
            Metadata Type  Language (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Content.MetadataTypeProperty.Requried">
            <summary>
             Metadata Type required (boolean)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.MetadataTypeCriteria">
            <summary>
            Criteria object for retreiving Metadata from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Device.CmsDeviceConfigurationProperty">
            <summary>
            Enumeration of CmsDeviceConfigurationProperty properties available for sorting and filtering.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Device.CmsDeviceConfigurationData.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Name">
            <summary>
            Gets or sets the name of the device configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Width">
            <summary>
            Gets or sets the width for the preview template.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Height">
            <summary>
            Gets or sets the height for the preview template.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Models">
            <summary>
            Gets or sets the Models for the device configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.Order">
            <summary>
            Gets or sets the order of device configuration to match. if not set by default it will be set to last
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.DisplayFor">
            <summary>
            Gets or sets OS or Model type for the device config.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Device.CmsDeviceConfigurationData.DeviceType">
            <summary>
            Gets or sets Handheld / Tablet / Both.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCommentProperty">
            <summary>
            Enumeration of ActivityComment columns available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.ActivityId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.Comment">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.UserAvatar">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.UserDisplayName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.DateCreated">
            <summary>
            (DateTime)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityCommentProperty.CanDelete">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCommentCriteria">
            <summary>
            Criteria class for retrieving ActivityComment data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCommentData">
            <summary>
            Data class representing comments on an ActivityStream Activity
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.Id">
            <summary>
            Gets or sets the Id of the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.ActivityId">
            <summary>
            Gets or sets the Id of the Activity the comment belongs to.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.Comment">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.UserId">
            <summary>
            Gets or sets the ID of the user who made the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.UserAvatar">
            <summary>
            Gets or sets the avater of the user who made the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.UserDisplayName">
            <summary>
            Gets or sets the display name of the user who made the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.DateCreated">
            <summary>
            Gets or sets the date the comment was created.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.TimeLapse">
            <summary>
            Gets or sets the time lapse for the comment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCommentData.CanDelete">
            <summary>
            Gets or sets the Can delete permissions for the comment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityCriteria">
            <summary>
            Criteria class for use specifically with ActivityStreams.  It can be used in place of Criteria&gt;ActivityProperty&lt; for 
            further customizing the activity result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityCriteria.ReturnCommentCount">
            <summary>
            Gets or sets the number of comments to return for each activity in the requested activity list.  
            If 0, no comments will be returned.
            If -1, All Comments will be returned.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityProperty">
            <summary>
            Enumeration representing ActivityData properties that can be filtered and sorted on.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityData">
            <summary>
            Data class representing an Activity that has occured within the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Activity.ActivityData.Validate">
            <summary>
            Validates the current ActivityData instance is in a valid state for saving.  Returns collection of validation errors if not valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Id">
            <summary>
            Gets or set the Id of the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ActivityTypeId">
            <summary>
            Gets or sets the ActivityType for this Activity.  Built in CMS Activity are defined in EkEnumeration.ActivityType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ObjectId">
            <summary>
            Gets or sets the Id of the object associated with this activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ActionUser">
            <summary>
            Gets or sets the user who caused this activity to occur. For example, the user who posted a blog post or uploaded a document.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.ScopeObjectId">
            <summary>
            Gets or sets the Id of the scope object associated with this activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.LanguageId">
            <summary>
            Gets or sets the Language associated with this activity's message.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Message">
            <summary>
            Gets or sets the message for this activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Date">
            <summary>
            Gets or sets the date the activity occured.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.SiteId">
            <summary>
            Gets or sets the Id of the site that the activity originated from.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.TimeLapse">
            <summary>
            Gets the time lapse for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.CommentCount">
            <summary>
            Gets or sets the Comment count for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.Comments">
            <summary>
            Gets or sets the Comments for the activity.  This property will not be populated unless explicitly specified when calling API.
            To get the total comment count, see CommentCount property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.UniqueId">
            <summary>
            Gets or sets the UniqueIdentifier for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityData.CanComment">
            <summary>
            Gets or sets the Can Comment permissions for the activity.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityTypeProperty">
            <summary>
            Enumeration of ActivityType columns available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.ObjectType">
            <summary>
            (EkEnumeration.ActivityObjectType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.ActionType">
            <summary>
            (EkEnumeration.ActivityActionType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.Scope">
            <summary>
            (EkEnumeration.ActivityScope)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.DisplayInPreferences">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.IsPublishByDefault">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Activity.ActivityTypeProperty.SupportsComments">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityTypeCriteria">
            <summary>
            Criteria class for retrieving ActivityType data from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.ActivityTypeData">
            <summary>
            Data class representing activity types that inside and outside the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.Name">
            <summary>
            gets or sets the name of the ActivityType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.ObjectType">
            <summary>
            gets or sets the Cms Object Type associated with activity.  This may be null for custom activities.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.ActionType">
            <summary>
            gets or sets the Action associated with the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.Scope">
            <summary>
            gets or sets the Scope of the activity.  For example, it may originate from a community group.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.DisplayInPreferences">
            <summary>
            Gets or sets the Preference Display flag.  If true, users will be able to define notification preferences for the activity.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Activity.ActivityTypeData.SupportsComments">
            <summary>
            Gets or sets the flag indicating if this ActivityType supports commenting.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Activity.IActivityComment">
            <summary>
            Interface for ActivityComment business logic.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.BeaconData">
            <summary>
            Provider Information that is available to public. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconData.ProviderType">
            <summary>
            provider type of beacon data, it could be "google", "WebTrends" etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconData.UserAccount">
            <summary>
            User Account of the beacon data. It usually the id inserted to the script.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconData.TrackingCodePath">
            <summary>
            Path to locate the beacon user control which contains the script to insert to the page.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.BeaconTemplateControl">
            <summary>
            Base class for Tracking Tempalte User Controls
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.BeaconTemplateControl.#ctor">
            <summary>
            Initializes a new instance of the BeaconTemplateControl class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.BeaconTemplateControl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BeaconTemplateControl class.
            </summary>
            <param name="useraccount">User Account in string</param>
        </member>
        <member name="P:Ektron.Cms.Analytics.BeaconTemplateControl.UserAccount">
            <summary>
            User Account in string to be set at the page.LoadControl so the template control do not have to go
            through the dataManager to get the beacon again.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Interfaces.Analytics.Provider.AggregationTimePeriod">
            <summary>
            Time peroid over which values are totalled.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Interfaces.Analytics.Provider.AggregationTimePeriod.EntireDateRange">
            <summary>
            Values are totalled for the entire StartDate to EndDate range
            </summary>
        </member>
        <member name="F:Ektron.Cms.Interfaces.Analytics.Provider.AggregationTimePeriod.ByDay">
            <summary>
            Values are totalled for each day within the StartDate to EndDate range
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.MetricFilter.#ctor(Ektron.Cms.Interfaces.Analytics.Provider.Metric,Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterOperator,System.Double)">
            <summary>
            Creates a new filter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilter.#ctor(Ektron.Cms.Interfaces.Analytics.Provider.Dimension,Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterOperator,System.String)">
            <summary>
            Creates a new filter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterGroup.AddFilter(Ektron.Cms.Interfaces.Analytics.Provider.Metric,Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterOperator,System.Double)">
            <summary>
            Adds a new CriteriaFilter to the filter list.
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
            <returns>newly added filter.</returns>
        </member>
        <member name="P:Ektron.Cms.Interfaces.Analytics.Provider.MetricFilterGroup.Condition">
            <summary>
            Gets or Sets the LogicalOperator for the FilterGroup.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterGroup.AddFilter(Ektron.Cms.Interfaces.Analytics.Provider.Dimension,Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterOperator,System.String)">
            <summary>
            Adds a new filter to the filter list.
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
            <returns>newly added filter.</returns>
        </member>
        <member name="P:Ektron.Cms.Interfaces.Analytics.Provider.DimensionFilterGroup.Condition">
            <summary>
            Gets or Sets the LogicalOperator for the FilterGroup.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Analytics.Provider.SegmentFilter.#ctor(Ektron.Cms.Analytics.Providers.SegmentProperty,Ektron.Cms.Interfaces.Analytics.Provider.SegmentFilterOperator,System.String)">
            <summary>
            Creates a new filter
            </summary>
            <param name="field">field to filter on.</param>
            <param name="filterOperator">operator to use on field and value for filter.</param>
            <param name="value">value used for filter.</param>
        </member>
        <member name="T:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField">
            <summary>
            Analytics Sortable Field
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Visits">
            <summary>
            Visits
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.PageViews">
            <summary>
            Page views
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.UniqueViews">
            <summary>
            Unique Views
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.TimeOnSite">
            <summary>
            Time on site
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.TimeOnPage">
            <summary>
            Time on Page
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Bounces">
            <summary>
            Bounces
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Exits">
            <summary>
            Exists
            </summary>
        </member>
        <member name="F:Ektron.Cms.Analytics.Reporting.AnalyticsSortableField.Entrances">
            <summary>
            Entraces
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.Reporting.AnalyticsReportData">
            <summary>
            Analytics Report Data 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.Add(Ektron.Cms.Analytics.Reporting.AnalyticsReportItem)">
            <summary>
            Add method
            </summary>
            <param name="reportItem">report item</param>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayAverageTimeSpanOnSite(System.DateTime)">
            <summary>
            Day Averafe Time Span on Site 
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayAverageTimeOnPage(System.DateTime)">
            <summary>
            Returns the Day Average time on page
            </summary>
            <param name="dateTime">Date / Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayAverageTimeSpanOnPage(System.DateTime)">
            <summary>
            Day Average Time Span on Page
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayBounceRate(System.DateTime)">
            <summary>
            Day Bounce Rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayExitRate(System.DateTime)">
            <summary>
            Day Exit Rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.DayPagesPerVisit(System.DateTime)">
            <summary>
            Day pages per visit
            </summary>
            <param name="dateTime">Day Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.PercentNewVisits(System.DateTime)">
            <summary>
            Percent new visits
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthVisits(System.DateTime)">
            <summary>
            Montly Visits
            </summary>
            <param name="dateTime">Date Time</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthPageViews(System.DateTime)">
            <summary>
            Month Page Views
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthUniqueViews(System.DateTime)">
            <summary>
            Month Unique Views
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthTimeOnSite(System.DateTime)">
            <summary>
            Month Time on Site
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthBounces(System.DateTime)">
            <summary>
            Month Bounces
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthExits(System.DateTime)">
            <summary>
            Monthly Exits
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthEntrances(System.DateTime)">
            <summary>
            Month Entrances
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeOnSite(System.DateTime)">
            <summary>
            Month Average Time on Site
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeSpanOnSite(System.DateTime)">
            <summary>
            Monthly Average Time Span on Site
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeOnPage(System.DateTime)">
            <summary>
            Monthly Average Time On Page
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthAverageTimeSpanOnPage(System.DateTime)">
            <summary>
            Month Average Time Span on Page
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthBounceRate(System.DateTime)">
            <summary>
            Monthl Bounce Rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthExitRate(System.DateTime)">
            <summary>
            Monthly Exit rate
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthPagesPerVisit(System.DateTime)">
            <summary>
            Montly Pages per visit
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MonthPercentNewVisits(System.DateTime)">
            <summary>
            Month Percent New Visits
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.HasChildren">
            <summary>
            Has Children
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.ReportDataSet">
            <summary>
            Report Data Set for dynamics data
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.Segment">
            <summary>
            Segment Data
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalResults">
            <summary>
            Total Results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalVisits">
            <summary>
            Total Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalPageViews">
            <summary>
            Total Page Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalUniqueViews">
            <summary>
            Total Unique Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalTimeOnSite">
            <summary>
            Total time on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalTimeOnPage">
            <summary>
            Total Time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalBounces">
            <summary>
            Total Bounces
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalExits">
            <summary>
            Total Exits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalEntrances">
            <summary>
            Total Entrances
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalNewVisits">
            <summary>
            Total New Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeOnSite">
            <summary>
            Total Average time on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeOnPage">
            <summary>
            Total Average time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeSpanOnSite">
            <summary>
            Total Average Time Span on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalAverageTimeSpanOnPage">
            <summary>
            Total Average time Span on page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalBounceRate">
            <summary>
            Total Bounce Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalExitRate">
            <summary>
            Total Exit Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalPagesPerVisit">
            <summary>
            Total Pages per visit
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.TotalPercentNewVisits">
            <summary>
            Total Percent New Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumVisits">
            <summary>
            Maximum Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumPageViews">
            <summary>
            Maximum Page views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumUniqueViews">
            <summary>
            Maximum unique views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumTimeOnSite">
            <summary>
            Maximum time on site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumTimeOnPage">
            <summary>
            Maximum time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumExits">
            <summary>
            Maximum Exits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.MaximumEntrances">
            <summary>
            Maximum Entraces
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.ReportItems">
            <summary>
            Report items
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportData.GetDateTimes">
            <summary>
            Get Date Times
            </summary>
        </member>
        <member name="T:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem">
            <summary>
            AnalyticsReportItem class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="name">name</param>
            <param name="visits">visits</param>
            <param name="pageViews">page Views</param>
            <param name="uniqueViews">unique views</param>
            <param name="timeOnSite">time on site</param>
            <param name="timeOnPage">time on page</param>
            <param name="bounces">bounces</param>
            <param name="exits">exits</param>
            <param name="entrances">entrances</param>
            <param name="newVisits">new Visits</param>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="name">name</param>
            <param name="visits">visits</param>
            <param name="pageViews">page Views</param>
            <param name="uniqueViews">unique Views</param>
            <param name="timeOnSite">Time on site</param>
            <param name="timeOnPage">Time on Page</param>
            <param name="bounces">bounces</param>
            <param name="exits">exits</param>
            <param name="entrances">entrances</param>
            <param name="newVisits">new Visits</param>
            <param name="date"></param>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Visits">
            <summary>
            Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PageViews">
            <summary>
            Page Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.UniqueViews">
            <summary>
            Unique Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.TimeOnSite">
            <summary>
            Time on Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.TimeOnPage">
            <summary>
            Time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Bounces">
            <summary>
            Bounces
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Exits">
            <summary>
            Exits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Entrances">
            <summary>
            Entrances
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.NewVisits">
            <summary>
            New Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.MobileViews">
            <summary>
            Mobile Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Reloads">
            <summary>
            Reloads
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Visitors">
            <summary>
            Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.KBytes">
            <summary>
            K bytes
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ClickThrough">
            <summary>
            Click through
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Revenue">
            <summary>
            Revenue
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.DailyVisitors">
            <summary>
            Daily Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.MonthlyVisitors">
            <summary>
            Monthly Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.NewVisitors">
            <summary>
            New Visitors
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PercentOfVisits">
            <summary>
            Percent of Visits
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Units">
            <summary>
            units
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Instances">
            <summary>
             Instances
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PercentofPreviousStep">
            <summary>
            Percent of Previous Step
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ConversionRate">
            <summary>
            Converstion Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Subscriptions">
            <summary>
             Subscriptions
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ArticleRequest">
            <summary>
            Article Request
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.FeedRead">
            <summary>
            Feed Read
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Events">
            <summary>
            Events
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Post">
            <summary>
            Posts
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Comments">
            <summary>
            Comments
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageRevenue">
            <summary>
            Average Revenue
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageUnitPerCycle">
            <summary>
            Average Unit Per Cycle
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.DailyBuyer">
            <summary>
            Daily Buyer
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.MonthlyBuyer">
            <summary>
            Monthly Buyer
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CartAdd">
            <summary>
            Cart Add
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CartRemove">
            <summary>
            Cart Remove
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.EmailCampaigns">
            <summary>
            Email Campaigns
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CheckoutsStarted">
            <summary>
            Checkouts Started
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.CartCompletions">
            <summary>
            Cart Completions
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ProductViews">
            <summary>
            Product Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ClickthroughRate">
            <summary>
            Click through Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.OnsiteAdClickthroughs">
            <summary>
            On site Ad Click thoughs
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.OnsiteAdImpressions">
            <summary>
            On site ad impressions
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AveragePageViews">
            <summary>
            Average Page Views
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeOnSite">
            <summary>
            Average Time on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeSpanOnSite">
            <summary>
            Average Time Span on Site
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeOnPage">
            <summary>
            Average time on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.AverageTimeSpanOnPage">
            <summary>
            Average time Span on Page
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.BounceRate">
            <summary>
            Bounce Rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.ExitRate">
            <summary>
            Exit rate
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PagesPerVisit">
            <summary>
            Pages per visit
            </summary>
        </member>
        <member name="P:Ektron.Cms.Analytics.Reporting.AnalyticsReportItem.PercentNewVisits">
            <summary>
            Percent New Visits
            </summary>
        </member>
        <member name="M:Ektron.Cms.Analytics.Reporting.YearTotalData.MonthVisits(System.DateTime)">
            //////////////
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentMethods.PayPalResponse.Response">
            <summary>
            The raw response from the gateway.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetCalendarICalendarString(System.Int64)">
            <summary>
            gets the feed for the entire calendar, properly wrapped with ical standards.
            </summary>
            <param name="calendarid"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(System.Int64)">
            <summary>
            returns the event details in icalendar format, without the surrounding vcalendar information.
            if the specified event is a variance, returns details for the parent event with all variances.
            </summary>
            <param name="eventid"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(System.Int64,System.Boolean)">
            <summary>
            returns the event details, with optional wrapping of vcalendar information required by the ical format. 
            if the specified event is a variance, returns details for the parent event with all variances.
            </summary>
            <param name="eventid"></param>
            <param name="wrap"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            returns the event details in icalendar format, without the surrounding vcalendar information.
            </summary>
            <param name="eventData"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(Ektron.Cms.Common.Calendar.WebEventData,System.Boolean)">
            <summary>
            returns the event details, with optional wrapping of vcalendar information required by the ical format.
            </summary>
            <param name="eventData">eventdata</param>
            <param name="wrap">wrap</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.IWebEventManager.GetEventICalendarString(Ektron.Cms.Common.Calendar.WebEventData,System.Collections.Generic.List{Ektron.Cms.Common.Calendar.WebEventData})">
            <summary>
            returns the icalendar string with any variances specified by the second parameter. this will not wrap the resulting string with required icalendar fields.
            </summary>
            <param name="eventData"></param>
            <param name="variances"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebCalendarData.IsValid(Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults)">
            <summary>
            Validates the Calendar object and returns a list of errors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.CreateVariance(System.DateTime)">
            <summary>
            Creates a variance event for the current recurring event.
            </summary>
            <param name="occurrenceStartUtc">The event occurance date for which to create a variance.</param>
            <returns>An unsaved WebEvent representing the event variance/</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.CreateVariance(System.DateTime,System.DateTime)">
            <summary>
            Creates a variance event for the current recurring event.
            </summary>
            <param name="originalStartUtc">The event occurance date for which to create a variance.</param>
            <param name="newStartUtc">The new occureance start date (UTC).</param>
            <returns>An unsaved WebEvent representing the event variance/</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetOriginalTimeZoneEventStart">
            <summary>
            Returns the recurring EventStart in the originating timezone.  This time should remain consistent for all occurrences.  This method is only applicable
            to reccurring events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetEventStartUtcForOccurrence(System.DateTime)">
            <summary>
            Returns the EventStartUtc for a specific event occurrence.   This method is only applicable
            to reccurring events.
            </summary>
            <param name="occurrenceDate"></param>
            <returns></returns>
            <remarks>
            The EventStartUtc time is based upon the EventStart for originating timezone and may fluctuate.  The
            local EventStart for the originating timezone will always remain consistent.  For example, an 8:00 AM ET is consistent in both standard and 
            daylight time and therefore, the UTC value may change based upon the occurrence date.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetEventStartUtcForOccurrence(Ektron.Cms.Common.Calendar.WebEventData,System.DateTime)">
            <summary>
            Returns the EventStartUtc for event occurrence on the supplied date.   This method is only applicable
            to reccurring events.
            </summary>
            <param name="occurrenceDate"></param>
            <returns></returns>
            <remarks>
            The EventStartUtc time is based upon the EventStart for originating timezone and may fluctuate.  The
            local EventStart for the originating timezone will always remain consistent.  For example, an 8:00 AM ET is consistent in both standard and 
            daylight time and therefore, the UTC value may change based upon the occurrence date.
            
            Exposing this statically so the logic can be used by Recurrencemanagers without creating instance of WebEvent as they only require WebEventData classes.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.Validate">
            <summary>
            Validates the event object and returns a list of errors.
            </summary>
            <returns>List of errors.</returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.GetOriginalTimeZoneEventStart(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Returns the recurring EventStart in the originating timezone.  This time should remain consistent for all occurrences.  This method is only applicable
            to reccurring events.
            </summary>
            <returns></returns>
            <remarks>Exposing this statically so the logic can be used by Recurrencemanagers without creating instance of WebEvent as they only require WebEventData classes.</remarks>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.Clone">
            <summary>
            Returns  aclone of the current WebEventData object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Common.Calendar.WebEventData.CopyEventData(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Copies EventData from one instance to another.
            </summary>
            <param name="sourceEvent">Source event to copy data from.</param>
            <param name="destinationEvent">Destination event to copy data to.</param>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.OriginalTimeZone">
            <summary>
            gets or sets the original timezone for this event
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CurrentTimeZone">
            <summary>
            Gets or sets the current timezone for the event.  
            </summary>
            <remarks>
            Setting the timezone will alter the value of the EventStart property based upon the new timezone's UTC Bias.  
            The underlying UTC value of this event's eventstart property will not change.  
            However, any new values appplied to eventstart will use the new TimeZone when setting the underlying EventStartUtc value.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.DisplayTitle">
            <summary>
            Gets or sets the Display Title of Event.  This could be different than the base Content.Title if this is  avariant of a recurring event.
            In thatcase the Contnet.Title may be "Event Name (2)" and the DisplayTitle would still be "Event Name".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Description">
            <summary>
            Gets or sets the description of the event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Location">
            <summary>
            Gets or sets the location of the event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventStartUtc">
            <summary>
            Gets or sets the the Event Start time of the event in UTC time.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventStart">
            <summary>
            Gets and sets the event's start time based upon the current timezone.
            </summary>
            <remarks>
            Setting this value will alter EventStartUTC based upon the current timezone's UTC bias.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventEndUtc">
            <summary>
            Gets or sets the the Event End time of the event in UTC time.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.EventEnd">
            <summary>
            Gets and sets the event's end time based upon the current timezone.
            </summary>
            <remarks>
            Setting this value will alter EventEndUTC based upon the current timezone's UTC bias.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.UtcOffset">
            <summary>
            Gets the UtcOffset of the current timezone.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Duration">
            <summary>
            Gets or sets the current duration of the event.  Changing this will affect the EventEnd time.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.Recurrence">
            <summary>
            Gets or sets the current recurrence pattern for the event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsAllDay">
            <summary>
            Gets or sets the IsAllDay flag of the event.  A true value means the event is  an all day event with no actual start\end.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsVariance">
            <summary>
            Gets or sets the IsVariance flag for the event.  A true value means this event is a variance of an occurrence of a recurring event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsCancelled">
            <summary>
            Gets or sets the IsVariance flag for the event.  A true value means that this event is a cancelled occurrence of  a recurring event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.OriginalStartUtc">
            <summary>
            Gets or sets the OriginalStartUtc time.  The orginal OriginalStartUtc is the UTC time of the orginal occurence of  a recurring event.  
            </summary>
            <remarks>
            It is used to calculate TimeZone adjusted times of event occurences.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.ParentEventId">
            <summary>
            Gets or sets the recurrenceId of the the Event.  The RecurrenceId is the EventId of the original recurring event.  
            </summary>
            <remarks>
            This value is needed to tie event variances back to the original recurring event.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.IsRecurring">
            <summary>
            Gets a boolean value indicationg if the current event is a recurring event.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CurrentEditor">
            <summary>
            Filled with the current editor if there is one.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CanEdit">
            <summary>
            indicates whether the current user has permission to edit the event. Only filled when loaded from GetWebEventList
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.Calendar.WebEventData.CanDelete">
            <summary>
            indicates whether the current user has permission to delete the event. Only filled when loaded from GetWebEventList
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.Calendar.WebEventVarianceDictionary">
            <summary>
            Specialized Dictionary class for organizing event variances.  Key is the recurring event Id.
            Value is  collection of WebEvents that are variances associated with the original recurring event.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.SubscriptionProductData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider">
            <summary>
            Base Provider for creating SubscriptionTypes in Cms400.Net eCommerce.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ProcessSubscription(System.Int64,System.String,System.String)">
            <summary>
            Processes a new subscription.  This is called when new subscriptions are purchased.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
            <param name="transactionId">Id of transaction for this specific payment.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ProcessSubscriptionPayment(System.Int64,System.String,System.String)">
            <summary>
            Processes a subscription Payment.  This is called when a new payment is processed
            for an existing subscription.  If no changes need to be made on a subscription payment, the method does not need to be implemented.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
            <param name="transactionId">Id of transaction for this specific payment.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.CancelSubscription(System.Int64,System.String)">
            <summary>
            Processes a cancelled subscription.  This is called when a subscription is cancelled for any reason.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ProcessPaymentError(System.Int64,System.String)">
            <summary>
            Process a payment error for a subscription.  This is called when an error occurs for  any payment associated with subscription.
            </summary>
            <param name="orderId">Id of order associated with transaction.</param>
            <param name="recurringTransactionId">id of entire recurring Transaction.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.GetItemSubscriptionInfo(System.Int64,System.Int64)">
            <summary>
            Returns an object representing the subscription product's information.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.SaveSubscriptionInfo(System.Int64,System.Int64,System.Object,System.Data.IDbTransaction)">
            <summary>
            Persists the subscription information when a product is saved.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="subscriptionInfo">Object representing the subscription information</param>
            <param name="transaction">transaction to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.DeleteSubscriptionInfo(System.Int64,System.Int64,System.Data.IDbTransaction)">
            <summary>
            Deletes the subscription information when a product is deleted.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="transaction">transaction to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.ValidateSubscriptionInfo(System.Int64,System.Int64,System.Object,System.Data.IDbTransaction)">
            <summary>
            Validates the subscription information for a product. If false, the system will throw an exception when attempting to save.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="subscriptionInfo">Object representing the subscription information</param>
            <param name="transaction">transaction to use.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.IsSubscribed(System.Int64,System.Int64,System.Int64)">
            <summary>
            Returns whether the user is already subscribed.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <param name="userId">Long value for the user id.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.CanReSubscribe(System.Int64,System.Int64)">
            <summary>
            Returns whether users can resubscribe to the entry.
            </summary>
            <param name="entryId">Long value for the entry id.</param>
            <param name="entryLanguage">Long value for the entry language id.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Commerce.Subscriptions.SubscriptionTypeProvider.RequestInformation">
            <summary>
            Gets requestInformation.  By default, gets current RequestInformation.  Can also be set with overriden RequestInformation
            if needed.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.Reporting.OrderReportData">
            <summary>
            Class representing order reporting.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.Reporting.OrderReportData.TotalOrders">
            <summary>
            Total number of orders for this query.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Errors">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CannotCreateVarianceFromNonRecurrence">
            <summary>
              Looks up a localized string similar to Cannot create a variance from a non-recurring event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CannotCreateVarianceFromVariance">
            <summary>
              Looks up a localized string similar to Cannot create a variance from a variance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_IdRequired">
            <summary>
              Looks up a localized string similar to A valid non negative value is required for Country Id..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_LongIso3Chars">
            <summary>
              Looks up a localized string similar to The Long Iso Code property must be 3 characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_NameRequired">
            <summary>
              Looks up a localized string similar to The Name property is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Country_ShortIso2Chars">
            <summary>
              Looks up a localized string similar to The Short Iso Code property must be 2 characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CountryDelete_AddressesExist">
            <summary>
              Looks up a localized string similar to Addresses exist using this country..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CountryDelete_RegionExist">
            <summary>
              Looks up a localized string similar to Regions exist using this country..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Coupon_CodeRequired">
            <summary>
              Looks up a localized string similar to A Coupon code is required for saving..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Coupon_DiscountRequired">
            <summary>
              Looks up a localized string similar to A Discount greater than 0 is required for  a coupon..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CurrencyPricing_CurrencyIdRequired">
            <summary>
              Looks up a localized string similar to CurrencyId is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CurrencyPricing_ListPriceRequired">
            <summary>
              Looks up a localized string similar to ListPrice is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.CurrencyPricing_SingleTierRequired">
            <summary>
              Looks up a localized string similar to The TierPrice for the quantity of 1 is required for CurrencyPricing..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_InvalidDate">
            <summary>
              Looks up a localized string similar to Invalid value supplied for date.  Must be between 1 and 31 or be = -1..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_InvalidDayOfMonth">
            <summary>
              Looks up a localized string similar to Invalid value supplied for dayOfMonth.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_InvalidMonthOfYear">
            <summary>
              Looks up a localized string similar to monthOfYear must be between 1 and 12..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.EventRecurrence_MultipleLessThanZero">
            <summary>
              Looks up a localized string similar to recurrenceMultiple cannot be less than 0..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_BaseCurrencyRequired">
            <summary>
              Looks up a localized string similar to The Base Currency is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_EffectiveDateRequired">
            <summary>
              Looks up a localized string similar to The Effective date is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_ExchangeCurrencyRequired">
            <summary>
              Looks up a localized string similar to The Exchange Currency is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.ExchangeRate_RateRequired">
            <summary>
              Looks up a localized string similar to The Rate is required for an Exchange rate..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.InvalidOccurrenceStartUtc">
            <summary>
              Looks up a localized string similar to The supplied OccurrenceStartUtc is not a valid start time for this event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.PasswordHistory_HashRequired">
            <summary>
              Looks up a localized string similar to A password hash is required for saving...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.PasswordHistory_UserIdRequired">
            <summary>
              Looks up a localized string similar to A user id is required for saving...
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Region_CodeRequired">
            <summary>
              Looks up a localized string similar to The Region code is required and must be two characters..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Region_CountryId">
            <summary>
              Looks up a localized string similar to The Region&apos;s Country Id is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.Region_NameRequired">
            <summary>
              Looks up a localized string similar to The Region Name is required..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.RegionDelete_AddressesExist">
            <summary>
              Looks up a localized string similar to Addresses exist using this Region.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.TierPricing_PriceCannotBenegative">
            <summary>
              Looks up a localized string similar to The SalePrice cannot be negative..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.TierPricing_QuantityNegative">
            <summary>
              Looks up a localized string similar to The Quantity cannot be negative..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebCalendar_InvalidFolderType">
            <summary>
              Looks up a localized string similar to The WebCalendar must have a FolderType of EkEnumeration.FolderType.Calendar..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebCalendar_NameRequired">
            <summary>
              Looks up a localized string similar to The WebCalendar requires a name..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_InvalidOccurrenceDate">
            <summary>
              Looks up a localized string similar to The OccurrenceStart supplied is invalid for the event..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_ReccurrenceEndLessThanStart">
            <summary>
              Looks up a localized string similar to The Event Recurrence End date must be greater than the EventStart date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_RecurrenceStartMustEqualEventStart">
            <summary>
              Looks up a localized string similar to Recurrence Start and Event Start must be equal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_RecurringMethodException">
            <summary>
              Looks up a localized string similar to This method is only applicable to recurring events..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_StartGreaterThanEnd">
            <summary>
              Looks up a localized string similar to start date is greater than end date..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Errors.WebEvent_StartLessThanEnd">
            <summary>
              Looks up a localized string similar to The EventEnd date must be greater than the EventStart date..
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.AdjustedBasketItem">
            TODO: [derek] Do we need this or should we modify the BasketItem directly?
                  Should probably keep it seperate so that we can extend it as new price adjustments are introduced without bastardizing the Basket class.
             <summary>
             Class used to represent basket item price adjustments.
             </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.AdjustedBasketItem.#ctor(Ektron.Cms.Commerce.BasketItem)">
            <summary>
            Creates a new AdjustedBasketItem based upon base basketitem.
            </summary>
            <param name="basketItem"></param>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.AdjustedTotal">
            <summary>
            Gets or sets the Total Adjusted price for the line item.  
            This could reflect any coupon discounts, surcharges, etc applied to the item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.ApplicableTaxRate">
            <summary>
            Gets or sets the TaxRate class applicable to this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.TaxesApplied">
            <summary>
            Gets or sets the amount of tax applicable to this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.AppliedCoupons">
            <summary>
            Gets the list coupons applied to this basket item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.TotalCouponDiscount">
            <summary>
            Gets or sets the total coupon discount for this basket item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AdjustedBasketItem.HasFreeShipping">
            <summary>
            Gets or sets whether or not this item has a free shipping coupon applied.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.BasketCalculatorData.Initialize">
            <summary>
            Initializes the BasketCalculatorData and resets all calculated values.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.Basket">
            <summary>
            Gets or sets the Basket being calculated by the BasketCalculator.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.BasketCoupons">
            <summary>
            Gets or sets BasketCoupons.  These are all coupons that have been applied to the basket and their cumulative discount.
            If a coupon applies to more than one item, the discount amount for the coupon would be the total amount.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.AllBasketCoupons">
            <summary>
            Gets or sets AllBasketCoupons.  These are all coupons that have been applied to the basket regardless of the effect they have on the basket subtotal.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.AdjustedItems">
            <summary>
            Gets the list of adjusted basket items in the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.HasFreeShipping">
            <summary>
            Gets or sets whether or not this basket has  afree shipping coupon applied.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ShipFrom">
            <summary>
            Gets or sets the address from which the order would ship.  This could be used for shipping, tax calculations, etc.
            If it's ommited, the shipping and tax information will not be calculated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ShipTo">
            <summary>
            Gets or sets the address that the order is shipping to.  This could be used for shipping, tax calculations, etc.
            If it's ommited, the shipping and tax information will not be calculated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TaxClassSubtotals">
            <summary>
            Gets a dictionary representing the tax classes applicable to the basket with the amount of taxes applied to the basket for that tax class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ShippingRates">
            <summary>
            Gets a list of shipping rates for the basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalTaxes">
            <summary>
            Gets the total amount of taxes calculated for the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalShippingCost">
            <summary>
            Gets the total amount of shipping costs calculated for the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalCouponDiscount">
            <summary>
            Gets the total amount of coupons calculated for the current basket
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.BasketTotal">
            <summary>
            Gets the basket total based upon item prices, coupons, taxes, shipping and any other adjustments.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.TotalShippingTaxes">
            <summary>
            Gets the total amount of shipping taxes calculated for the current basket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.BasketCalculatorData.ValidationResults">
            <summary>
            Gets any ValidationResults encountered during calculation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.AppliedCouponData.#ctor(Ektron.Cms.Commerce.CouponData,System.Decimal)">
            <summary>
            
            </summary>
            <param name="coupon">sets the coupon being applied to the basketItem.</param>
            <param name="discount">sets the amount the coupon deducts from the price.</param>
        </member>
        <member name="P:Ektron.Cms.Commerce.AppliedCouponData.Coupon">
            <summary>
            Gets or sets the coupon being applied to the basketItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.AppliedCouponData.CouponDiscount">
            <summary>
            Gets or sets the amount the coupon deducts from the price.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ContractData.Id">
            <summary>
            Gets or sets the Id of the contract.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ContractData.Name">
            <summary>
            Gets or sets the contract name.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.PipelineStageData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.Authorize">
            <summary>
            Authorizes a payment, but does not capture it.  Returns authoization code so it can be captured at a later date.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.AuthorizeAndCapture">
            <summary>
            Authorizes and captures a payment.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.CapturePreauthorization(System.String)">
            <summary>
            Captures a preauthorized payment.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.Void(System.String)">
            <summary>
            Voids a preauthorized payment.
            </summary>
            <returns>Transaction Id of authorization.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.AuthorizeRecurringPayment(Ektron.Cms.Common.RecurrenceData)">
            <summary>
            Authorizes a recurring payment transaction.
            </summary>
            <param name="recurrence">recurring payment schedule</param>
            <returns>Recurring transaction id.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.CancelRecurringPayment(System.String)">
            <summary>
            Cancels a recurring payment.
            </summary>
            <param name="recurringTransactionId">id of recurring transaction to cancel.</param>
            <returns>Recurring transaction id.</returns>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.RecurringPaymentProcessed(System.String,System.String,System.String)">
            <summary>
            Handles a recurring payment that has been processed.  This method passes the processing on to the specified PaymentProvider.
            </summary>
            <param name="recurringTransactionId">Id of the recurring transaction</param>
            <param name="paymentTransactionId">Id of individual payment.</param>
            <param name="gatewayName">Name of the gateway to use for processing the payment.</param>
        </member>
        <member name="M:Ektron.Cms.Commerce.IPaymentManager.RecurringPaymentFailed(System.String,System.String)">
            <summary>
            Handles a recurring payment that has failed.  This method should be the callback point when a recurring payment has failed.
            </summary>
            <param name="recurringTransactionId">Id of the recurring transaction</param>
            <param name="gatewayName">Name of the gateway to use for processing the payment.</param>
        </member>
        <member name="T:Ektron.Cms.Commerce.PaymentAuthorization">
            <summary>
            Data class representing payment authorization from gateway.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.Gateway">
            <summary>
            Gets or sets the name of the gateway used for this authorization.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.TransactionId">
            <summary>
            Gets or sets the Transaction Id for this authorization.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.RecurringTransactionId">
            <summary>
            Gets or sets the Transaction id for a recurring transaction.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.Message">
            <summary>
            Gets or sets a success or error message for the authorization.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.AuthorizedOn">
            <summary>
            Gets or sets the authorization date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.CapturedOn">
            <summary>
            Gets or sets the Capture Date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.VoidedOn">
            <summary>
            Gets or sets the Voided Date.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.PaymentAuthorization.CreditedOn">
            <summary>
            Gets or sets the Credited Date.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Commerce.ShippingOptionData">
            <summary>
            Data class representing a quote for a particular shipping method.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingOptionData.ShippingFee">
            <summary>
            Gets or sets the fee for this particular shipping option.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Commerce.ShippingOptionData.CurrencyId">
            <summary>
            Gets or sets the currency associated with this shipping Fee.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.Cache.RequestCache`1">
            <summary>
            This class provides a mechanism to store objects for the lifetime 
            of a single request.
            
            Methods are static and generic, so no instance variable is required 
            and the desired object type is used without the need for type casting.
            
            Note that the cache entry Id is of type System.Uri, which may be 
            constructed inline with the method call.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Insert(System.String,`0)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Insert(System.String,System.String,`0)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="componentName">
            The identifier of the calling component.
            </param>
            <param name="item">
            The object, of type T, to add to the cache.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Invalidate(System.String)">
            <summary>
            Removes an object from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Invalidate(System.String,System.String)">
            <summary>
            Removes an object from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="componentName">
            The identifier of the calling component.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Get(System.String)">
            <summary>
            Retrieves an object of type T from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <returns>
            An object, of type T, from the cache. May be a default 
            value (such as null, depending on the type) if the object does 
            not exist in the cache
            </returns>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.RequestCache`1.Get(System.String,System.String)">
            <summary>
            Retrieves an object of type T from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="componentName">
            The identifier of the calling component.
            </param>
            <returns>
            An object, of type T, from the cache. May be a default 
            value (such as null, depending on the type) if the object does 
            not exist in the cache
            </returns>
        </member>
        <member name="T:Ektron.Cms.Common.Cache.CacheHelper">
            <summary>
            This class provides access to Ektron global Cache keys
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Insert(System.String,System.Object)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            This method is overloaded. See Also:
              * Insert(String,T)
              * Insert(String,T,String)
              * Insert(String,T,Double)
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Insert(System.String,System.Object,System.String)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
             This method is overloaded. See Also:
              * Insert(String,T)
              * Insert(String,T,String)
              * Insert(String,T,Double)
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
            <param name="dependency">
            Dependency relationship between an item stored in an ASP.NET application's Cache object and a file, of type string
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Insert(System.String,System.Object,System.Double)">
            <summary>
            Adds (or updates) an object of type T to the request cache.
            This method is overloaded. See Also:
              * Insert(String,T)
              * Insert(String,T,String)
              * Insert(String,T,Double)
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <param name="item">
            The object, of type T, to add to the cache
            </param>
            <param name="seconds">
            The time at which the inserted object expires and is removed from the cache,of type double
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Invalidate(System.String)">
            <summary>
            Removes an object from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
        </member>
        <member name="M:Ektron.Cms.Common.Cache.ApplicationCache.Get``1(System.String)">
            <summary>
            Retrieves an object of type T from the request cache.
            </summary>
            <param name="key">
            The unique identifier for the cached object.
            </param>
            <returns>
            An object, of type T, from the cache. May be a default 
            value (such as null, depending on the type) if the object does 
            not exist in the cache
            </returns>
        </member>
        <member name="T:Ektron.Cms.Common.SerializableDictionary`2">
            <summary>
            SerializableDictionary by Paul Welter
            http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Ektron.Cms.Common.FieldMapData.Deserialize(System.String)">
            <summary>        
            </summary>       
            <param name="xml"> </param> 
            <returns>Deserialize XML String</returns>           
        </member>
        <member name="P:Ektron.Cms.Common.FieldMappingData.OriginalField">
            <summary>
            The original field to be mapped.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Common.FieldMappingData.MappedField">
            <summary>
            The field that the original is mapped to.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.ActionRequestType">
            <summary>
            Enumeration identifying the different types of invitations.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.All">
            <summary>
            Default value - represents all invitations.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.FriendInvitation">
            <summary>
            Represents a friend invitation.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.JoinGroup">
            <summary>
            Represents a request to join a prviate group.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Community.ActionRequestType.GroupInvitation">
            <summary>
            Represents a Group invitation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.GetObjectType">
            <summary>
            Provides internal access to protected Object Type property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.SetSenderInfo(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            internal method for setting readonly props.
            </summary>
            <param name="userName">sender's user Name</param>
            <param name="email">sender's email address</param>
            <param name="firstName">sender's first name</param>
            <param name="lastName">sender's last name</param>
            <param name="displayName">sender's display name</param>
            <param name="avatar">sender's avatar.</param>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.Clone``1(``0)">
            <summary>
            Derived classes should call this method to clone all base properties.
            Returns clone in derived type.
            </summary>
            <typeparam name="T">The Derived Type to clone.</typeparam>
            <returns>Returns a clone of all base properties in the form of the derived invitation type.</returns>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRequestData.Clone">
            <summary>
            When Implemented by derived class, returns a clone of the current invitation.  Recipients are NOT copied over.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.Id">
            <summary>
            Id of the invitation.  Only set after save.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.ObjectId">
            <summary>
            Id of the object associated with invitation.  Related to invitation Type.  For example, for InvitatonType.Friend, 
            ObjectId is the userId of the user sending the friend request.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.RequestType">
            <summary>
            When implemented, returns the type of ActionRequest.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderId">
            <summary>
            User Id of the invitation sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderUserName">
            <summary>
            User Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderFirstName">
            <summary>
            First Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderDisplayName">
            <summary>
            Display Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderLastName">
            <summary>
            Last Name of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderEmail">
            <summary>
            Email of the sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.SenderAvatar">
            <summary>
            Avatar of the Sender.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.LanguageId">
            <summary>
            Language of invitation
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.Recipient">
            <summary>
            Recipient of the Request. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.RequestDate">
            <summary>
            Date the request was last sent. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRequestData.Errors">
            <summary>
            Returns error messages if there is something wrong with this invitation.  This property is only valid after the Invitation has been Validated.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Community.ActionRecipient.Clone">
            <summary>
            Returns a copy of the current InvitationRecipient.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.UserId">
            <summary>
            CMS User Id of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.UserName">
            <summary>
            CMS User name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.Email">
            <summary>
            Email address of the recipient
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.FirstName">
            <summary>
            First Name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.LastName">
            <summary>
            Last Name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.DisplayName">
            <summary>
            Display Name of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.Avatar">
            <summary>
            Avatar of the recipient.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.ActionRecipient.IsUser">
            <summary>
            Returns true if the recipient is a validated user.  This call is only valid after the Invitation has been Validated; otherwise false is returned regardless.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.ActionRecipientCollection">
            <summary>
            Specialized  collection of ActionRecipient objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagAssignmentData">
            <summary>
            Data class for Tag object assignments.
            </summary>
        </member>
        <member name="M:Ektron.Cms.TagAssignmentData.#ctor(Ektron.Cms.TagData,System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes)">
            <summary>
            Creates an object representing a Tag assignment.
            </summary>
            <param name="tag">The tag being assigned</param>
            <param name="objectId">Identifier of the object to which the tag is assigned</param>
            <param name="objectType">Type of the object to which the tag is assigned</param>
        </member>
        <member name="P:Ektron.Cms.TagAssignmentData.Tag">
            <summary>
            The tag being assigned
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagAssignmentData.ObjectId">
            <summary>
            Identifier of the object to which the tag is assigned
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagAssignmentData.ObjectType">
            <summary>
            Type of the object to which the tag is assigned
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.TagCloud">
            <summary>
            Data structure representing a tag cloud.  A tag cloud is a list of tags associated with a given object type.  
            Also includes the number of times each tag has been used for that object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloud.ObjectType">
            <summary>
            Type of object represented by the tag cloud.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloud.Tags">
            <summary>
            Tags in the cloud.  These tags are associated to ObjectType.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.TagCloudItem">
            <summary>
            Represents a Tag in a cloud.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudItem.Tag">
            <summary>
            The TagData object in the cloud.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudItem.Count">
            <summary>
            The number of times the tag has been used for the ObjectType of the cloud.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Community.TagCloudRequestData">
            <summary>
            Data structure used for requesting TagClouds from the Tag Api.
            </summary>
            <remarks>
            Default values:
            LanguageId = 1033
            PageSize = 50
            ObjectType = EkEnumeration.CMSObjectTypes.User
            OrderBy = TagCloudOrderBy.Text
            OrderAscending = false
            ObjectType = EkEnumeration.CMSObjectTypes.User
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Community.TagCloudRequestData.SetDefaultValues">
            <summary>
            Sets the TagCloudRequestData object back to its default values.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.LanguageId">
            <summary>
            Language of tags to retrieve.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.PageSize">
            <summary>
            The number of results to return with each request.
            Used in coordination with PageIndex to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.PageIndex">
            <summary>
            The page number to retrieve.
            Used in coordination with Pagesize to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.TagTypes">
            <summary>
            The Tag Type to retrieve
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.OrderBy">
            <summary>
            The order in which results should be sorted.  Used in conjunction with OrderAscending
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.OrderAscending">
            <summary>
            The order in which OrderBy should be sorted.  a true value means to order the results ascending; false means descending.
            For example, by default OrderBy = TaggedCount and OrderAscending = false.  This returns results order by taggedCount descending.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.OrderByDirection">
            <summary>
            The order in which OrderBy should be sorted.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Community.TagCloudRequestData.ObjectType">
            <summary>
            The type of CMS Object Type to build the cloud for.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagTypes">
            <summary>
            Defines the tag type.
            NOTE: this is a binary OR'd field...each must be a power of 2!!!
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.All">
            <summary>
            Represents all Tags.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.UserDefault">
            <summary>
            Represents a default tag on User objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.GroupDefault">
            <summary>
            Represents a default tag on Group objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.LibraryDefault">
            <summary>
            Represents a default tag on Library objects.
            </summary>
        </member>
        <member name="F:Ektron.Cms.TagTypes.ContentDefault">
            <summary>
            Represents a default tag on Content objects.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagData">
            <summary>
            Data class for Tag objects.
            </summary>
        </member>
        <member name="M:Ektron.Cms.TagData.#ctor(System.String)">
            <summary>
            constructor
            </summary>
            <param name="text">The Tags actual text.</param>
        </member>
        <member name="M:Ektron.Cms.TagData.#ctor(System.String,System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="text">The Tags actual text.</param>
            <param name="languageId">Language of tag</param>
        </member>
        <member name="M:Ektron.Cms.TagData.#ctor(System.String,System.Int32,System.Int64)">
            <summary>
            constructor
            </summary>
            <param name="text">The Tags actual text.</param>
            <param name="languageId">Language of tag</param>
            <param name="id">Id of the tag.  Should only be set for existing tags.  New tags will be given an id when they are saved.</param>
        </member>
        <member name="P:Ektron.Cms.TagData.Id">
            <summary>
            Id of Tag. Should only be set for existing tags. New tags will be given an id when they are saved.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.LanguageId">
            <summary>
            Language of tag
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.Text">
            <summary>
            The Tags actual text.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.Type">
            <summary>
            The type of tag.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagData.TotalUsedCount">
            <summary>
            returns the total number of times this tag has been used on an object.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagRequestData">
            <summary>
            Data structure used for requesting tags from the Tag Api.
            Default Ordering is TaggedCount, Descending (OrderAscending = false)
            </summary>
            <remarks>
            Default values:
            LanguageId = 1033
            PageSize = 0  (return all)
            PageIndex = 1
            ObjectType = EkEnumeration.CMSObjectTypes.User
            OrderBy = TagCloudOrderBy.TaggedCount
            OrderAscending = false
            </remarks>
        </member>
        <member name="M:Ektron.Cms.TagRequestData.SetDefaultValues">
            <summary>
            Sets the TagCloudRequestData object back to its default values.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.LanguageId">
            <summary>
            Language of tags to retrieve.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.PageSize">
            <summary>
            The number of results to return with each request.
            Used in coordination with PageIndex to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.PageIndex">
            <summary>
            The page number to retrieve.
            Used in coordination with Pagesize to "page" through results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.TagTypes">
            <summary>
            The Tag Type to retrieve
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.OrderBy">
            <summary>
            The order in which results should be sorted.  Used in conjunction with OrderAscending
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.OrderAscending">
            <summary>
            The order in which OrderBy should be sorted.  a true value means to order the results ascending; false means descending.
            For example, by default OrderBy = TaggedCount and OrderAscending = false.  This returns results order by taggedCount descending.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TagRequestData.OrderByDirection">
            <summary>
            The order in which OrderBy should be sorted.
            </summary>
        </member>
        <member name="T:Ektron.Cms.TagOrderBy">
            <summary>
            Enum representing properties to order a tag cloud by.  The default ordering is by tag count.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.FacebookCategoryProperty">
            <summary>
            Enumeration of FacebookCategoryData properties suitable for filtering and sorting.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.FacebookCategoryData">
            <summary>
            Data class representing Facebook Page Categories registed in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.Name">
            <summary>
            Gets or sets the Display Name of the Facebook Category
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.Code">
            <summary>
            Gets or sets the Facebook defined Code of the Category. For example "local_business".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.SiteId">
            <summary>
            Gets or sets the Siteid associated with this facebook category.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.FacebookCategoryData.IsEnabled">
            <summary>
            Gets or sets the IsEnabled flag for this category.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.SegmentProperty">
            <summary>
            Enumeration SegmentData properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Content.Targeting.SegmentData">
            <summary>
            Data class representing a Segment definition used by Content Targeting.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Content.Targeting.SegmentData.ToJson">
            <summary>
            Returns a JSON representation of the segment.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.SegmentData.Name">
            <summary>
            Gets or sets the name of the Segment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.SegmentData.Rules">
            <summary>
            Gets the Rules associated with this Segment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Content.Targeting.SegmentData.IsGlobal">
            <summary>
            Gets or sets the IsGlobal flag of the segments. IsGlobal indicates if this is a globally defined and shared segment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Context.Cache">
            <summary>
            Returns instance of ICachManager.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.ILocaleParser.getSelectedLanguageId">
            <summary>
            Obtain the users currently selected language. Exact methodology dertermined by implementor.
            The language ID returned to the caller will be used as the internally selected language for all Ektron APIs in this request cycle.
            If the returned language Id is 0 then the system default language will be used.
            </summary>
            <returns>An int32 representing the language code e.g. 1033 for US English</returns>
        </member>
        <member name="M:Ektron.Cms.Country.#ctor(System.String,System.String)">
             Creates a new Country.
            
             @param code the country code.
             @param name the country name.
        </member>
        <member name="M:Ektron.Cms.Country.getCode">
             Returns the ISO two-letter country code of this country.
            
             @return the country code.
        </member>
        <member name="M:Ektron.Cms.Country.getName">
             Returns the name of this country.
            
             @return the country name.
        </member>
        <member name="M:Ektron.Cms.DatabaseInfo.#ctor(System.String)">
            Creates a new DatabaseInfo object given the database info String.
            @param info
        </member>
        <member name="M:Ektron.Cms.DatabaseInfo.isPremium">
             Returns true if the database is the premium version.
            
             @return true if the premium version of the database.
        </member>
        <member name="M:Ektron.Cms.DatabaseInfo.getDate">
             Returns the date of the database.
            
             @return the date of the database.
        </member>
        <member name="T:Ektron.Cms.Marketing.ProgramEventProperty">
            <summary>
            Enumeration of ProgramEvent columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.CustomFieldProperty">
            <summary>
            Enumeration of CustomField columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.SubscriberCustomFieldProperty">
            <summary>
            Enumeration of SubscriberCustomField columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.BounceTypes">
            <summary>
            Enumeration of BounceTypes 
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.EmailQueueStatus">
            <summary>
            Enumeration of queueStatus 
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.EmailProperty">
            <summary>
            Enumeration of Email columns available for sorting and filtering.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Marketing.EmailData.SerializeToXML">
            <summary>        
            </summary>       
            <returns>Serialize XML String</returns>
        </member>
        <member name="M:Ektron.Cms.Marketing.EmailData.Deserialize(System.String)">
            <summary>        
            </summary>       
            <param name="xml"> </param> 
            <returns>Deserialize XML String</returns>           
        </member>
        <member name="M:Ektron.Cms.Marketing.SubjectsData.Deserialize(System.String)">
            <summary>        
            </summary>       
            <param name="xml"> </param> 
            <returns>Deserialize XML String</returns>           
        </member>
        <member name="T:Ektron.Cms.Marketing.QueueProperty">
            <summary>
            Enumeration of QueueData columns available for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.ListProperty">
            <summary>
            Enumeration of List columns available for sorting and filtering.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Marketing.ProgramData.IsValid(Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults)">
            <summary>
            Validates the Campaign object and returns a list of errors.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Marketing.SubscriberCriteria">
            <summary>
            Specialized criteria class for filtering subscribers by Product Field values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Marketing.SubscriberCriteria.AddFieldFilter(System.String,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Field based filter to the critaria object.
            </summary>
            <param name="FieldName">Name of Field to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the Field.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Marketing.SubscriberCriteria.AddFieldFilter(System.Int64,Ektron.Cms.Common.CriteriaFilterOperator,System.Object)">
            <summary>
            Adds a Field based filter to the critaria object.
            </summary>
            <param name="FieldId">Id of Field to filter on.</param>
            <param name="filterOperator">Filter operator to use for this filter.</param>
            <param name="value">Value of the Field.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.MessageTemplateData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.SubscriberMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.ILocaleContent">
            <summary>
            Locale API
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.ILocaleManager">
            <summary>
            Locale API
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.Add(Ektron.Cms.Localization.LocaleData)">
            <summary>
            Adds a new locale
            </summary>
            <param name="data">Locale data</param>
            <returns>Returns the custom CmsData object added</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.Update(Ektron.Cms.Localization.LocaleData)">
            <summary>
            Updates an existing locale
            </summary>
            <param name="data">Locale data</param>
            <returns>Returns the custom CmsData object updated</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.Delete(System.Int32)">
            <summary>
            Deletes an existing locale
            </summary>
            <param name="id">Unique ID of the locale</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetItem(System.Int32)">
            <summary>
            Get locale data by ID
            </summary>
            <param name="id">Unique ID of the locale</param>
            <returns>Locale data</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetList(Ektron.Cms.Common.Criteria{Ektron.Cms.Localization.LocaleProperty})">
            <summary>
            Gets a list of locale data given criteria
            </summary>
            <param name="criteria">Criteria defining which locales to get</param>
            <returns>List of locale data</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.FindLocale(System.Collections.Generic.List{Ektron.Cms.Localization.LocaleData},System.Int32)">
            <summary>
            Finds a locale given a list and an ID
            </summary>
            <param name="list">The list of locales to search</param>
            <param name="id">The locale ID</param>
            <returns>The locale with the given ID or null if not found.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetEnabledLocale(System.Int32)">
            <summary>
            Gets locale data for the given id, if it is enabled, otherwise returns null.
            </summary>
            <param name="id">A unique ID</param>
            <returns>An <see cref="T:Ektron.Cms.Localization.LocaleData"/> object or null</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetEnabledLocales">
            <summary>
            Gets list of locale data that are enabled.
            </summary>
            <returns>List of LocaleData</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetEnabledLocales(System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets list of locale data for the given list of ids, for each one that is enabled.
            </summary>
            <param name="ids">List of language ids</param>
            <returns>List of LocaleData</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.IsLocaleUsed(System.Int32)">
            <summary>
            Gets a value indicating whether the locale specified is or has been used.
            </summary>
            <param name="id">A unique ID</param>
            <returns>Returns true if the locale is in use, even if it is currently disabled.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.IsFallbackLocale(System.Int32)">
            <summary>
            Gets a value indicating whether the locale specified is a fallback locale for at least one other locale.
            </summary>
            <param name="id">A unique ID</param>
            <returns>Returns true if the locale is the fallback for another locale.</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocaleManager.GetContentLanguage(System.Int64,System.Int32)">
            <summary>
            Gets the content language given a requested content language for a given content ID 
            by following the fallback languages until an existing content is found.
            </summary>
            <param name="contentId">The ID of the content</param>
            <param name="preferredLanguageId">The requested language</param>
            <returns>The language for content that exists</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationManager.StartExportForTranslation(Ektron.Cms.Localization.LocalizationExportJob)">
            <summary>
            Exports the items specified in the job for translation asynchronously on a background thread.
            </summary>
            <param name="job">Specifies parameters for the export process.</param>
            <returns>The ID of the export job</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationManager.GetReport(Ektron.Cms.BusinessObjects.Localization.ReportingCriteria)">
            <summary>
            Returns a report of content localization.
            </summary>
            <param name="criteria">Criteria object for localization objects.</param>
            <returns>List of ReportingData objects</returns>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject">
            <summary>
            Localization Object API
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkReadyForTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as ready to be localized.
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>ID of the "mark"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkNotReadyForTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as NOT ready to be localized. Published content is always considered ready for translation.
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>ID of the "mark"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkDoNotTranslate(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as do NOT translate. 
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>ID of the "mark"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkNeedsTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32,System.Int32)">
            <summary>
            Marks an object, e.g., content, as existing in the target language, but needs to be localized. 
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="targetLanguage">Language of the object needing translation, i.e., the target language</param>
            <param name="sourceLanguage">Original language of the object</param>
            <returns>Returns an ID to the database record of the "marking"</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkNeedsTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks an object, e.g., content, as existing in the target language, but needs to be localized. 
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object needing translation, i.e., the target language</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkOutForTranslation(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks that an object (for a given target language) is currently being translated
            </summary>
            <param name="objectType">The Localizable Cms Object Type</param>
            <param name="objectId">The ID of the object</param>
            <param name="objectLanguage">The target locale of the object</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.MarkTranslated(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Marks that an object (for a given target language) has been translated
            </summary>
            <param name="objectType">The Localizable Cms Object Type</param>
            <param name="objectId">The ID of the object</param>
            <param name="objectLanguage">The target locale of the object</param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetLocalizationObjectList(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Int32)">
            <summary>
            Get List of localization object, e.g., content, as ready to be localized.
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <param name="objectLanguage">Language of the object</param>
            <returns>List of Localization Object</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetObjectLanguages(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64)">
            <summary>
            Gets the list of languages that exist for the given CMS object
            </summary>
            <param name="objectType">Type of the object, e.g., content, form, taxonomy</param>
            <param name="objectId">ID of the object</param>
            <returns>A list of locale IDs</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetContentLocalizationState(System.Int64,Ektron.Cms.ContentData)">
            <summary>
            Get the localization state of the specified content.
            </summary>
            <param name="contentId">Id of the content</param>
            <param name="contentData">ContentData object of the content specified</param>
            <returns>Localization state e.g., Ready for translation, Not ready for translation, Do not translate, Needs translation, Out for translation, Translated</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.GetContentLocalizationState(System.Int64,Ektron.Cms.ContentData,System.Int32@,System.DateTime@)">
            <summary>
            Get the localization state of the specified content.
            </summary>
            <param name="contentId">Id of the content</param>
            <param name="contentData">ContentData object of the content specified</param>
            <param name="sourceLanguage">If content is a translation (or will be), sourceLanguage is the original language, otherwise -1</param>
            <param name="sourceDateModified">If content has been translated, the date the original source was last edited, otherwise DateTime.MinValue</param>
            <returns>Localization state e.g., Ready for translation, Not ready for translation, Do not translate, Needs translation, Out for translation, Translated</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Localization.ILocalizationObject.Delete(System.Int64)">
            <summary>
            Deletes the LocalizationObject record from the database
            </summary>
            <param name="id">The record ID as LocalizationObjectData.Id or returned by MarkReadyForTranslation or MarkNeedsTranslation</param>
        </member>
        <member name="T:Ektron.Cms.Localization.LanguageTag">
            <summary>
            IETF Language Tag
            BCP 47
            http://tools.ietf.org/html/bcp47
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.#ctor">
            <summary>
            Initializes a new instance of the LanguageTag class.
            IETF Language Tag
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LanguageTag class.
            IETF Language Tag
            </summary>
            <param name="languageTag">The language tag, e.g., en-US, az-Cyrl-AZ, zh-Hans, und-002, x-piglatin</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the LanguageTag class.
            IETF Language Tag
            </summary>
            <param name="languageSubtag">The language subtag, e.g., en, az, zh, und, but may contains script or region, e.g., en-GB, zh-Hans</param>
            <param name="scriptSubtag">The script subtag, e.g., Cyrl, Hans</param>
            <param name="regionSubtag">The region subtag, e.g., US, AZ, 002</param>
            <param name="privateUseSubtag">The private use subtag, e.g., piglatin, but may contain x-, e.g., x-piglatin</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.ToString">
            <summary>
            Returns the language tag, e.g., en-US, az-Cyrl-AZ, zh-Hans, und-002, x-piglatin
            </summary>
            <returns>The language tag as a string</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LanguageTag.GetSuppressedScript(System.String)">
            <summary>
            Gets the script subtag that is suppressed for the given language subtag
            </summary>
            <param name="languageSubtag">The given language subtag</param>
            <returns>The suppressed script subtag or empty string is none is suppressed.</returns>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.LanguageSubtag">
            <summary>
            Gets or sets the language subtag
            language     = 2*3ALPHA            ; shortest ISO 639 code
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.ScriptSubtag">
            <summary>
            Gets or sets the script subtag
            script        = 4ALPHA              ; ISO 15924 code
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.RegionSubtag">
            <summary>
            Gets or sets the region subtag
            region        = 2ALPHA              ; ISO 3166-1 code
                          / 3DIGIT              ; UN M.49 code
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.PrivateUseSubtag">
            <summary>
            Gets or sets the private-use subtag
             privateuse    = "x" 1*("-" (1*8alphanum))
             NOTE: Do not include the "x-"
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LanguageTag.RegistryUri">
            <summary>
            Gets or sets the Uri to language-subtag-registry.xml
            Used by ToString() to suppress assumed script subtags.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableCmsObjectType">
            <summary>
            CMS object types that can be localized, i.e., using XLIFF
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Content">
            <summary>
            HTML content, HTML forms, Smart Form data content
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.DmsAsset">
            <summary>
            DMS asset, e.g., multimedia, images, documents
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.ContentHistory">
            <summary>
            An historical version of HTML content, HTML forms, Smart Form data content
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.DmsAssetHistory">
            <summary>
            An historical version of DMS asset, e.g., multimedia, images, documents
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.FolderContents">
            <summary>
            CMS folder contents
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.FolderTree">
            <summary>
            CMS folder tree
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Menu">
            <summary>
            CMS menu tree
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.MenuItem">
            <summary>
            CMS menu items
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Taxonomy">
            <summary>
            CMS taxonomy tree
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.LocaleTaxonomy">
            <summary>
            Locale taxonomy that defines relationship between CMS objects and their associated locales.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizableCmsObjectType.Product">
            <summary>
            Product items
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem">
            <summary>
            Stores the ID of a localizable item, but not the object itself.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.#ctor(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Boolean,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the LocalizableItem class.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="recursive">Indicates whether the item includes all of its descendants</param>
            <param name="id">ID of this item</param>
            <param name="languageIds">List of locale IDs associated with this item</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.#ctor(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Initializes a new instance of the LocalizableItem class.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
            <param name="languageIds">List of locale IDs associated with this item</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.#ctor(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64)">
            <summary>
            Initializes a new instance of the LocalizableItem class.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.LocalizableType">
            <summary>
            Gets the type of this CMS object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.Recursive">
            <summary>
            Gets a value indicating whether the item includes all of its descendants
            </summary>
            <remarks>Only applies to item types that have a hierarchical structure (e.g., folders, menus, taxonomy).</remarks>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.Id">
            <summary>
            Gets the ID of this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.LanguageIds">
            <summary>
            Gets the list of locale IDs associated with this item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.NeedsTranslation">
            <summary>
            Gets the list of stored results of whether or not the item needs to be translated into a language (the key is the language id).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.References">
            <summary>
            Gets or sets the list of items that this item references through meta data.
            </summary>
            <remarks>For example, if this item is a JPEG image, it may depend on a Photoshop file.
            The reverse relationship is expressed in the <see cref="P:Ektron.Cms.Localization.LocalizableItem.ReferencedBy"/> property.</remarks>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.ReferencedBy">
            <summary>
            Gets or sets the list of items that depend on this item and in what way, which corresponds to the meta data type name. May be null.
            </summary>
            <remarks>For example, if this item is a Photoshop file, it may be referenced by a JPEG image.
            The reverse relationship is expressed in the <see cref="P:Ektron.Cms.Localization.LocalizableItem.References"/> property.</remarks>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem.ReferenceType">
            <summary>
            Defines a reference relationship
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.ReferenceType.#ctor(Ektron.Cms.Localization.LocalizableItem,System.String)">
            <summary>
            Initializes a new instance of the ReferenceType class.
            </summary>
            <param name="item">The item</param>
            <param name="typeName">The reference type</param>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.ReferenceType.Item">
            <summary>
            Gets the item 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableItem.ReferenceType.TypeName">
            <summary>
            Gets the reference type, which corresponds to the meta data type name, for example, XliffReferenceSource.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem.ReferenceType.EqualityComparer">
            <summary>
            IEqualityComparer for class ReferenceType
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.ReferenceType.EqualityComparer.Equals(Ektron.Cms.Localization.LocalizableItem.ReferenceType,Ektron.Cms.Localization.LocalizableItem.ReferenceType)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.ReferenceType.EqualityComparer.GetHashCode(Ektron.Cms.Localization.LocalizableItem.ReferenceType)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableItem.EqualityComparer">
            <summary>
            IEqualityComparer for class LocalizableItem
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.EqualityComparer.Equals(Ektron.Cms.Localization.LocalizableItem,Ektron.Cms.Localization.LocalizableItem)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizableItem.EqualityComparer.GetHashCode(Ektron.Cms.Localization.LocalizableItem)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizableAssetUpdateData">
            <summary>
            Defines a localizable AssetData for import.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizableAssetUpdateData.Status">
            <summary>
            Gets or sets the status for the imported content item for the AssetInfoData object.
            </summary>
            <remarks>For example, if the item status is marked as "checked in", then this field will be set to "I".
            This will import the asset with the status of "checked in".</remarks>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleProperty">
            <summary>
            Enumeration used for filtering user lists using Criteria.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Id">
            <summary>
            Unique ID of the Locale Data Property
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.LCID">
            <summary>
            Microsoft LCID
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Enabled">
            <summary>
            Whether or not locale is enabled (workarea or site)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.SiteEnabled">
            <summary>
            Whether or not locale is enabled for the site
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.EnglishName">
            <summary>
            Name in English
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.NativeName">
            <summary>
            Name in the local language
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Direction">
            <summary>
            Value for the HTML 'dir' attribute indicating whether or not the language is bi-directional
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Loc">
            <summary>
            Unique mnemonic ID
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.Culture">
            <summary>
            ASP.NET Culture property
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.UICulture">
            <summary>
            ASP.NET UICulture property
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.LangCode">
            <summary>
            ISO language code
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.XmlLang">
            <summary>
            IEFT language tag
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.FlagFile">
            <summary>
            Name of flag file
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleProperty.FallbackId">
            <summary>
            ID to the fallback locale
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving locales from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LanguageState">
            <summary>
            Indicates whether or not this locale is enabled in the CMS.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.Undefined">
            <summary>
            Can't be the case if it's in the database.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.Defined">
            <summary>
            The locale is defined in the system, but not enabled.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.Active">
            <summary>
            The locale is enabled for the workarea, but not the site. Of course, it is also Defined.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LanguageState.SiteEnabled">
            <summary>
            The locale is enabled for the site, and of course, for the workarea (Active) and Defined.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleData">
            <summary>
            Data class of locale information based on a record in the language_type database table.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocaleData.LocaleCustomUnspecified">
            <summary>
            Windows-defined LCID for custom locales
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.#ctor(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,Ektron.Cms.Localization.LanguageState)">
            <summary>
            Initializes a new instance of the LocaleData class.
            </summary>
            <param name="id">Unique ID (database key)</param>
            <param name="lcid">Microsoft LCID</param>
            <param name="englishName">Name in English</param>
            <param name="nativeName">Name in the local language</param>
            <param name="isRightToLeft">True if language is bi-directional</param>
            <param name="loc">Unique mnemonic ID</param>
            <param name="culture">ASP.NET Culture property</param>
            <param name="uiCulture">ASP.NET UICulture property</param>
            <param name="langCode">ISO language code</param>
            <param name="xmlLang">IEFT language tag</param>
            <param name="flagFile">Name of flag file</param>
            <param name="flagUrl">Host-relative URL of flag file</param>
            <param name="fallbackId">ID to the fallback locale</param>
            <param name="state">Enabled-state of this locale</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.#ctor">
            <summary>
            Initializes a new instance of the LocaleData class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Id">
            <summary>
            Gets or sets unique identifier. May be used in the LangType URL parameter.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.LCID">
            <summary>
            Gets or sets the Microsoft locale ID (LCID)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.EnglishName">
            <summary>
            Gets or sets the name of the locale in English.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.NativeName">
            <summary>
            Gets or sets the name of the locale in its native language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.CombinedName">
            <summary>
            Gets the combined native and English names, with HTML tags.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsRightToLeft">
            <summary>
            Gets or sets a value indicating whether the language is bi-directional (bi-di), e.g., Arabic and Hebrew.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Direction">
            <summary>
            Gets the HTML 'dir' attribute value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsPseudo">
            <summary>
            Gets whether the language is pseudo
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsMachineTranslation">
            <summary>
            Gets whether the language is pseudo
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Loc">
            <summary>
            Gets or sets the unique locale mnemonic identifier, which may be used in the 'loc' URL parameter.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Culture">
            <summary>
            Gets or sets the ASP.NET Culture property value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.UICulture">
            <summary>
            Gets or sets the ASP.NET UICulture property value.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.LangCode">
            <summary>
            Gets or sets the ISO language code, usually without the region subtag.
            </summary>
            <example>en, en-GB</example>
            <remarks>Languages that may (or may not) include a subtag include: 
            de-CH de-AT en-AU en-CA en-GB en-US es-419 es-ES fr-CA fr-CH nl-BE pt-BR pt-PT zh-Hans zh-Hant</remarks>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.XmlLang">
            <summary>
            Gets or sets the IETF language tag, used for XLIFF files. May be used for 'lang' and 'xml:lang' attributes.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.FlagFile">
            <summary>
            Gets or sets the file name of the flag icon (16x16 GIF image), e.g., flag0409.gif.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.FlagUrl">
            <summary>
            Gets or sets URL of the flag icon, e.g., /cms400/workarea/images/applications/flags/flag0409.gif
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.FallbackId">
            <summary>
            Gets or sets Id of the locale to fallback to if the object does not exist in this locale. Refers to the 'Id' of another locale.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.LanguageState">
            <summary>
            Gets or sets indication of whether or not this locale is enabled in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Enabled">
            <summary>
            Gets a value indicating whether or not this locale is enabled in the CMS, either for the site or workarea.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.SiteEnabled">
            <summary>
            Gets a value indicating whether or not this locale is enabled for the site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.IsCustomCulture">
            <summary>
            Gets a value indicating whether or not the locale is a Windows .NET custom culture. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocaleData.Tag">
            <summary>
            Gets the language tag as an object with its subtags.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocaleData.EqualityComparer">
            <summary>
            IEqualityComparer for class LocaleData
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.EqualityComparer.Equals(Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocaleData)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocaleData.EqualityComparer.GetHashCode(Ektron.Cms.Localization.LocaleData)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationExportJob">
            <summary>
            Parameters to export objects for translation
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationExportJob.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LocalizationExportJob class.
            </summary>
            <param name="jobTitle">Required title for the export job.</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationExportJob.AddItem(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64)">
            <summary>
            Adds an item to the list of Items.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationExportJob.AddItem(Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Adds an item to the list of Items.
            </summary>
            <param name="localizableType">The type of this CMS object</param>
            <param name="id">ID of this item</param>
            <param name="languageIds">List of locale IDs associated with this item</param>
            <returns>The newly added item</returns>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.JobTitle">
            <summary>
            Gets or sets required title for the export job.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.Items">
            <summary>
            Gets or sets list of items to export.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.SourceLanguageId">
            <summary>
            Gets or sets source language of the items to export (default to current ContentLanguage)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.TargetLanguageIds">
            <summary>
            Gets or sets default list of target languages to translate to. 
            A locale taxonomy language list supercedes this list. 
            This value is optional when exporting a locale taxonomy.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.XliffVersion">
            <summary>
            Gets or sets the version of XLIFF to use for the export files.
            Specify "1.0" for older versions of Trados, "1.1" or later for tools that support XLIFF.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.MaxCompressedFileSize">
            <summary>
            Gets or sets the maximum size (in bytes) of the created ZIP files that store the XLIFF files.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.PseudoLocalize">
            <summary>
            Gets or sets a value indicating whether content should be pseudo-localized and automatically re-imported.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationExportJob.MachineTranslate">
            <summary>
            Gets or sets a value indicating whether content should be machine translated and automatically re-imported.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationObjectData">
            <summary>
            Data class of localization object information based on a record in the LocalizationObjectTable database table.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationObjectData.#ctor(System.Int64,System.Int32,System.Int64,System.Int32,System.Boolean,System.DateTime,System.Int32,System.DateTime)">
            <summary>
            Initializes a new instance of the LocalizationObjectData class.
            </summary>
            <param name="id">Unique ID (database key)</param>
            <param name="objectType">Localization Object Type</param>
            <param name="objectId">Localization Object Id</param>
            <param name="objectLanguage">Localization Object Language</param>
            <param name="doNotTranslate">True if object is marked as "do not translate"</param>
            <param name="readyForTranslation">DateTime when the object is marked as "Ready for translation"</param>
            <param name="sourceLanguage">The Language locale ID of the source</param>
            <param name="sourceDateModified">DateTime when the source is return from translation</param>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationObjectData.#ctor">
            <summary>
            Initializes a new instance of the LocalizationObjectData class.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.Id">
            <summary>
            Gets or sets unique identifier. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ObjectType">
            <summary>
            Gets or sets localization object type. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ObjectId">
            <summary>
            Gets or sets the Id of the ObjectType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ObjectLanguage">
            <summary>
            Gets or sets the Language locale ID of the ObjectType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.DoNotTranslate">
            <summary>
            Gets or sets a value indicating whether the object is marked as "Do not translate".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.ReadyForTranslation">
            <summary>
            Gets or sets DateTime when the object is marked as "Ready for translation".
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.SourceLanguage">
            <summary>
            Gets or sets the Language locale ID of the source.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Localization.LocalizationObjectData.SourceDateModified">
            <summary>
            Gets or sets DateTime when the source is return from translation.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationState">
            <summary>
            Indicates the localizability of the object.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.Undefined">
            <summary>
            The state has not yet been initialized.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.Ready">
            <summary>
            The object is ready to be exported for localization.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.NotReady">
            <summary>
            The object is NOT ready to be exported for localization.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.DoNotTranslate">
            <summary>
            The object should NOT be exported for localization.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.NeedsTranslation">
            <summary>
            The object needs to be translated from its source language (SourceLanguage) into its (target) language.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.OutForTranslation">
            <summary>
            The object is currently in the process of being translated into its (target) language.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Localization.LocalizationState.Translated">
            <summary>
            The object has been translated from its source language (SourceLanguage) into its (target) language.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Localization.LocalizationStateExtensions">
            <summary>
            Extension methods for LocalizationState enum
            </summary>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationStateExtensions.IsSourceState(Ektron.Cms.Localization.LocalizationState)">
            <summary>
            Indicates whether the state is for a source locale for potential translation to other locales.
            </summary>
            <param name="state">The localization state in question</param>
            <returns>Returns true if the state indicates a translation source locale, false if not, unknown or should not be translated.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationStateExtensions.IsTargetState(Ektron.Cms.Localization.LocalizationState)">
            <summary>
            Indicates whether the state is for a target locale that has been translated from another source locale.
            </summary>
            <param name="state">The localization state in question</param>
            <returns>Returns true if the state indicates a translation target locale that has a source locale.</returns>
        </member>
        <member name="M:Ektron.Cms.Localization.LocalizationStateExtensions.IsExportableState(Ektron.Cms.Localization.LocalizationState)">
            <summary>
            Indicates whether the state is suitable for export for translation.
            </summary>
            <param name="state">The localization state in question</param>
            <returns>Returns true if the state indicates a locale (either source or target) is suitable for export for translation.</returns>
        </member>
        <member name="T:Ektron.Cms.Marketing.PageData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.PageProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Marketing.PageType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.WebEventMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.CreatedByUserID">
            <summary>
            Gets or sets the ID of the user who created the Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.CreatedbyUserName">
            <summary>
            Gets or sets the username of the person who created the Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.Views">
            <summary>
            Gets or sets how many times a Topic has been viewed.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.Priority">
            <summary>
            Gets or set the priority of the Topic. Choices are:
              * <b>Normal</b> - Topics with this priority follow Announcements and Sticky topics. The Normal icon (two users) next to the topic indicates its priority.
              * <b>Sticky</b> - topic appears near the top of the list, just below the announcements. If a list has more than one sticky topic, they are sorted by date with most recent on the top. The Sticky icon (an envelope with an up arrow) indicates its priority to the left of the Topic's title.
              * <b>Announcement</b> - topic always appears at the top of the list. If a list has more than one announcement, they are sorted by date with most recent on the top. The Announcement icon (an envelope) indicates its priority to the left of the Topic's title.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.LastPostedDate">
            <summary>
            Gets or sets the date of the most recently posted topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.LastMessageID">
            <summary>
            
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.Replies">
            <summary>
            Gets or sets the quantity of replies to a Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.StartingMessage">
            <summary>
            
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.AverageRating">
            <summary>
            Gets or sets the average rating for a Topic.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionTopic.LockTopic">
            <summary>
            Gets or sets whether to prevent all posting to this Discussion Topic. You can do this 
            temporarily or permanently. If a Board is locked, only Administrator user group members can
            create, edit or delete posts. 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Categories">
            <summary> 
            Gets or sets the categories for a discussion board using the DiscussionCategory data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Forums">
            <summary> 
            Gets or sets Forum information for the Discussion Board using the DiscussionForum data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.IPBanned">
            <summary> 
            Gets or sets whether an IP is restricted from posting on the Discussion Board. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Title">
            <summary> 
            Gets or sets the Title of the Discussion Board. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.ModerateComments">
            <summary> 
            Gets or sets whether a Discussion Board's comments are moderated. 
            * <b>True</b> = Moderation is on 
            * <b>False</b> = Moderation is off 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.RequireAuthentication">
            <summary> 
            Gets or sets whether a site visitor must sign in before he can post to the Discussion Board. 
            * <b>True</b> = site visitor must sign in before he can post to a Discussion Board. 
            * <b>False</b> = site visitors can post to a Discussion Board without signing in. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.TermsAndConditions">
            <summary> 
            Gets or sets the Terms and Conditions for a Discussion Board. By entering text in this property 
            and saving, you activate the Terms and Conditions feature. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.AcceptedHTML">
            <summary> 
            Gets or sets the a comma-delimited list of HTML tags allowed in the editor. When blank, 
            all tags are available. Site visitors posting to a Forum can apply these HTML tags to 
            content when 
            * their Forum editor is JavaScript Editor, as set in the user profile 
            * the Forum server control that displays the editor has its JavascriptEditorHTMLMode property set to True 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.AcceptedExtensions">
            <summary> 
            Gets or sets a comma delimited list of file extensions that can be uploaded. You can enter the 
            extension with or without the period (.). Use a comma to separate each extension. The default 
            list is: bmp,conf,doc,gif,jpe,jpeg,jpeg,png 
            The list appears at the bottom of the editor screen to notify the person entering a post 
            which file types he can attach. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.MaxFileSize">
            <summary> 
            Gets or sets the maximum size of the file, in bytes, that a user can upload. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.LockBoard">
            <summary> 
            Gets or sets whether to prevent all posting to this Discussion Board. You can do this 
            temporarily or permanently. If a Board is locked, only Administrator user group members can 
            create, edit or delete posts. Those users can post from the Web site or the Workarea. 
            You can alternatively lock any Forum underneath this Board via the LockForum property in the 
            DiscussionForum data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionBoard.Path">
            <summary>
            Gets or sets the path to the discussion board inside the workarea folder structure.
            </summary>
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.ForumName">
            <summary> 
            Gets or sets the name for the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.ForumTitle">
            <summary> 
            Gets or sets the title for the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.ModerateComments">
            <summary> 
            Gets or sets whether the comments for the Forum are moderated. Note: Setting this property to 
            True only affects the specified Forum, not the entire Discussion Board. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LockForum">
            <summary> 
            Gets or sets whether to prevent all posting to this Forum. You can do this 
            temporarily or permanently. If a Forum is locked, only Administrator user group members can 
            create, edit or delete posts. 
            You can alternatively lock the entire Discussion Board containing this Forum via the LockBoard 
            property in the DiscussionBoard data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.CategoryID">
            <summary> 
            Gets or sets the ID of the taxonomy category associated with the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.CategoryName">
            <summary> 
            The name of the taxonomy category associated with the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.SortOrder">
            <summary> 
            Gets the sort order for the Forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastPosted">
            <summary> 
            Gets or sets the time and date of the most recently added post. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastTopicID">
            <summary> 
            Gets or sets the ID of the most recently added topic. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastMessageID">
            <summary> 
            
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastUserID">
            <summary> 
            Gets or sets the ID of the user who added the latest post. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.LastUsername">
            <summary> 
            Gets or sets the username of user who added the latest post. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.NumberofPosts">
            <summary> 
            Gets or sets the number of posts for the forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.NumberofTopics">
            <summary> 
            Gets or sets the number of topics in a forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.BoardID">
            <summary> 
            Gets or sets the ID of the Discussion Board that contains this forum. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.DiscussionForum.Topics">
            <summary> 
            Gets or sets Topic information for the Forum using the DiscussionTopic data class. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageProperty">
            <summary>
            Enumeration of MessageData properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageData">
            <summary>
            Data class representing a Message in the Cms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Messaging.CmsMessageData.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.Title">
            <summary>
            Gets or Sets the Title of the Message.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.Subject">
            <summary>
            Gets or sets the Subject of the Message.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.HtmlBody">
            <summary>
            Gets or sets the Html Body of the Message.  Depending on the delivery mechanism of the message, either the TextBody or HtmlBody may be used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.TextBody">
            <summary>
            Gets or sets the Html Body of the Message.  Depending on the delivery mechanism of the message, either the TextBody or HtmlBody may be used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.MessageType">
            <summary> 
            Gets or sets the the message type of this message. 
            </summary> 
            <value></value> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.IsDefaultMessage">
            <summary>
            Gets or sets the IsDefault flag for this message.  If true, this message is the defualt used for the MessageType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageData.SiteId">
            <summary>
            Gets or sets the Id of the site that the message is associated with.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageDataCollection">
            <summary>
            Represents a collection of Language specific CMSMessageData objects for a given message Id.
            This collection is only meant to contain the translated messages for a given message Id and NOT multiple messages of various Ids.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageTypeProperty">
            <summary>
            Enumeration of CMsMessageTypeData properties available for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Messaging.CmsMessageTypeProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Messaging.CmsMessageTypeProperty.Scope">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Messaging.CmsMessageTypeProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Messaging.CmsMessageTypeData">
            <summary>
            Data class representing Message Types in the Cms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Messaging.CmsMessageTypeData.Validate">
            <summary>
            Validates that the data object is in a valid state for persisting.
            </summary>
            <returns>Collection of ValidationResult messages if the object is not valid.</returns>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageTypeData.Scope">
            <summary>
            Gets or sets the scope of the message type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Messaging.CmsMessageTypeData.Name">
            <summary>
            Gets or sets the name of the message type.
            </summary>
        </member>
        <member name="T:Ektron.Cms.MicroMessageProperty">
            <summary>
            Enumeration of MicroMessageData properties that can be used for querying.
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.MessageId">
            <summary>
            long MessageId
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.ParentMessageId">
            <summary>
            long ParentMessageId
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.DateCreated">
            <summary>
            System.DateTime DateCreated 
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.DateModified">
            <summary>
            System.DateTime DateModified
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.UserId">
            <summary>
            long UserId
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.MessageText">
            <summary>
            string MessageText
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.FirstName">
            <summary>
            string FirstName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.LastName">
            <summary>
            string LastName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.UserName">
            <summary>
            string UserName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.DisplayName">
            <summary>
            string DisplayName
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.Avatar">
            <summary>
            string  Avatar
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.EmailAddress">
            <summary>
            string EmailAddress
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.ReplyCount">
            <summary>
            int ReplyCount
            </summary>
        </member>
        <member name="F:Ektron.Cms.MicroMessageProperty.SiteId">
            <summary>
            long SiteId
            </summary>
        </member>
        <member name="T:Ektron.Cms.MicroMessageData">
            <summary>
            Data class for dealing with Micro Messages for a user.  
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.Id">
            <summary>
            gets or sets the Id for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.SiteId">
            <summary>
            gets or sets the SiteId for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.ParentMessageId">
            <summary>
            gets or sets the ParentMessageId for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserId">
            <summary>
            gets or sets the UserId for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DateCreated">
            <summary>
            gets or sets the DateCreated for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DateModified">
            <summary>
            gets or sets the DateModified for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.MessageText">
            <summary>
            gets or sets the MessageText for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserFirstName">
            <summary>
            gets or sets the UserFirstName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserLastname">
            <summary>
            gets or sets the UserLastName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserName">
            <summary>
            gets or sets the UserName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserAvatar">
            <summary>
            gets or sets the UserAvatar for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DisplayName">
            <summary>
            gets or sets the DisplayName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.DisplayUserName">
            <summary>
            gets or sets the DisplayUserName for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.UserEmailAddress">
            <summary>
            gets or sets the UserEmailAddress for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.ReplyCount">
            <summary>
            gets or sets the ReplyCount for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.AllowDelete">
            <summary>
            gets or sets the AllowDelete for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.HasReplies">
            <summary>
            gets if this micromessage has replies.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.TimeLapse">
            <summary>
            gets or sets the TimeLapse for this micromessage.
            </summary>
        </member>
        <member name="P:Ektron.Cms.MicroMessageData.IsReply">
            <summary>
            gets if this micromessage is a reply.
            </summary>
        </member>
        <member name="T:Ektron.Cms.MicroMessageCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving micromessages from the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.BlogCommentMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.ContentMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.CommunityGroupMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.DiscussionTopicReplyMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.DiscussionTopicMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.DirectObjectUserMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.MessageBoardMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.MicroMessageMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.SubjectUserMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Messaging.MessageFormatting.SystemMessageData.GetTokenList">
            <summary>
            Returns a list of the tokens supported by this formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.PrivateMessageProperty">
            <summary>
            Enumeration of PrivateMessageData properties than can be filtered on.
            </summary>
        </member>
        <member name="T:Ektron.Cms.PrivateMessageData">
            <summary>
            Data class representing a private message in CMS400.NET.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.INotificationAgentSetting.GetRegisteredAgentList">
            <summary>
            Retrieves a list of the Notification Agents registered in the web.config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Notifications.INotificationPreference.SaveUserPreferences(System.Collections.Generic.List{Ektron.Cms.Notifications.NotificationPreferenceData})">
            <summary>
            Saves a set of notification preferences for a given user. 
            Preferences marked as added will be added and those marked as delelted will be removed.
            </summary>
            <param name="preferenceList">preference data to save.</param>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgent">
            <summary>
            Base class for creating notification Agents.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgent.GetAgentSettings">
            <summary>
            Returns new instance of data class representing settings for this agent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgent.Send(Ektron.Cms.Notifications.NotificationMessageData)">
            <summary>
            Sends the suppled message to the supplied user.
            </summary>
            <param name="message">message to send.</param>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgent.IsValidationRequired">
            <summary>
            Returns true if this Agent requires settings be validated before being used.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentProperty">
            <summary>
            ENumeration of NotificationAgentData properties that cna be used for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.Name">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.Description">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.TypeName">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationAgentProperty.IsEnabled">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentData">
            <summary>
            Data class representing Notification Agents registered in the CMS.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgentData.Validate">
            <summary>
            Validates that the data object is valid for saving.  Any errors are returns as ValidationResults.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.Id">
            <summary>
            Get or sets the Id of the Notification Agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.Name">
            <summary>
            Gets or sets the Name of the agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.Description">
            <summary>
            Gets or sets the description of the agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.TypeName">
            <summary>
            Gets or sets the Fully Qualified Name of the Agent type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationAgentData.IsEnabled">
            <summary>
            Gets or sets the IsEnabled flag on the agent.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Notification Agents from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationSettingAttribute">
            <summary>
            Attribute used to decorate properties on NotificationAgentSettingsData that are settings used by Notification Agent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationSettingAttribute.IsRequired">
            <summary>
            Indicates if this setting is required by the Agent.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationAgentSettingsData">
            <summary>
            Base class for defining settings for notification agents.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationAgentSettingsData.ReValidationRequired(Ektron.Cms.Notifications.NotificationAgentSettingsData)">
            <summary>
            When overridden, compares current SettingsData to supplied settingsData and returns true if the re-validation is required.
            </summary>
            <param name="originalSettings"></param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationMessageData">
            <summary>
            Data class representing a notification message to be sent.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.HtmlMessage">
            <summary>
            Gets or sets the Html message of the notification.  This message would be used by providers that support Html based messages.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.TextMessage">
            <summary>
            Gets or sets the text message of the notification.  This message would be used by providers that send messages in plain text and not Html.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.Subject">
            <summary>
            Gets or sets the subject of the notification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.UserNotification">
            <summary>
            Gets or sets the UserNotificationData for this notifification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.Activity">
            <summary>
            Gets or sets the Activity associated with the notification.  This may be required for some notifications, but not all.
            The ActivityFeed, for one, provider requires it.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.Document">
            <summary>
            Gets or sets the document associated with the notification message.  May be null.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationMessageData.DocumentTitle">
            <summary>
            Gets or sets the document title associated with the notification message.  May be null.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationDataProperty">
            <summary>
            Enumeration of NotificationUserDataP properties that can be used for querying.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationData">
            <summary>
            Data class representing a users notification preference and settings for a particular object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationData.User">
            <summary>
            Gets or sets the user associated with this notification configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationData.AgentName">
            <summary>
            Gets or sets the name of the agent to be used for this user's notification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationData.AgentSettings">
            <summary>
            Gets or sets the user's settings for this notification provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationSettingProperty">
            <summary>
            Enum containing properties in NotificationUserSettingData that can be sorted and filtered.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.Id">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.UserId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.AgentId">
            <summary>
            (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.VerificationCode">
            <summary>
            (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.UserNotificationSettingProperty.IsEnabled">
            <summary>
            (bool)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationSettingData">
            <summary>
            Data class representing the user settings for a Notification provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.UserNotificationSettingData.Validate">
            <summary>
            Validates that the data object is valid for saving.  Any errors are returns as ValidationResults.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.UserId">
            <summary>
            Gets or sets the user Id associated with these settings..
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.AgentId">
            <summary>
            Gets or sets the ID of the Notification Agent associated with these settings.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.VerificationCode">
            <summary>
            Gets or sets the verificationcode for this setting.  The user cannot recieve notifications on this 
            provider until they verify this code.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.IsEnabled">
            <summary>
            Gets or sets the enabled setting for this user notification setting.  This notification setting cannot be used if its not enabled.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.UserNotificationSettingData.AgentSettings">
            <summary>
            Gets or sets the user's settings for this notification provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.UserNotificationSettingCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving User Notification Settings from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationPreferenceProperty">
            <summary>
            Enumeration of NotificationPreferenceData properties that can be used for querying.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.Id">
            <summary>
            long id
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.UserId">
            <summary>
            long UserId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActivityTypeId">
            <summary>
            long ActivityTypeId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ObjectType">
            <summary>
            long ObjectType
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ObjectId">
            <summary>
            long ObjectId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.AgentId">
            <summary>
            AgentId
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActivityActionType">
            <summary>
            long ActivityActionType
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActionSource">
            <summary>
            long ActionSource
            </summary>
        </member>
        <member name="F:Ektron.Cms.Notifications.NotificationPreferenceProperty.ActionSourceId">
            <summary>
            long ActionSourceId
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationPreferenceData">
            <summary>
            Data class for dealing with user notification preferences for a user.  
            Each notification preference is a single preference that a user can set for a specific object or an object type.
            FOr example, User 10 wants to be notified via Agent Id 12 when Group Workspace (taxonomy) X has a document uploaded.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Notifications.NotificationPreferenceData.Validate">
            <summary>
            Validates the current data class is an appropriate state for saving.  Any errors are returned.  
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.Id">
            <summary>
            gets or sets the Id for this notification preference.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.UserId">
            <summary>
            gets or sets the User Id for this notification preference.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.ActivityTypeId">
            <summary>
            Gets or sets the Activity Type for this notification preference. Built in CMS Activity are defined in EkEnumeration.ActivityType.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.ObjectId">
            <summary>
            Gets or sets the Object Id for this notification preference.  The Object Id is related to the Object Type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.AgentId">
            <summary>
            Gets or sets the Provider Id for this notification preference.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.ActionSourceId">
            <summary>
            Gets or sets the Object Id of the Notification Action Source for this notification preference.  
            If ActionSource = CommunityGroup, ActionSourceId would be the communityGroup Id you want to receive notifications from.  By default it is 0,
            which means all.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Notifications.NotificationPreferenceData.DataState">
            <summary>
            Gets or sets the preferences persistence State.  Used to determine the state of a preference when saving batches.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Notifications.NotificationPreferenceCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Notification Preferences from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Organization.ContentCollectionData">
            <summary>
            Represents a Cms Collection
            </summary>
        </member>
        <member name="M:Ektron.Cms.Organization.ContentCollectionData.Validate">
            <summary>
            Validate this Collection
            </summary>
            <returns>true for valid data, false for invalid data</returns>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Id">
            <summary>
            Gets or sets the ID that identified this object uniquely
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Title">
            <summary>
            Gets or sets the Collection's Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Description">
            <summary>
            Gets or sets the Collection's Description
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Template">
            <summary>
            Gets or sets a template url for the items in the Collection, leave blank to use the items' quicklinks
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.IsApprovalRequired">
            <summary>
            Gets or sets a true or false value indicating whether approval is required for this Collection
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.FolderId">
            <summary>
            Path Folder Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Recursive">
            <summary>
            Gets or sets a true or false value indicating whether to include subfolders or not
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.UserId">
            <summary>
            Gets or sets the user id that represents the author of this Collection
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.DateCreated">
            <summary>
            Gets or sets the date this Collection was created
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.LastEditDate">
            <summary>
            Gets or sets the last Edit Date
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.EditorLName">
            <summary>
            Gets or sets the Editor's Last Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.EditorFName">
            <summary>
            Gets ot sets the Editor's First Name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.EnableReplication">
            <summary>
            Gets or sets a value indicating whether replication is enabled on this item
            (1=Enabled, 0=Disabled)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Status">
            <summary>
            Content Status:
            A-Approved O-Checked Out I-Checked In S-Submitted for Approval M-Marked for Deletion P-Pending Go Live Date T-Awaiting Completion of Associated Tasks D-Pending Deletion 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.Published">
            <summary>
            Gets or sets a integer value that indicates whether the Collection is published or not (1=Published, 0=Not Published)
            </summary>
        </member>
        <member name="P:Ektron.Cms.Organization.ContentCollectionData.DynamicReplicationMethod">
            <summary>
            Gets or sets a value representing the dynamic replication method to utilize
            </summary>
        </member>
        <member name="T:Ektron.Cms.PageBuilder.IPageModel">
            <summary>
            Summary description for IWidgetModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.PageBuilder.SerializableDictionary`2">
            <summary>
            SerializableDictionary by Paul Welter
            http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Ektron.Cms.Widget.GlobalWidgetData">
            <summary>
            the Pagebuilder system will automatically populate any properties in your widget at Page_Init if they are decorated with this attribute. Save the settings again by calling SaveSettings() within your widget.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.WidgetDataMember">
            <summary>
            the Pagebuilder system will automatically populate any properties in your widget at Page_Init if they are decorated with this attribute. Save the settings again by calling SaveSettings() within your widget.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.Searchable">
            <summary>
            The Pagebuilder system will make your widget searchable if they are decorated with this attribute.
            Do *NOT* use this for widgets that have data that changes constantly (e.g., twitter/stock feeds)!
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidget">
            <summary>
            Summary description for IWidget
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetListContainerModel">
            <summary>
            Summary description for IWidgetContainerModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetListModel">
            <summary>
            Summary description for IWidgetListModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetModel">
            <summary>
            Summary description for IWidgetModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetSettingsModel">
            <summary>
            Summary description for IWidgetSettingsModel
            </summary>
        </member>
        <member name="T:Ektron.Cms.Widget.IWidgetTypeModel">
            <summary>
            Summary description for IWidgetTypeModel
            </summary>
        </member>
        <member name="F:Ektron.Cms.Widget.GlobalPropertyAttributes.Normal">
            <summary>
            Normal is used in the absence of another option
            </summary>
        </member>
        <member name="F:Ektron.Cms.Widget.GlobalPropertyAttributes.PasswordField">
            <summary>
            PasswordField can only be specified when the property in question is a String. It will display the field as asterisks on the global widget data edit screen.
            </summary>
        </member>
        <member name="T:Ektron.Cms.PageBuilder.ObjectData">
            <summary>
            Contains information necessary to identify the location of a CMS object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.PageBuilder.ObjectData.#ctor">
            <summary>
            Constructs an empty object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.ObjectData.ObjectId">
            <summary>
            Gets or sets the object identifier.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.ObjectData.ObjectType">
            <summary>
            Gets or sets the object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.ObjectData.ObjectLanguage">
            <summary>
            Gets or sets the object language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.PageId">
            <summary>
            Page identifier
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.PageLanguage">
            <summary>
            Gets or sets the page language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.ObjectId">
            <summary>
            Gets or sets the object to which the page is associated.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.ObjectType">
            <summary>
            Gets or sets the object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.PageBuilder.PageAssociationData.ObjectLanguage">
            <summary>
            Gets or sets the object language.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.AdministratorPermission">
            <summary>
            The AdministratorPermission class serves as a token identifying that a
            search query is intended to be executed as an administrator user.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Permission">
            <summary>
            The Permission class is an abstract base class describing CMS persmission
            data that can be applied to a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.CreateCurrentUserPermission">
            <summary>
            Creates a new Permission instance representing the current CMS user.        
            </summary>
            <returns>New Permission instance representing the currently logged in user</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.CreateManualUserPermission(System.Int64)">
            <summary>
            Creates a new Permission instance representing the specified CMS user.
            </summary>
            <returns>New Permission instance representing the specified CMS user</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Permission.CreateAdministratorPermission">
            <summary>
            Creates a new permission instance representing a CMS administrator.
            </summary>
            <returns>New Permission instance representing a CMS administrator</returns>
        </member>
        <member name="M:Ektron.Cms.Search.AdministratorPermission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="T:Ektron.Cms.Search.AdvancedSearchCriteria">
            <summary>
            The AdvancedSearchCriteria class describes a narrow search query primarily
            defined by a logical expression tree. This critiera is intended narrower,
            targeted, querying.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchCriteria">
            <summary>
            The SearchCriteria class serves as a base for criteria
            defining a particular search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Permission">
            <summary>
            Gets and sets the permissions with which to search
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.OrderBy">
            <summary>
            Gets and sets the list of result ordering rules
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.PagingInfo">
            <summary>
            Gets and sets the paging information
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.ReturnProperties">
            <summary>
            Gets and sets the list of columns to return in the results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.EnableStemming">
            <summary>
            Gets or sets a flag indicating whether or not stemming
            is enabled for the query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Scope">
            <summary>
            Gets and sets the scope information
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.IncludeSuggestedResults">
            <summary>
            Gets and sets a flag indicating whether or not to retrieve
            suggested results in addition to the relevent search results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Similarity">
            <summary>
            Gets or sets the criteria used to refine the query to
            items that are most similar to a particular item. Note: 
            Similarity search functionality is not supported by all
            search providers.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Refinement">
            <summary>
            Gets or sets the criteria used to indicate how refinements 
            should be applied to the query. Note: Query refinement is
            not supported by all search providers and may require
            some additional manual configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.ExpressionTree">
            <summary>
            Gets and sets the logical expression tree for filtering results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCriteria.Locale">
            <summary>
            Gets and sets the query engine's target locale.
            </summary>
            <remarks>
            This does not represent a property restriction within your query.
            It is a hint to the query engine processing the request allowing
            it to tune its relevence algorithms accordingly.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.AdvancedSearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.BoundedValue`1">
            <summary>
            The BoundedValue class is a data structure representing a range
            of refinement values.
            </summary>
            <typeparam name="U">Data type of values</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedValue`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="upperBound">Upper bound of the range</param>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedValue`1.#ctor(`0,`0)">
            <summary>
            Constructor
            </summary>
            <param name="upperBound">Upper bound of the range</param>
            <param name="lowerBound">Lower bound of the range</param>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedValue`1.UpperBound">
            <summary>
            Gets or sets the upper bound of the value range.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedValue`1.LowerBound">
            <summary>
            Gets or sets the lower bound of the value range.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CrawlFilter">
            <summary>
            The CrawlFilter class describes a set of inclusions defining what
            categories of CMS data will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeHtmlContent">
            <summary>
            Gets or sets a flag indicating whether or not HTML
            content CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeDocuments">
            <summary>
            Gets or sets a flag indicating whether or not document 
            CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeForums">
            <summary>
            Gets or sets a flag indicating whether or not forum 
            CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeProducts">
            <summary>
            Gets or sets a flag indicating whether or not product
            content CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeCommunityMembers">
            <summary>
            Gets or sets a flag indicating whether or not community member
            (users, groups) CRUD operations will trigger the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.CrawlFilter.IncludeCommunityContent">
            <summary>
            Gets or sets a flag indicating whether or not community
            content (workspaces, photos, etc.) CRUD operations will 
            trigger the indexing process.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.CurrentUserPermission">
            <summary>
            The CurrentUserPermission class serves as a token identifying that a
            search query is intended to be executed as the user that has triggered
            the action to issue it.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.CurrentUserPermission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="T:Ektron.Cms.Search.DocumentVector">
            <summary>
            The DocumentVector class encapsulates a data set that can be used
            to compare indexed documents and identify similarities.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentVector.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentVector.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="data">Document vector data</param>
        </member>
        <member name="M:Ektron.Cms.Search.DocumentVector.ToString">
            <summary>
            Gets the string representation of this DocumentVector.
            </summary>
            <returns>DocumentVector string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.DocumentVector.Data">
            <summary>
            Gets or sets the document vector data. The format of this
            data is dependent on your particular search provider.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.AllNoiseException">
            <summary>
            The AllNoiseException occurs when a query submitted for search
            consists entirely of noise words.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchException">
            <summary>
            The SearchException indicates that an error has occurred while
            performing a search-related activity.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Ektron.Cms.Search.SearchException.Details">
            <summary>
            Gets or sets any additional details associate with this exception.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.AllNoiseException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.DuplicateSuggestedResultException">
            <summary>
            A DuplicateSuggestedResultException occurs when an attempt is made to save a 
            suggested result that already exists in the system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSuggestedResultException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Ektron.Cms.Search.DuplicateSuggestedResultException.Duplicates">
            <summary>
            Gets or sets a dictionary of duplicate terms (mapped to the primary
            phrase with which they are associated).
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DuplicateSynonymException">
            <summary>
            A DuplicateSynonymException occurs when an attempt is made to save a 
            synonym that already exists in the system.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.DuplicateSynonymException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.EmptyQueryException">
            <summary>
            The EmptyQueryException is thrown when criteria submitted for search
            contains an empty query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyQueryException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.EmptyReturnPropertiesException">
            <summary>
            The EmptyReturnPropertiesException occurs when a query criteria is submitted
            with an empty collection of return properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.EmptyReturnPropertiesException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.InvalidOrderByException">
            <summary>
            The InvalidOrderByException occurs when the OrderBy criteria is applied
            in a manner that is not supported by the search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidOrderByException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.InvalidPropertyException">
            <summary>
            The InvalidPropertyException occurs when a property referenced in the
            query does not exist in the system or is used in a manner which is not
            supported.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidPropertyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.InvalidScopeException">
            <summary>
            The InvalidScopeException occurs when the scope specified in the
            query criteria is invalid or does not exist.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.InvalidScopeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.MalformedExpressionException">
            <summary>
            The MalformedExpressionException is raised when an invalid
            expression is utilized in a query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.Exception,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="details">Expression query text</param>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.MalformedExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.Exceptions.InvalidResultFieldException">
            <summary>
            The InvalidResultFieldException class describes an error that occurs
            while interacting with result fields or their values in a manner which
            is not supported.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.Exceptions.InvalidResultFieldException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.NoResultsException">
            <summary>
            The NoResultsException occurs when a query yields no results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.NoResultsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SearchAuthorizationException">
            <summary>
            The SearchAuthorizationExpcetion occurs when authentication with
            the search system fails.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchAuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SettingsNotFoundException">
            <summary>
            The SettingsNotFoundException occurs when settings are requested
            for a site that has not been configured for search.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SettingsNotUpdatedException">
            <summary>
            The SettingsNotUpdatedException occurs when an attempt to update
            a site's search settings fails.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SettingsNotUpdatedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.SynonymSetNotSavedException">
            <summary>
            The SynonymSetNotSavedException indicates that the creation or update
            of a particular synonym set has failed.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetNotSavedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.AndExpression">
             <summary>
             Defines an expression representing an "and" operator
             </summary>
            
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BinaryExpression">
            <summary>
            Defines an expression representing a binary operator
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.Expression">
            <summary>
            Abstract class defining the base logical search expression
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.op_BitwiseOr(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an OR expression for the specified left and right expressions.
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.op_BitwiseAnd(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an AND expression for the specified left and right expressions.
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.op_LogicalNot(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an expression negating the specified expression.
            </summary>
            <param name="expression">Expression to negate</param>
            <returns>NOT expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.Or(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an OR expression of this expression and the specified right expression.
            </summary>        
            <param name="right">Right expression</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.And(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an AND expression of this expression and the specified right expression.
            </summary>        
            <param name="right">Right expression</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.Or(System.Collections.Generic.IEnumerable{Ektron.Cms.Search.Expressions.Expression})">
            <summary>
            Returns a list of terms ORed together.
            </summary>        
            <param name="terms">Terms to OR</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.Expression.And(System.Collections.Generic.IEnumerable{Ektron.Cms.Search.Expressions.Expression})">
            <summary>
            Returns a list of terms ANDed together.
            </summary>        
            <param name="terms">Terms to AND</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BinaryExpression.ValidateComparisonExpression(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Validates a comparison expression in which the 'left' expression must be
            of type PropertyExpression and the 'right' expression must be of type
            ValueExpression.
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.BinaryExpression.Left">
            <summary>
            Gets the left branch of the binary expression tree
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.BinaryExpression.Right">
            <summary>
            Gets the right branch of the binary expression tree
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.AndExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.AndExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.AndExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to process the current expression
            </summary>
            <param name="visitor">Visitor to process current expression</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a boolean index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.PropertyExpression">
            <summary>
            The PropertyExpression class serves as a base for expressions
            identifying a specific searchable property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateStringProperty(System.String)">
            <summary>
            Creates a StringPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>StringPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateStringProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a StringPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>StringPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateIntegerProperty(System.String)">
            <summary>
            Creates a IntegerPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>IntegerPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateIntegerProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a IntegerPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>IntegerPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDecimalProperty(System.String)">
            <summary>
            Creates a DecimalPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>DecimalPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDecimalProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DecimalPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DecimalPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateBooleanProperty(System.String)">
            <summary>
            Creates a BooleanPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>BooleanPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateBooleanProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a BooleanPropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>BooleanPropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDateProperty(System.String)">
            <summary>
            Creates a DatePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <returns>DatePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDateProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DatePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DatePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateRankProperty">
            <summary>
            Creates a RankPropertyExpression for the default rank field.
            </summary>        
            <returns>RankPropertyExpression for the default rank field.</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateRankProperty(System.String)">
            <summary>
            Creates a RankProperty expression for the default rank field with the specified rank ID.
            </summary>        
            <param name="rankID">Rank profile ID</param>
            <returns>RankPropertyExpression for the specified rank field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateRankProperty(System.String,System.String)">
            <summary>
            Creates a RankProperty expression for the specified rank field and rank ID.
            </summary>
            <param name="name">Property name</param>
            <param name="rankID">Rank profile ID</param>
            <returns>RankPropertyExpression for the specified rank field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateBooleanMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a BooleanMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>BooleanMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDateMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DateMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DateMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateDecimalMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a DecimalMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>DecimalMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateIntegerMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a IntegerMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>IntegerMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.CreateStringMultiValueProperty(System.String,Ektron.Cms.Search.PropertyCategory)">
            <summary>
            Creates a StringMultiValuePropertyExpression for the specified searchable property.
            </summary>
            <param name="name">Property name</param>
            <param name="category">Property category</param>
            <returns>StringMultiValuePropertyExpression for the specified property</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.And(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an AND expression of this expression and the specified right expression.
            (Note: The AND expression is not support for expressions of type PropertyExpression.)
            </summary>        
            <param name="right">Right expression</param>
            <returns>AND expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.Or(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Returns an OR expression of this expression and the specified right expression.
            (Note: The OR expression is not support for expressions of type PropertyExpression.)
            </summary>        
            <param name="right">Right expression</param>
            <returns>OR expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.IsNull">
            <summary>
            Creates an 'IsNull' expression.
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNotNull' expression.
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.ToString">
            <summary>
            Gets the string representation of this PropertyExpression instance.
            </summary>
            <returns>String representation of this PropertyExpression instance</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.Equals(System.Object)">
            <summary>
            Returns true if this PropertyExpression instance is equal to 
            the specified one.
            </summary>
            <param name="obj">PropertyExpression to compare</param>
            <returns>True if the specified instance is equal to this one, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.PropertyExpression.GetHashCode">
            <summary>
            Gets the hash code for this PropertyExpression instance.
            </summary>
            <returns>Hash code for this PropertyExpression instace</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.PropertyExpression.Name">
            <summary>
            Gets or sets the internal property name
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.PropertyExpression.Category">
            <summary>
            Gets or sets the CMS category by which this property is classified.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.PropertyExpression.ValueType">
            <summary>
            Gets or sets the data type of the values that may
            be associated with this property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.Contains(System.Boolean)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="value">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BooleanPropertyExpression">
            <summary>
            Defines an expression representing a boolean index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.EqualTo(System.Boolean)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.NotEqualTo(System.Boolean)">
            <summary>
            Constructs an NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to process the current expression
            </summary>
            <param name="visitor">Visitor to process current expression</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.BooleanValueExpression">
            <summary>
            Defines an expression representing a boolean value
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.ValueExpression`1">
            <summary>
            The ValueExpression is an abstract base class defining an
            expression representing a value of a specific type.
            </summary>
            <typeparam name="T">Value data type</typeparam>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ValueExpression`1.Value">
            <summary>
            Gets or sets the value of this expression.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.BooleanValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.WordForms">
            <summary>
            The WordForms enum describes the various alternative
            word forms that can be considered when evaluating
            a search phrase.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Expressions.WordForms.Exact">
            <summary>
            Exact phrase
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Expressions.WordForms.Inflections">
            <summary>
            Inflective forms
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.Expressions.WordForms.Synonyms">
            <summary>
            Synonymous forms
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.ContainsExpression">
            <summary>
            Defines an expression representing a "contains" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="phrase">Search phrase</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to evaluate</param>
            <param name="phrase">Search phrase</param>        
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,Ektron.Cms.Search.Expressions.StringValueExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to evaluate</param>
            <param name="phrase">Search phrase</param>        
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to evaluate</param>
            <param name="phrase">Search phrase</param>
            <param name="forms">Indicates alternative word forms to consider</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(System.String,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructor
            </summary>
            <param name="phrase">Search phrase</param>
            <param name="forms">Indicates alternative word forms to consider</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="property">Multi-value property</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Value expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Value expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ContainsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ContainsExpression.Phrase">
            <summary>
            Gets or sets the search phrase for this expression.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ContainsExpression.Property">
            <summary>
            Gets the property to evaluate.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ContainsExpression.Forms">
            <summary>
            Gets or sets which alternative word forms should also be
            considered when searching for the specified phrase.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a date index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.Contains(System.DateTime)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="phrase">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DatePropertyExpression">
            <summary>
            Defines an expression representing a date index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.EqualTo(System.DateTime)">
            <summary>
            Constructs an EqualToExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.NotEqualTo(System.DateTime)">
            <summary>
            Constructs an NotEqualToExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.GreaterThan(System.DateTime)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.GreaterThanOrEqualTo(System.DateTime)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.LessThan(System.DateTime)">
            <summary>
            Constructs an LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.LessThanOrEqualTo(System.DateTime)">
            <summary>
            Constructs an LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DatePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DateValueExpression">
            <summary>
            Defines an expression representing a date value
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DateValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a decimal index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.Contains(System.Double)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="phrase">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DecimalPropertyExpression">
            <summary>
            Defines an expression representing a decimal index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.EqualTo(System.Double)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.NotEqualTo(System.Double)">
            <summary>
            Constructs a NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.GreaterThan(System.Double)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.GreaterThanOrEqualTo(System.Double)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.LessThan(System.Double)">
            <summary>
            Constructs a LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.LessThanOrEqualTo(System.Double)">
            <summary>
            Constructs a LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DecimalValueExpression">
            <summary>
            Defines an expression representing a decimal value
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DecimalValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.DefaultScopeExpression">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.ScopeExpression">
            <summary>
            A ScopeExpression identifies a subset of a search index
            to be queried.    
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.StringValueExpression">
            <summary>
            Defines an expression representing a string value.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ScopeExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Scope name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ScopeExpression.op_Implicit(Ektron.Cms.Search.Expressions.ScopeExpression)~System.Collections.Generic.List{Ektron.Cms.Search.Expressions.ScopeExpression}">
            <summary>
            Implicit conversion of a single ScopeExpression to a list of
            ScopeExpressions.
            </summary>
            <param name="scopeExpression">ScopeExpression to convert</param>
            <returns>List containing the target ScopeExpression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.ScopeExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts an expression visitor capable of translating
            this expression into a search query.
            </summary>
            <param name="visitor">Expression visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.ScopeExpression.Default">
            <summary>
            Gets a ScopeExpression identifying the default scope
            for the current site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.DefaultScopeExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.EqualsExpression">
            <summary>
            Defines an expression representing an "equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.EqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.GreaterThanExpression">
            <summary>
            Defines an expression representing a "greater-than" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression">
            <summary>
            Defines an expression representing a "greater-than-or-equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a integer index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.Contains(System.Int64)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified value as its right branch.
            </summary>
            <param name="phrase">Value to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IntegerPropertyExpression">
            <summary>
            Defines an expression representing a integer index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.EqualTo(System.Int64)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.NotEqualTo(System.Int64)">
            <summary>
            Constructs a NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.GreaterThan(System.Int64)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.GreaterThanOrEqualTo(System.Int64)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.LessThan(System.Int64)">
            <summary>
            Constructs a LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.LessThanOrEqualTo(System.Int64)">
            <summary>
            Constructs a LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. (Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.)
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IntegerValueExpression">
            <summary>
            Defines an expression representing an integer value
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerValueExpression.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IntegerValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IsNotNullExpression">
            <summary>
            Defines an expression representing an "is-not-null" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IsNotNullExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.IsNullExpression">
            <summary>
            Defines an expression representing an "is-null" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.IsNullExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.KeywordExpression">
            <summary>
            Defines an expression representing a "keyword-search" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.#ctor(System.String,Ektron.Cms.Search.KeywordMode)">
            <summary>
            Constructor
            </summary>
            <param name="phrase">Keyword text</param>
            <param name="mode">Indicates whether individual terms are implicitly ANDed or ORed</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.String,Ektron.Cms.Search.KeywordMode)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property to which this KeywordExpression applies</param>
            <param name="phrase">Keyword text</param>
            <param name="mode">Indicates whether individual terms are implicitly ANDed or ORed</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.KeywordExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.KeywordExpression.Phrase">
            <summary>
            Gets or sets the StringValueExpression representing the
            keyword text of this expression.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.KeywordExpression.Mode">
            <summary>
            Gets or sets the mode for this keyword expression, which indicates
            whether individual terms are implicitly ANDed or ORed.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.KeywordExpression.Property">
            <summary>
            Gets the property to which this KeywordExpression applies.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.LessThanExpression">
            <summary>
            Defines an expression representing a "less-than" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression">
            <summary>
            Defines an expression representing a "less-than-or-equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.NotEqualsExpression">
            <summary>
            Defines an expression representing a "not-equals" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Long value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Double value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="value">DateTime value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotEqualsExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.NotExpression">
            <summary>
            Defines an expression representing a "not" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotExpression.#ctor(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="expression">Expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.NotExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.OrExpression">
            <summary>
            Defines an expression representing an "or" operator
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.OrExpression.#ctor(Ektron.Cms.Search.Expressions.Expression,Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Constructor
            </summary>
            <param name="left">Left expression</param>
            <param name="right">Right expression</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.OrExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.PropertyExpressionComparer">
            <summary>
            Equality comparer for Property Expression
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.QuotedStringValueExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.QuotedStringValueExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.RankPropertyExpression">
            <summary>
            Defines an expression representing a rank field in the index.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.RankPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.RankPropertyExpression.RankID">
            <summary>
            Gets or sets the ID of the ranking profile to be applied.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Expressions.RankPropertyExpression.IsDefault">
            <summary>
            Gets or sets a flag indicating whether or not the default
            ranking profile will be applied.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression">
            <summary>
            Defines an expression representing a string index field which
            may contain multiple values.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.Contains(System.String)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified phrase as its right branch.
            </summary>
            <param name="phrase">Phrase for which to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.IsNotNull">
            <summary>
            Creates an 'IsNull' expression. (Not supported)
            </summary>
            <returns>IsNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.IsNull">
            <summary>
            Creates an 'IsNotNull' expression. (Not supported)
            </summary>
            <returns>IsNotNull expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.Expressions.StringPropertyExpression">
            <summary>
            Defines an expression representing a string index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.Contains(System.String)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified phrase as its right branch.
            </summary>
            <param name="phrase">Phrase for which to search</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.Contains(System.String,Ektron.Cms.Search.Expressions.WordForms)">
            <summary>
            Constructs a ContainsExpression using the current object as its left branch
            and the specified phrase as its right branch.
            </summary>
            <param name="phrase">Phrase for which to search</param>
            <param name="wordForms">Indicates alternative word forms to consider</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.EqualTo(System.String)">
            <summary>
            Constructs an EqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.NotEqualTo(System.String)">
            <summary>
            Constructs a NotEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.GreaterThan(System.String)">
            <summary>
            Constructs a GreaterThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.GreaterThanOrEqualTo(System.String)">
            <summary>
            Constructs a GreaterThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.LessThan(System.String)">
            <summary>
            Constructs a LessThanExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.LessThanOrEqualTo(System.String)">
            <summary>
            Constructs a LessThanOrEqualsExpression using the current object as its left-branch, 
            and the given parameter "value" as its right-branch.
            </summary>
            <param name="value">Value to use in right branch</param>
            <returns>An expression tree node</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.AsMultiValue">
            <summary>
            Returns a reference to the multi-value form of this property expression, typically
            used to retrieve a collection of values from the index. Note: An index field
            must be specifically configured to process multi-value data for this to be
            applicable. Not all search providers support this behavior.
            </summary>
            <returns>An instance of this property as a multi-value property expression</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Expressions.StringPropertyExpression.Accept(Ektron.Cms.Search.ExpressionVisitor)">
            <summary>
            Accepts a visitor to perform actions on this expression node
            </summary>
            <param name="visitor">Acting visitor</param>
        </member>
        <member name="T:Ektron.Cms.Search.ExpressionVisitor">
            <summary>
            The ExpressionVisitor class is an abstract base class defining 
            objects that visit expression trees.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.Expression)">
            <summary>
            Visits the specified Expression.
            </summary>
            <param name="expression">Expression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.AndExpression)">
            <summary>
            Visits the specified AndExpression.
            </summary>
            <param name="expression">AndExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.OrExpression)">
            <summary>
            Visits the specified OrExpression.
            </summary>
            <param name="expression">OrExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Visits the specified PropertyExpression.
            </summary>
            <param name="expression">PropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Visits the specified StringPropertyExpression.
            </summary>
            <param name="expression">StringPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Visits the specified IntegerPropertyExpression.
            </summary>
            <param name="expression">IntegerPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Visits the specified DecimalPropertyExpression.
            </summary>
            <param name="expression">DecimalPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Visits the specified BooleanPropertyExpression.
            </summary>
            <param name="expression">BooleanPropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Visits the specified DatePropertyExpression.
            </summary>
            <param name="expression">DatePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IntegerValueExpression)">
            <summary>
            Visits the specified IntegerValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;int&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.StringValueExpression)">
            <summary>
            Visits the specified StringValueExpression.
            </summary>
            <param name="expression">StringValueExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.QuotedStringValueExpression)">
            <summary>
            Visits the specified QuotedStringValueExpression.
            </summary>
            <param name="expression">QuotedStringValueExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DecimalValueExpression)">
            <summary>
            Visits the specified DecimalValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;double&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.BooleanValueExpression)">
            <summary>
            Visits the specified BooleanValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;bool&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DateValueExpression)">
            <summary>
            Visits the specified DateValueExpression.
            </summary>
            <param name="expression">ValueExpression&lt;DateTime&gt; to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.EqualsExpression)">
            <summary>
            Visits the specified EqualsExpression.
            </summary>
            <param name="expression">EqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.NotEqualsExpression)">
            <summary>
            Visits the specified NotEqualsExpression.
            </summary>
            <param name="expression">NotEqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.LessThanExpression)">
            <summary>
            Visits the specified LessThanExpression.
            </summary>
            <param name="expression">LessThanExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.GreaterThanExpression)">
            <summary>
            Visits the specified GreaterThanExpression.
            </summary>
            <param name="expression">GreaterThanExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.NotExpression)">
            <summary>
            Visits the specified NotExpression.
            </summary>
            <param name="expression">NotExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.GreaterThanOrEqualsExpression)">
            <summary>
            Visits the specified GreaterThanOrEqualsExpression.
            </summary>
            <param name="expression">GreaterThanOrEqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.LessThanOrEqualsExpression)">
            <summary>
            Visits the specified LessThanOrEqualsExpression.
            </summary>
            <param name="expression">LessThanOrEqualsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IsNullExpression)">
            <summary>
            Visits the specified IsNullExpression.
            </summary>
            <param name="expression">IsNullExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IsNotNullExpression)">
            <summary>
            Visits the specified IsNotNullExpression.
            </summary>
            <param name="expression">IsNotNullExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.KeywordExpression)">
            <summary>
            Visits the specified KeywordExpression.
            </summary>
            <param name="expression">KeywordExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.ContainsExpression)">
            <summary>
            Visits the specified ContainsExpression.
            </summary>
            <param name="expression">ContainsExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.ScopeExpression)">
            <summary>
            Visits the specified ScopeExpression.
            </summary>
            <param name="expression">ScopeExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DefaultScopeExpression)">
            <summary>
            Visits the specified DefaultScopeExpression.
            </summary>
            <param name="expression">DefaultScopeExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Visits the specified BooleanMultiValuePropertyExpression.
            </summary>
            <param name="expression">BooleanMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Visits the specified DateMultiValuePropertyExpression.
            </summary>
            <param name="expression">DateMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Visits the specified DecimalMultiValuePropertyExpression.
            </summary>
            <param name="expression">DecimalMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Visits the specified IntegerMultiValuePropertyExpression.
            </summary>
            <param name="expression">IntegerMultiValuePropertyExpression to visit</param>
        </member>
        <member name="M:Ektron.Cms.Search.ExpressionVisitor.Visit(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Visits the specified StringMultiValuePropertyExpression.
            </summary>
            <param name="expression">StringMultiValuePropertyExpression to visit</param>
        </member>
        <member name="T:Ektron.Cms.Search.Facets">
            <summary>
            The Facets class is a data structure encapsulating a collection 
            of Facet data for an individual search response.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.#ctor(System.Collections.Generic.ICollection{Ektron.Cms.Search.Facet{Ektron.Cms.Search.Expressions.PropertyExpression}})">
            <summary>
            Constructor
            </summary>
            <param name="facets">Collection of Facet data</param>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.HasFacet(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if this instance contains a facet for
            the property represented by the specified PropertyExpression.
            </summary>
            <param name="property">Target property</param>
            <returns>True if this instance contains a facet for the specified property, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Facets.HasFacet(System.String)">
            <summary>
            Returns true if this instance contains a facet for
            the property represented by the specified property name.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>True if this instance contains a facet for the specified property, false otherwise</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(System.String)">
            <summary>
            Gets a Facet with the specified property name.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Facet associated with the specified property name</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Gets a Facet associated with the specified property.
            </summary>
            <param name="propertyName">Property expression</param>
            <returns>Facet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Gets a StringFacet associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>StringFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Gets a IntegerFacet associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>IntegerFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Gets a DecimalFacet associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>DecimalFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Gets a DateFacet associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>DateFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a StringFacet associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>StringFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a IntegerFacet associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>IntegerFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a DecimalFacet associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>DecimalFacet associated with the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Facets.Item(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a DateFacet associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>DateFacet associated with the specified property</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchResultBuilder">
            <summary>
            The ISearchResultBuilder describes a component capable of assembling
            the data representing an individual search result record for a
            particular search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.Initialize">
            <summary>
            Initializes this result data builder for use.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes this result data builder for use.
            </summary>
            <param name="row">Result data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.Initialize(System.Data.DataRow)">
            <summary>
            Initializes this result data builder for use.
            </summary>
            <param name="row">Result data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property name</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.HasProperty(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property name</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsNull(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsMultiValue(System.String)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property name</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.IsMultiValue(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(System.String,System.Object)">
            <summary>
            Sets a value for the specified property.
            </summary>
            <param name="property">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Collection of boolean values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Sets a value for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Integer (long) value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Sets a collection of values for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Collection of integer (long) values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Decimal value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Collection of decimal values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Date value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Collection of date values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Sets a value for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">Collection of string values</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultBuilder.SetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a collection of values for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="P:Ektron.Cms.Search.ISearchResultBuilder.PropertyCount">
            <summary>
            Gets the count of properties available in this result set.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchResultData">
            <summary>
            The SearchResultData interface.
            Added to facilitate unit testing for consumers of the search data
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultData.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultData.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultData.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property. If the value
            represents a single-value result, the single-value form will be returned. If the 
            value represents a multi-value result, the multi-value (collection) form will be
            returned.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionSortOrder">
            <summary>
            This enum defines possible sort orders for query completion results with a Solr provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IQueryProposition">
            <summary>
            The ISearchManager interface defines a component capable of submitting
            queries for CMS data (content, users, groups, etc.) and returning the
            relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQuerySuggestions(System.String,System.Int32)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQuerySuggestions(Ektron.Cms.Search.QuerySuggestionRequest)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQueryCompletions(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQueryCompletions(System.String,System.Int32)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryProposition.GetQueryCompletions(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <param name="sortOrder">Order in which to return query completions</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="T:Ektron.Cms.Search.IQueryPropositionManager">
            <summary>
            The ISearchManager interface defines a component capable of submitting
            queries for CMS data (content, users, groups, etc.) and returning the
            relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQuerySuggestions(System.String,System.Int32)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQuerySuggestions(Ektron.Cms.Search.QuerySuggestionRequest)">
            <summary>
            Return Query suggestions based on request parameters.
            </summary>
            <param name="request">QuerySuggestionRequest parameters</param>
            <returns>Query suggestions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQuerySuggestions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQueryCompletions(Ektron.Cms.Search.QueryCompletionRequest)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="request">Query completion request parameters</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentNullException">null request object passed to the function</exception>
            <exception cref="T:System.ArgumentException">One or more properties of the request object are null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQueryCompletions(System.String,System.Int32)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="M:Ektron.Cms.Search.IQueryPropositionManager.GetQueryCompletions(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Return Query completions based on query completion request parameters.
            </summary>
            <param name="searchText">Query text</param>
            <param name="maxCount">Maximum number of query completions requested</param>
            <param name="sortOrder">Order in which to return query completions</param>
            <returns>Query completions</returns>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">Search settings for this site could not be found</exception>
            <exception cref="T:System.ArgumentException">searchText parameter is null/empty</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
            <exception cref="T:System.NotSupportedException">GetQueryCompletions Not Supported Exception</exception>
        </member>
        <member name="T:Ektron.Cms.Search.QuerySuggestionRequest">
            <summary>
            The QuerySuggestionRequest class defines the parameters of a request for 
            the configured search engine to predict query terms based on some partial
            term input.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionRequest.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query suggestions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>        
            <param name="sortOrder">Type of sorting applied to the results</param>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionRequest.Query">
            <summary>
            Gets or sets the (partial) query term which the search engine will use
            as a seed for predicting completed terms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionRequest.MaxCount">
            <summary>
            Gets or sets the suggested maximum count of query suggestions for the search engine. 
            Actual counts may vary according to term availability as determined by the search 
            engine's internal algorithms.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QuerySuggestionResponse">
            <summary>
            The QuerySuggestionResponse class is a data structure which aggregates
            query completions for a partial search term, as predicted by the
            configured search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionResponse.QuerySuggestions">
            <summary>
            Gets or sets a collection of suggested terms as predicted by
            the configured search provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QuerySuggestionTerm">
            <summary>
            The QuerySuggestionTerm class is a data structure describing an
            individual, completed, query term as predicted by the configured
            search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QuerySuggestionTerm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QuerySuggestionTerm.Suggestion">
            <summary>
            Gets or sets the predicted query term.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.ContentSourceData">
            <summary>
            This class stores the content source information of CMS Search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.ContentSourceData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.ContentSourceData.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.ContentSourceData.Name">
            <summary>
            Gets or sets the name of the content source for the associated CMS site.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.CultureInfo">
            <summary>
            This class represents the language information required for logging search query statistics.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.CultureInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.CultureInfo.LanguageId">
            <summary>
            Gets or Sets the site language for the current search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.CultureInfo.Culture">
            <summary>
            Gets or Sets the culture for the site language for the current search query
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionResponse">
            <summary>
            The QueryCompletionResponse class is a data structure which aggregates
            query completions for a partial search term, as predicted by the
            configured search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionResponse.QueryCompletions">
            <summary>
            Gets or sets a collection of completed terms as predicted by
            the configured search provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionTerm">
            <summary>
            The QueryCompletionTerm class is a data structure describing an
            individual, completed, query term as predicted by the configured
            search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionTerm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionTerm.Completion">
            <summary>
            Gets or sets the predicted query term.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryCompletionRequest">
            <summary>
            The QueryCompletionRequest class defines the parameters of a request for 
            the configured search engine to predict query terms based on some partial
            term input.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor(System.String,System.Int32,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query completions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>
            <param name="language">Target content language</param>
            <param name="sortOrder">Type of sorting applied to the results</param>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor(System.String,System.Int32,Ektron.Cms.Search.QueryCompletionSortOrder)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query completions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>        
            <param name="sortOrder">Type of sorting applied to the results</param>
        </member>
        <member name="M:Ektron.Cms.Search.QueryCompletionRequest.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="query">Query term</param>
            <param name="maxCount">
            Suggested maximum count of query completions for the search engine. Actual counts
            may vary according to term availability as determined by the search engines internal
            algorithms.
            </param>                
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.Query">
            <summary>
            Gets or sets the (partial) query term which the search engine will use
            as a seed for predicting completed terms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.MaxCount">
            <summary>
            Gets or sets the suggested maximum count of query completions for the search engine. 
            Actual counts may vary according to term availability as determined by the search 
            engine's internal algorithms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.Language">
            <summary>
            Gets or sets the target content language for content feeding potential completed terms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.DictionaryName">
            <summary>
            Gets or sets the name of the target dictionary supplying completed terms. This
            parameter is not supported by all search providers. See the Ektron Developer
            Reference for guidance.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.HandlerName">
            <summary>
            Gets or sets the name of the handler supplying completed terms. This
            parameter is not supported by all search providers. See the Ektron Developer
            Reference for guidance.        
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryCompletionRequest.SortOrder">
            <summary>
            Gets or sets the type of sorting applied to query completion results.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.JsonException">
            <summary>
            This class encapsulates error information (if any) while receiving or deserializing search-related query statistics objects using JSON.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.JsonException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.JsonException.Message">
            <summary>
            Gets or Sets the Message of the exception
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.JsonException.InnerMessage">
            <summary>
            Gets or Sets the InnerMessage of the exception
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.PageInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.CurrentPageIndex">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.PageSize">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.NumberOfPages">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PageInfo.PageStartOffset">
            <summary>
            Starting Offset of the Page
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.PublishStatisticsException">
            <summary>
            This class stores the content source information of CMS Search provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse">
            <summary>
            This class stores the content source information of CMS Search provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse.Status">
            <summary>
            Gets or sets the status message of publishing the statistics of a query Url.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.PublishStatusResponse.Code">
            <summary>
            Gets or sets the status code of publishing the statistics of a query Url.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchLanguageData">
            <summary>
            This class represents the language information required for logging search query statistics.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchLanguageData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchLanguageData.LanguageId">
            <summary>
            Gets or Sets the site language for the current search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchLanguageData.QueryCulture">
            <summary>
            Gets or Sets the culture for the site language for the current search query
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchPageInfo">
            <summary>
            This class encapsulates the paging information of a search result
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.ResultCount">
            <summary>
            Gets or Sets the ResultCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.PageCount">
            <summary>
            Gets or Sets the PageCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.CurrentPageIndex">
            <summary>
            Gets or Sets the CurrentPageIndex of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.ResultsPerPage">
            <summary>
            Gets or Sets the ResultsPerPage of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.EndCount">
            <summary>
            Gets or Sets the EndCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.StartCount">
            <summary>
            Gets or Sets the StartCount of a search result set
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchPageInfo.NumberOfPages">
            <summary>
            Gets or Sets the NumberOfPages of a search result set
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchQueryData">
            <summary>
            This class encapsulates the query data of search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchQueryData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.SearchType">
            <summary>
            Gets or Sets the SearchType of a search query, Basic/Advanced/XmlSearch
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.QueryText">
            <summary>
            Gets or Sets the QueryText of a basic search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.WithoutWords">
            <summary>
            Gets or Sets the WithoutWords of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.WithAllWords">
            <summary>
            Gets or Sets the WithAllWords of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.ExactPhrase">
            <summary>
            Gets or Sets the ExactPhrase of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.WithAnyWord">
            <summary>
            Gets or Sets the WithAnyWord of an advanced search query
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryData.SearchPageInfo">
            <summary>
            Gets or Sets the paging information of a search query
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo">
            <summary>
            This class encapsulates the query data of search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.SearchType">
            <summary>
            Gets or Sets the SearchType of a search query, Basic/Advanced/XmlSearch.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.QueryText">
            <summary>
            Gets or Sets the QueryText of a basic search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.WithoutWords">
            <summary>
            Gets or Sets the WithoutWords of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.WithAllWords">
            <summary>
            Gets or Sets the WithAllWords of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.ExactPhrase">
            <summary>
            Gets or Sets the ExactPhrase of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.WithAnyWord">
            <summary>
            Gets or Sets the WithAnyWord of an advanced search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.RequestedResultOffset">
            <summary>
            Gets or Sets the RequestedResultOffset for a search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.RequestedResultSetSize">
            <summary>
            Size of the search results that was requested.
            This effectively would've been a multiple of the 
            display page size so as to reduce round trips to the
            search provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.QueryId">
            <summary>
            Gets or Sets the QueryId of the search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchQueryInfo.SessionID">
            <summary>
            Gets or Sets the Session Information of the Session under which query was issued.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchResultInfo">
            <summary>
            This class encapsulates the details of a search result
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.SuggestedResultCount">
            <summary>
            Gets or Sets the count of the suggested results for the current search query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.TotalHits">
            <summary>
            Gets or Sets the Total Number of Results that the Search Resulted in.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultInfo.ResultsPageInfo">
            <summary>
            Gets or Sets the ResultsPageInfo information for the current search query.
            /// </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.ResultItemType">
            <summary>
            This class represents the type of search result
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.QueryStatistics.ResultItemType.SearchResult">
            <summary>
            Search Result
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.QueryStatistics.ResultItemType.SuggestedResult">
            <summary>
            Suggested Search Result
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchResultItem">
            <summary>
            This class encapsulates the details of a search result
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchResultItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Url">
            <summary>
            Gets or Sets the search result Quicklink
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.RelativeUrl">
            <summary>
            Gets or Sets the search result RelativeQuicklink (QuickLink minus scheme, port #, hostname, and site path to get the actual quicklink in index. 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Title">
            <summary>
            Gets or Sets the search result Title
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Id">
            <summary>
            Gets or Sets the search result Content Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.CultureInfo">
            <summary>
            Gets or Sets the CultureInfo of the search result
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.SiteId">
            <summary>
            Gets or Sets the search result Site Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.Rank">
            <summary>
            Gets or Sets the search result Rank
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchResultItem.ResultItemType">
            <summary>
            Gets or Sets the search result item type
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchStatistics">
            <summary>
            This class represents information required for logging search query statistics.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchStatistics.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.Action">
            <summary>
            Gets or Sets the action sent by the client side handler for logging search query statistics.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.CultureInfo">
            <summary>
            Gets or Sets the CultureInfo of the the search query issued by the user.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.QueryInfo">
            <summary>
            Gets or Sets the SearchQueryData containing information about the search query issued by the user.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.ResultInfo">
            <summary>
            Gets or Sets the ResultInfo data for a the search results.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.ResultItem">
            <summary>
            Gets or Sets the selected SearchResultItem data for a specific search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.UnselectedResultItems">
            <summary>
            Gets or Sets the unselected SearchResultItem data for a specific search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.UserWhoSelected">
            <summary>
            Gets or Sets the User information for a specific search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.ContentSourceData">
            <summary>
            Gets or Sets the content source information for a CMS site.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.TimeOfSelection">
            <summary>
            Gets or Sets the time when search result was clicked.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchStatistics.SelectionSourceUrl">
            <summary>
            Gets or Sets the absolute url at which search result was clicked.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchUserData">
            <summary>
            This class represents the information of a user who clicked on a search result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserData.#ctor(System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserData.Id">
            <summary>
            Gets or Sets the Id of a user who clicked on a search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserData.UserName">
            <summary>
            Gets or Sets the UserName of a user who clicked on a search result.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.QueryStatistics.SearchUserInfo">
            <summary>
            This class represents the information of a user who clicked on a search result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.#ctor(System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.Id">
            <summary>
            Gets or Sets the Id of a user who clicked on a search result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.QueryStatistics.SearchUserInfo.UserName">
            <summary>
            Gets or Sets the UserName of a user who clicked on a search result.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementInfo">
            <summary>
            The RefinementInfo class is a data structure describing 
            individual refinement specifications and restrictions 
            applied to a query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor(Ektron.Cms.Search.RefinementSpecification{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Constructor
            </summary>
            <param name="specification">Query refinement specification</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor(Ektron.Cms.Search.Refinement)">
            <summary>
            Constructor
            </summary>
            <param name="refinement">Query refinement restriction</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementInfo.#ctor(System.Collections.Generic.List{Ektron.Cms.Search.Refinement})">
            <summary>
            Constructor
            </summary>
            <param name="refinements">Collection of refinement instances for a common refinement property</param>
            <exception cref="T:System.ArgumentNullException">The 'refinements' argument cannot be null.</exception>
            <exception cref="T:System.ArgumentException">The 'refinements' collection cannot be empty and must contain data for the same refinement property.</exception>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementInfo.Specification">
            <summary>
            Get or sets the query refinement specification.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementInfo.Refinements">
            <summary>
            Gets the query refinement restrictions.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementInfo.Property">
            <summary>
            Gets or sets the property associated with this refinement information.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.StringFacet">
            <summary>
            The StringFacet class represents a classification of search results
            on a string index field.  
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Facet`1">
            <summary>
            The Facet class represents a classification of search results
            on a specific index field.
            </summary>
            <typeparam name="T">Type of PropertyExpression</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.Facet`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.Facet`1.Property">
            <summary>
            Gets or sets the property associated with this facet.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.UniqueFacetBucket{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.UniqueFacetBucket{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="property">StringPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.UniqueFacetBucket{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.StringFacet.Buckets">
            <summary>
            Gets or sets the collection of facet buckets associated with this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DecimalFacet">
            <summary>
            The DecimalFacet class represents a classification of search results
            on a decimal index field.  
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Double}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalMultiValuePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Double}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DecimalMultiValuePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Double}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.DecimalFacet.Buckets">
            <summary>
            Gets or sets the collection of facet buckets associated with this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DateFacet">
            <summary>
            The DateFacet class represents a classification of search results
            on a date/time index field. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DatePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DatePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">DateMultiValuePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <param name="property">DateMultiValuePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.DateFacet.Buckets">
            <summary>
            Gets or sets the bounded facet buckets representing the DateTime 
            ranges for this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FacetComparer">
            <summary>
            Comparer that determines if two Facets are equal based of the Indexed Property that they represent.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.FacetBucket">
            <summary>
            The FacetBucket class describes a subset of results classified
            within a given Facet.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.FacetBucket.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="count">Count of items encompassed by this bucket</param>
        </member>
        <member name="P:Ektron.Cms.Search.FacetBucket.Count">
            <summary>
            Gets or sets the count of items encompassed by this bucket.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.FacetBucket.Refinement">
            <summary>
            Gets or sets the refinement data identifying this facet. This data
            can be applied to subsequent queries to indicate that the result set
            should be restricted to items classified by this FacetBucket.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.BoundedFacetBucket`1">
            <summary>
            The BoundedFacetBucket class is a data structure describing a 
            facet result that represent a range of values.
            </summary>
            <typeparam name="T">Data type of the values associated with this facet bucket</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedFacetBucket`1.#ctor(Ektron.Cms.Search.BoundedValue{`0},System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="value">Upper and lower bounds</param>
            <param name="count">Number of items encompassed by this facet bucket</param>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedFacetBucket`1.Value">
            <summary>
            Gets or sets the upper and lower bounds for data encompassed by
            this facet bucket.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IntegerFacet">
            <summary>
            The IntegerFacet class represents a classification of search results
            on a integer index field.  
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerPropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerPropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerMultiValuePropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <param name="property">IntegerMultiValuePropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerFacet.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedFacetBucket{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression representing refinement property</param>
            <param name="buckets">Collection of facet buckets associated with this facet</param>
        </member>
        <member name="P:Ektron.Cms.Search.IntegerFacet.Buckets">
            <summary>
            Gets or sets the collection of facet buckets associated with this facet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.UniqueFacetBucket`1">
            <summary>
            The UniqueFacetBucket class describes a facet bucket representing
            a single unique value.
            </summary>
            <typeparam name="T">Type of value</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.UniqueFacetBucket`1.#ctor(`0,System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value associated with this facet bucket</param>
            <param name="count">Number of items encompassed by this facet bucket</param>
        </member>
        <member name="P:Ektron.Cms.Search.UniqueFacetBucket`1.Value">
            <summary>
            Gets or sets the value associated with this facet bucket.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IAuthenticationHandler">
            <summary>
            The IAuthenticationHandler interface describes a component capable
            of applying the appropriate permission data to an outgoing search
            query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.Permission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query.
            </summary>
            <param name="permission">Permision data</param>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.ManualUserPermission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query. The permission data indicates
            that the query should execute as a specific CMS user.
            </summary>
            <param name="permission">Manual user permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.CurrentUserPermission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query. The permission data indicates
            that the query should execute as the current CMS user.
            </summary>
            <param name="permission">Current user permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.IAuthenticationHandler.Handle(Ektron.Cms.Search.AdministratorPermission)">
            <summary>
            Handles the specified permission data, applying it
            to an outgoing search query. The permission data indicates
            that the query should execute as a CMS administrator.
            </summary>
            <param name="permission">Administrator user permission data</param>
        </member>
        <member name="T:Ektron.Cms.Search.ICrawler">
            <summary>
            The ICrawler interface describes a components capable of 
            managing initiation of indexing activities for relevent 
            CMS events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddContent(Ektron.Cms.ContentData)">
            <summary>
            Signals the crawler to handle an add content event.
            </summary>
            <param name="content">Content</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateContent(Ektron.Cms.ContentData)">
            <summary>
            Signals the crawler to handle an update content event.
            </summary>
            <param name="content">Content</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteContent(System.Int64)">
            <summary>
            Signals the crawler to handle an delete content event.
            </summary>
            <param name="contentId">Content</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddFolder(Ektron.Cms.FolderData)">
            <summary>
            Signals the crawler to handle an add folder event.
            </summary>
            <param name="folder">Folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateFolder(Ektron.Cms.FolderData)">
            <summary>
            Signals the crawler to handle an update folder event.
            </summary>
            <param name="folder">Folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteFolder(System.Int64)">
            <summary>
            Signals the crawler to handle an delete folder event.
            </summary>
            <param name="folderId">Folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.CopyFolder(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle a copy folder event.
            </summary>
            <param name="sourceFolderId">Folder Id of source folder</param>
            <param name="destinationFolderId">Folder Id of destination folder</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.MoveFolder(System.Int64)">
            <summary>
            Signals the crawler to handle a move folder event.
            </summary>
            <param name="folderID">Folder Id after move</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Signals the crawler to handle an add metadata event.
            </summary>
            <param name="metaType">Metadata</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateProperty(Ektron.Cms.MetaTypeBaseData)">
            <summary>
            Signals the crawler to handle an update metadata event.
            </summary>
            <param name="metaType">Metadata</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteProperty(System.Int64)">
            <summary>
            Signals the crawler to handle an delete metadata event.
            </summary>
            <param name="propertyId">Metadata</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddUserProperty(Ektron.Cms.UserCustomPropertyData)">
            <summary>
            Signals the crawler to handle a user property add event.
            </summary>
            <param name="data">User property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateUserProperty(Ektron.Cms.UserCustomPropertyData)">
            <summary>
            Signals the crawler to handle a user property update event.
            </summary>
            <param name="data">User property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteUserProperty(System.Int64)">
            <summary>
            Signals the crawler to handle a user property delete event.
            </summary>
            <param name="id">User property ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property add event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateCustomProperty(Ektron.Cms.Common.CustomPropertyData)">
            <summary>
            Signals the crawler to handle a custom property update event.
            </summary>
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCustomProperty(System.Int64,System.Int32)">
            <summary>
            Signals the crawler to handle a custom property delete event.
            </summary>
            <param name="propertyId">Property ID</param>
            <param name="languageId">Language ID</param>   
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object add event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateCustomPropertyObject(Ektron.Cms.Common.CustomPropertyObjectData)">
            <summary>
            Signals the crawler to handle a custom property object update event.
            </summary>        
            <param name="data">Custom property data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCustomPropertyObject(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.CustomPropertyObjectType,System.Int64)">
            <summary>
            Signals the crawler to handle a custom property object delete event.
            </summary>        
            <param name="objectId">CMS object ID</param>
            <param name="languageId">Language ID</param>
            <param name="cmsObjectType">CMS object type</param>
            <param name="propertyId">Custom property ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddUser(Ektron.Cms.UserData)">
            <summary>
            Signals the crawler to handle an add user event.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateUser(Ektron.Cms.UserData)">
            <summary>
            Signals the crawler to handle an update user event.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteUser(System.Int64)">
            <summary>
            Signals the crawler to handle a delete user event.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddColleague(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle an add colleague event.
            </summary>
            <param name="userId">First user in the colleague relationship</param>
            <param name="userId2">Second user in the colleague relationship</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteColleague(System.Int64,System.Int64)">
            <summary>
            Signals the crawler to handle an delete colleague event.
            </summary>
            <param name="userId">First user in the colleague relationship</param>
            <param name="userId2">Second user in the colleague relationship</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddGroup(Ektron.Cms.CommunityGroupData)">
            <summary>
            Signals the crawler to handle an add Group event.
            </summary>
            <param name="Group">Group</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateGroup(Ektron.Cms.CommunityGroupData)">
            <summary>
            Signals the crawler to handle an update Group event.
            </summary>
            <param name="Group">Group</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteGroup(System.Int64)">
            <summary>
            Signals the crawler to handle a delete Group event.
            </summary>
            <param name="GroupId">Group ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddLibraryItem(Ektron.Cms.LibraryData)">
            <summary>
            Signals the crawler to handle an add library item event.
            </summary>
            <param name="libraryData">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateLibraryItem(Ektron.Cms.LibraryData)">
            <summary>
            Signals the crawler to handle an update library item event.
            </summary>
            <param name="libraryData">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteLibraryItem(System.Int64)">
            <summary>
            Signals the crawler to handle a delete library item event.
            </summary>
            <param name="id">Library item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddTaxonomyItem(Ektron.Cms.TaxonomyBaseData)">
            <summary>
            Signals the crawler to handle an add taxonomy item event.
            </summary>
            <param name="data">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateTaxonomyItem(Ektron.Cms.TaxonomyBaseData)">
            <summary>
            Signals the crawler to handle an update taxonomy item event.
            </summary>
            <param name="data">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteTaxonomyItem(System.Int64)">
            <summary>
            Signals the crawler to handle an delete taxonomy item event.
            </summary>
            <param name="id">Taxonomy item</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.TagObject(Ektron.Cms.TagAssignmentData)">
            <summary>
            Signals the crawler to handle a tag assignment event.
            </summary>
            <param name="assignmentData">Tag assignment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteObjectTag(System.Int64,System.Int64,Ektron.Cms.Common.EkEnumeration.CMSObjectTypes,System.Int64)">
            <summary>
            Signals the crawler to handle a tag delete event.
            </summary>
            <param name="tagId">Tag ID</param>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object Type</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddXmlConfiguration(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an add XML configuration event.
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateXmlConfiguration(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an update XML configuration event.
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteXmlConfiguration(System.Int64)">
            <summary>
            Signals the crawler to handle an delete XML configuration event.
            </summary>
            <param name="id">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateXmlIndex(Ektron.Cms.XmlConfigData)">
            <summary>
            Signals the crawler to handle an update to XML Index configuration event (saving the index fields on second screen of Smart form creation).
            </summary>
            <param name="data">XML configuration</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.PublishCatalogEntry(System.Int64)">
            <summary>
            Signals the crawler to handle a publish catalog entry event.
            </summary>
            <param name="id">Catalog entry ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCatalogEntry(System.Int64)">
            <summary>
            Signals the crawler to handle a delete catalog entry event.
            </summary>
            <param name="id">Catalog entry ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.PublishWebEvent(Ektron.Cms.Common.Calendar.WebEventData)">
            <summary>
            Signals the crawler to handle an publish web event.
            </summary>
            <param name="eventData">Web event data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteWebEvent(System.Int64)">
            <summary>
            Signals the crawler to handle an delete web event.
            </summary>
            <param name="id">Web event id</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddBlogComment(Ektron.Cms.BlogComment)">
            <summary>
            Signals the crawler to handle an add blog comment event.
            </summary>
            <param name="comment">Blog comment data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddDiscussionTopic(Ektron.Cms.DiscussionTopic)">
            <summary>
            Signals the crawler to handle an add discussion topic event.
            </summary>
            <param name="topic">Discussion topic data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddDiscussionReply(Ektron.Cms.TaskData)">
            <summary>
            Signals the crawler to handle an add discussion reply event.
            </summary>
            <param name="reply">Task data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateDiscussionTopic(Ektron.Cms.DiscussionTopic)">
            <summary>
            Signals the crawler to handle an update discussion topic event.
            </summary>
            <param name="topic">Discussion topic data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an add manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an update manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle a delete manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DisableAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle a disable manual alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.EnableAlias(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData)">
            <summary>
            Signals the crawler to handle an enable alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an add auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle an update auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a delete auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DisableAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a disable auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.EnableAliasRule(Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData)">
            <summary>
            Signals the crawler to handle a enable auto alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddManualAlias(Ektron.Cms.Common.UrlAliasManualData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddAutoAlias(Ektron.Cms.Common.UrlAliasAutoData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddRegExAlias(Ektron.Cms.UrlAliasRegExData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddCommunityAlias(Ektron.Cms.Common.UrlAliasCommunityData)">
            <summary>
            Signals the crawler to handle an add alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateManualAlias(Ektron.Cms.Common.UrlAliasManualData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAutoAlias(Ektron.Cms.Common.UrlAliasAutoData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateRegExAlias(Ektron.Cms.UrlAliasRegExData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateCommunityAlias(Ektron.Cms.Common.UrlAliasCommunityData)">
            <summary>
            Signals the crawler to handle an update alias event.
            </summary>
            <param name="data">Alias data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteManualAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteAutoAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteRegExAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteCommunityAlias(System.Int64)">
            <summary>
            Signals the crawler to handle an delete alias event.
            </summary>
            <param name="id">Alias ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateAliasSetting(System.String,System.Object)">
            <summary>
            Signals the crawler to handle a URL aliasing settings update.
            </summary>
            <param name="settingsName">Settings key</param>
            <param name="settingsValue">Settings value</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle the addition of a template.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateTemplate(Ektron.Cms.TemplateData)">
            <summary>
            Signals the crawler to handle the update of a template.
            </summary>
            <param name="data">Template data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeleteTemplate(System.Int64)">
            <summary>
            Signals the crawler to handle the deletion of a template.
            </summary>
            <param name="id">Template id</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.AddPermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the addition of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdatePermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the update of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.DeletePermission(Ektron.Cms.PermissionData)">
            <summary>
            Signals the crawler to handle the deletion of a permission.
            </summary>
            <param name="data">Permission data</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdateItemInheritance(System.Int64,System.String,System.Boolean)">
            <summary>
            Signals the crawler to handle the update of the permission
            inheritance setting for a particular item.
            </summary>
            <param name="itemId">CMS item ID</param>
            <param name="requestType">Request type</param>
            <param name="enable">Is inherited?</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.UpdatePrivateSetting(System.Int64,System.String,System.Boolean)">
            <summary>
            Signals the crawler to handle the update of the permission
            privacy setting for a particular item.
            </summary>
            <param name="itemId">CMS item ID</param>
            <param name="requestType">Request type</param>
            <param name="enable">Is private?</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartFullCrawl">
            <summary>
            Requests a full crawl from the associated indexing service.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests an incremental crawl from the associated indexing service.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType)">
            <summary>
            Requests a full crawl from the associated indexing service.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartIncrementalCrawl(System.Boolean,Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests an incremental crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="isDelayed">Flag indicating whether or not to respect the crawl interval</param>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="M:Ektron.Cms.Search.ICrawler.StartFullCrawl(Ektron.Cms.Search.Contracts.CrawlType,System.Boolean)">
            <summary>
            Requests a full crawl from the associated indexing service with an option whether or not to respect crawl filters from CMS database.
            </summary>
            <param name="crawlType">crawlType indicating the type of crawl</param>
            <param name="ignoreFlags">Flag indicating whether or not to respect the crawl filters from CMS database</param>
        </member>
        <member name="T:Ektron.Cms.Search.IDocumentPromotionManager">
            <summary>
            Manages crawl initiation for relevent CMS events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IDocumentPromotionManager.AddDocumentPromotion(Ektron.Cms.Interfaces.Search.SearchProfiles.SearchProfile)">
            <summary>
            Adds a Document Promotion using information in the SearchProfile object.
            </summary>
            <param name="profile">Document Promotion information contained in the SearchProfile object</param>
        </member>
        <member name="M:Ektron.Cms.Search.IDocumentPromotionManager.AddKeywordDocumentPromotion(System.String,System.String,Ektron.Cms.Interfaces.Search.SearchProfiles.IPromotion)">
            <summary>
            Adds a Document Promotion to the default SearchProfile (created by SearchConfig) using information in the IPromotion object.
            </summary>
            <param name="promotion">Document Promotion information contained in the IPromotion object</param>
        </member>
        <member name="T:Ektron.Cms.Search.IIntegratedSearchMapping">
            <summary>
            The IntegratedSearchMapping interface describes a business object 
            which exposes functionality supporting the creation and management 
            of integrated search mappings.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Add(Ektron.Cms.Search.IntegratedSearchMappingData)">
            <summary>
            Adds the specified integrated search mapping.
            </summary>
            <param name="mapping">Integrated search mapping</param>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Update(Ektron.Cms.Search.IntegratedSearchMappingData)">
            <summary>
            Updates the specified integrated search mapping.
            </summary>
            <param name="mapping">Integrated search mapping</param>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Delete(System.Guid)">
            <summary>
            Deletes the specified integrated search mapping from the database.
            </summary>
            <param name="id">ID of the integrated search mapping</param>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Get(System.Guid)">
            <summary>
            Gets the specified integrated search mapping.
            </summary>
            <param name="id">ID of the integrated search mapping</param>
            <returns>Integrated search mapping</returns>
        </member>
        <member name="M:Ektron.Cms.Search.IIntegratedSearchMapping.Get">
            <summary>
            Gets a collection of all integrated search mappings.
            </summary>
            <returns>Collection of all integrated search mappings</returns>
        </member>
        <member name="T:Ektron.Cms.Search.IntegratedSearchMappingProperty">
            <summary>
            Enumeration of properties in Search settings.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.IntegratedSearchMappingData">
            <summary>
            The IntegratedSearchMappingData class is a data structure
            representing a relationship between a virtual directory
            hosted under the CMS site root and a corresponding indexed
            file share.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IntegratedSearchMappingData.Id">
            <summary>
            Gets or sets the mapping ID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IntegratedSearchMappingData.StartAddress">
            <summary>
            Gets or sets the start address associated with the mapping.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.IntegratedSearchMappingData.VirtualDirectory">
            <summary>
            Gets or sets the virtual directory associated with the mapping.
            </summary>
            <remarks>
            The virtual directory is relative to the site root.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Search.Query.IParser">
            <summary>
            Interface for converting a token list into a grammar parse tree.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Query.IParser.Parse(System.Collections.Generic.IEnumerable{Ektron.Cms.Search.Query.Token})">
            <summary>
            Converts a list of tokens into a parse tree.
            </summary>
            <remarks>
            Tokens can be generated from a string through the ITokenizer 
            interface. 
            
            The ParseTree object can be converted into an ExpressionTree through 
            implementations of the ITranslator interface. 
            </remarks>
            <see cref="T:Ektron.Cms.Search.Query.ITokenizer"/>
            <seealso cref="T:Ektron.Cms.Search.Query.ITranslator"/>
            <param name="tokens">Enumerable token list</param>
            <returns>A grammar parse tree</returns>
        </member>
        <member name="T:Ektron.Cms.Search.IPropertyNameResolver">
            <summary>
            The IPropertyNameResolver interface describes a component capable of
            tranforming an internal CMS property name to the name of the corresponding
            index field.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IPropertyNameResolver.Resolve(System.String,Ektron.Cms.Search.PropertyCategory,Ektron.Cms.Search.PropertyType)">
            <summary>
            Translates the specified CMS property name to the name of the corresponding
            index field (as its known the the underlying search provider).
            </summary>
            <param name="name">CMS property name</param>
            <param name="category">Category of the CMS property</param>
            <param name="type">Data type of the CMS property</param>
            <returns>Index field name</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchCriteriaRule">
            <summary>
            The ISearchCriteriaRule interface describes a processing
            rule capable of transforming one or more values of a
            SearchCriteria object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchCriteriaRule.Process(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Processes the specified search criteria data.
            </summary>
            <param name="criteria">Search criteria data to process</param>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchManager">
            <summary>
            The ISearchManager interface defines a component capable of submitting
            queries for CMS data (content, users, groups, etc.) and returning the
            relevent results.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchManager.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
            <exception cref="T:Ektron.Cms.Search.AllNoiseException">Query contained only noise words</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyQueryException">Search criteria contained an empty query</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyReturnPropertiesException">No return properties were specified</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidOrderByException">A specified "order by" property was not included in the return properties collection</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidPropertyException">A specified property does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidScopeException">The specified scope is invalid or does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.MalformedExpressionException">The specified expression is invalid</exception>
            <exception cref="T:Ektron.Cms.Search.NoResultsException">The query yielded no results</exception>
            <exception cref="T:Ektron.Cms.Search.SearchAuthorizationException">The configured credentials are invalid</exception>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">The site has not been configured for search</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchManager.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Submits a query according to the specified criteria.
            </summary>
            <param name="criteria">Search criteria</param>
            <returns>Search response data</returns>
            <exception cref="T:Ektron.Cms.Search.AllNoiseException">Query contained only noise words</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyQueryException">Search criteria contained an empty query</exception>
            <exception cref="T:Ektron.Cms.Search.EmptyReturnPropertiesException">No return properties were specified</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidOrderByException">A specified "order by" property was not included in the return properties collection</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidPropertyException">A specified property does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.InvalidScopeException">The specified scope is invalid or does not exist</exception>
            <exception cref="T:Ektron.Cms.Search.MalformedExpressionException">The specified expression is invalid</exception>
            <exception cref="T:Ektron.Cms.Search.NoResultsException">The query yielded no results</exception>
            <exception cref="T:Ektron.Cms.Search.SearchAuthorizationException">The configured credentials are invalid</exception>
            <exception cref="T:Ektron.Cms.Search.SettingsNotFoundException">The site has not been configured for search</exception>
            <exception cref="T:Ektron.Cms.Search.SearchException">An error occurred while processing the query</exception>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchPropertyRule">
            <summary>
            The ISearchPropertyRule describes a component that manages 
            formatting rules for incoming and outgoing search properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Process(Ektron.Cms.Search.SearchResultData)">
            <summary>
            Processes the given search result based on the list of added rules.
            </summary>
            <param name="result">Result to be processed</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Process(Ektron.Cms.Search.SearchCriteria)">
            <summary>
            Processes the given search criteria.
            </summary>
            <param name="criteria">Criteria to be processed</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Add(Ektron.Cms.Search.ISearchResultRule)">
            <summary>
            Adds a result formatting rule.
            </summary>
            <param name="rule">Formatting rule</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchPropertyRule.Add(Ektron.Cms.Search.ISearchCriteriaRule)">
            <summary>
            Adds a criteria rule.
            </summary>
            <param name="rule">Criteria rule</param>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchProvider">
            <summary>
            The ISearchProvider interface describes a component that is capable
            of communicating with a specific search engine. This includes the
            translation of CMS search criteria into a syntax supported by that
            engine, issuing of the query, and the processing of any response
            data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchProvider.Search(Ektron.Cms.Search.KeywordSearchCriteria)">
            <summary>
            Executes a keyword-based query using the specified criteria.
            </summary>
            <param name="criteria">Criteria with which to search</param>
            <returns>Search results</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchProvider.Search(Ektron.Cms.Search.AdvancedSearchCriteria)">
            <summary>
            Executes a narrow, expression-based query using the specified criteria.
            </summary>
            <param name="criteria">Criteria with which to search</param>
            <returns>Search results</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchResultRule">
            <summary>
            The ISearchResultRule interface describes a processing
            rule capable of transforming one or more values of a
            SearchResultData object.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchResultRule.Process(Ektron.Cms.Search.SearchResultData)">
            <summary>
            Processes the specified search result data.
            </summary>
            <param name="result">Search result data to process</param>
        </member>
        <member name="T:Ektron.Cms.Search.ISearchSettings">
            <summary>
            The ISearchSettings interface describes a component
            capable of updating and retrieving the configuration
            details for the 'search' feature.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISearchSettings.GetItem">
            <summary>
            Gets the search settings for the current site.
            </summary>
            <returns>Search settings</returns>
        </member>
        <member name="T:Ektron.Cms.Search.ISuggestedResults">
            <summary>
            The ISuggestedResults interface describes a component providing
            administrative capabilities for suggested search result data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.GetList">
            <summary>
            Gets a collection of suggested result sets from the configured
            search provider.
            </summary>
            <returns>Collection of suggested result sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.GetItem(System.Guid)">
            <summary>
            Gets the suggested result set identified by the specified id.        
            </summary>
            <param name="id">ID of the suggested result set</param>
            <returns>Matching suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.GetItem(System.String)">
            <summary>
            Gets the suggested result set containing the specified
            search phrase.
            </summary>
            <param name="phrase">Target search phrase</param>
            <returns>Matching suggested result set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.Delete(System.Guid)">
            <summary>
            Deletes the suggested result identified by the id.
            </summary>
            <param name="id">ID of the suggested result set</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.Add(Ektron.Cms.Search.SuggestedResultSet)">
            <summary>
            Adds the specified suggested result set.
            </summary>
            <param name="suggestedResultSet">Suggested result set data to be saved</param>
        </member>
        <member name="M:Ektron.Cms.Search.ISuggestedResults.Update(Ektron.Cms.Search.SuggestedResultSet)">
            <summary>
            Updates the specified suggested result set.
            </summary>
            <param name="suggestedResultSet">Suggested result set data to be saved</param>     
        </member>
        <member name="T:Ektron.Cms.Search.ISynonyms">
            <summary>
            The ISynonyms interface describes a class providing access
            to search synonym sets.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.GetList(System.Int32)">
            <summary>
            Gets a collection of synonym sets for the specified language.
            </summary>        
            <param name="languageId">Language ID</param>
            <returns>Collection of SynonymSets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.GetItem(System.Guid)">
            <summary>
            Gets a synonym set.
            </summary>        
            <param name="id">Synonym set ID</param>
            <returns>Synonym set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Update(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Updates the specified synonym set.
            </summary>
            <param name="data">Synonym set</param>                
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Update(System.Collections.Generic.List{Ektron.Cms.Search.SynonymSet})">
            <summary>
            Updates the specified synonym sets.
            </summary>
            <param name="data">Collection of synonym sets</param>        
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Add(Ektron.Cms.Search.SynonymSet)">
            <summary>
            Adds the specified synonym set.
            </summary>
            <param name="data">Synonym set</param>
            <returns>Synonym set</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Add(System.Collections.Generic.List{Ektron.Cms.Search.SynonymSet})">
            <summary>
            Adds the specified synonym sets.
            </summary>
            <param name="data">Collection of synonym sets</param>
            <returns>Collection of Synonym Sets</returns>
        </member>
        <member name="M:Ektron.Cms.Search.ISynonyms.Delete(System.Guid,System.Int32)">
            <summary>
            Deletes the specified synonym set.
            </summary>
            <param name="id">Synonym set ID</param>        
            <param name="languageId">Language ID</param>
        </member>
        <member name="T:Ektron.Cms.Search.Query.ITokenizer">
            <summary>
            Interface for constructing a string tokenizer.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Query.ITokenizer.Tokenize(System.String)">
            <summary>
            Enumerates the tokens in a given search query text string
            </summary>
            <remarks>
            Tokens generated from the tokenizer can be converted into a grammar
            parse tree through instances of the IParser interface. 
            </remarks>
            <see cref="T:Ektron.Cms.Search.Query.IParser"/>
            <param name="text">Query string</param>
            <returns>Enumerable list of tokens</returns>
        </member>
        <member name="T:Ektron.Cms.Search.Query.ITranslator">
            <summary>
            Interface for converting a grammar parse tree into an Expression tree. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Query.ITranslator.Translate(Ektron.Cms.Search.Query.ParseTree)">
            <summary>
            Converts a parse tree into an Expression tree.
            </summary>
            <remarks>
            Parse trees can be generated from token lists through the 
            IParser interface. 
            </remarks>
            <see cref="T:Ektron.Cms.Search.Query.IParser"/>
            <param name="parseTree">Parse tree to translate</param>
            <returns>Expression tree</returns>
        </member>
        <member name="T:Ektron.Cms.Search.KeywordMode">
            <summary>
            The KeywordMode enumeration desribes the options for
            handling query text keywords with no explicit operators
            connecting them.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.KeywordMode.ImplicitAnd">
            <summary>
            Indicates that keywords, in the absense of explicit
            operators, will be ANDed together.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.KeywordMode.ImplicitOr">
            <summary>
            Indicates that keywords, in the absense of explicit
            operators, will be ORed together.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.KeywordSearchCriteria">
            <summary>
            The KeywordSearchCriteria class describes a free-text, keyword-centric
            search query. The criteria is intended for broad, traditional search
            queries.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.KeywordSearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.KeywordSearchCriteria.QueryText">
            <summary>
            Gets and sets the keyword query text with which to filter the search results
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.KeywordSearchCriteria.ImplicitAnd">
            <summary>
            Gets or sets a flag indicating whether or not an
            'AND' operator is implied between search terms that lack
            any other explicit logical operator.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.Locale">
            <summary>
            The Locale class provides a mapping of language IDs to the
            relevent locale for a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Locale.Create(System.Int32)">
            <summary>
            Gets the string locale code represented by the language ID.
            </summary>
            <param name="languageId">Language ID</param>
            <returns>Locale code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.Locale.Get(System.Int32)">
            <summary>
            Gets the locale code for the specified language ID.
            </summary>
            <param name="languageId">Language ID</param>
            <returns>Locale code</returns>
        </member>
        <member name="P:Ektron.Cms.Search.Locale.Default">
            <summary>
            Gets the default 'Locale' according to the current content language.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Locale.ID">
            <summary>
            Gets the language ID for this locale.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Locale.Code">
            <summary>
            Gets the identifying code for this locale.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.ManualUserPermission">
            <summary>
            The ManualUserPermission class is a data structure encapsulating
            permission data representing a specific, manually specified, CMS
            user.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.ManualUserPermission.#ctor(System.Int64)">
            <summary>
            Constructor
            </summary>
            <param name="userId">CMS user ID</param>
        </member>
        <member name="M:Ektron.Cms.Search.ManualUserPermission.Authenticate(Ektron.Cms.Search.IAuthenticationHandler)">
            <summary>
            Authenticates the current permission against the given authentication handler
            </summary>
            <param name="handler">Handler with which to authenticate</param>
        </member>
        <member name="P:Ektron.Cms.Search.ManualUserPermission.UserId">
            <summary>
            Gets and sets the user identification to apply to search results
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.OrderData">
            <summary>
            The OrderData class represents the ordering information for the
            result set of a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.OrderData.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,Ektron.Cms.Search.OrderDirection)">
            <summary>
            Constructor
            </summary>
            <param name="property">Identifies the property on which to sort</param>
            <param name="direction">Indicates the direction of the sort</param>
        </member>
        <member name="P:Ektron.Cms.Search.OrderData.Property">
            <summary>
            Gets or sets the property on which to sort a result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.OrderData.Direction">
            <summary>
            Gets or sets the direction in which to sort a result set.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.OrderDirection">
            <summary>
            The OrderDirection enumeration describes the direction
            in which to sort a search result set.
            Ascending - Result items will be sorted in ascending order.
            Descending - Result items will be sorted in descending order
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.OrderDirection.Ascending">
            <summary>
            Result items will be sorted in ascending order.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.OrderDirection.Descending">
            <summary>
            Result items will be sorted in descending order.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.PropertyCategory">
            <summary>
            The PropertyCategory enumeration describes the classifications
            of CMS properties as they relate to the search index.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.Custom">
            <summary>
            Custom user properties
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.Metadata">
            <summary>
            Metadata definitions
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.SmartForm">
            <summary>
            SmartForm fields
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.Core">
            <summary>
            Core CMS properties
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.PropertyCategory.None">
            <summary>
            No category
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.PropertyType">
            <summary>
            Enumeration describing property data types.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.DateRefinementSpecification">
            <summary>
            The DateRefinementSpecification represents a strongly typed refinement specification 
            for date/time index properties.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.BoundedRefinementSpecification`2">
            <summary>
            The BoundedRefinementSpecification class serves as a base for refinement
            specification implementations representing ranged refinement criteria.
            </summary>
            <typeparam name="T">Type of PropertyExpression</typeparam>
            <typeparam name="U">Data type of refinement values</typeparam>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementSpecification`1">
            <summary>
            The RefinementSpecification class identifies a specific facet to
            be included in the search results.
            </summary>
            <typeparam name="T">Type of property associated with the facet</typeparam>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementSpecification`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementSpecification`1.Property">
            <summary>
            Gets or sets the refinement property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.BoundedRefinementSpecification`2.#ctor(`0,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{`1}})">
            <summary>
            Constructor
            </summary>
            <param name="property">PropertyExpression identifying the refinement property</param>
            <param name="thresholds">Collection of value ranges to be used as explicit thresholds for the refinement</param>
        </member>
        <member name="P:Ektron.Cms.Search.BoundedRefinementSpecification`2.Thresholds">
            <summary>
            Gets or sets a collection of value ranges describing explicit thresholds
            used to determine the bounds of facet buckets.
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DateRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.DateTime}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="T:Ektron.Cms.Search.DecimalRefinementSpecification">
            <summary>
            The DecimalRefinementSpecification represents a strongly typed refinement specification 
            for decimal index properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Double}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.DecimalRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Double}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="T:Ektron.Cms.Search.IntegerRefinementSpecification">
            <summary>
            The IntegerRefinementSpecification represents a strongly typed refinement specification 
            for integer index properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.IntegerRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.ICollection{Ektron.Cms.Search.BoundedValue{System.Int64}})">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
            <param name="property">Refinement property</param>
            <param name="thresholds">Explicit thresholds for facet buckets</param>
        </member>
        <member name="T:Ektron.Cms.Search.Refinement">
            <summary>
            The Refinement class is a data structure identifying a specific
            subset of results to which a query should be restricted.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Refinement.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.Refinement.#ctor(Ektron.Cms.Search.Expressions.PropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="property">Property expression</param>
            <param name="data">Refinement data</param>
        </member>
        <member name="P:Ektron.Cms.Search.Refinement.Property">
            <summary>
            Gets or sets the property associated with this refinement.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.Refinement.Data">
            <summary>
            Gets or sets the data identifying this refinement.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementCriteria">
            <summary>
            The RefinementCriteria class encapsulates all query criteria
            related to faceted search.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Add(Ektron.Cms.Search.Refinement)">
            <summary>
            Adds a specific refinement identifying a specific subset
            of results to which the query should be restricted.
            </summary>
            <param name="refinement">Refinement data</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Add(Ektron.Cms.Search.RefinementSpecification{Ektron.Cms.Search.Expressions.PropertyExpression})">
            <summary>
            Adds a RefinementSpecification identifying the facets that
            should be generated at query time.
            </summary>
            <param name="refinementSpecification">Specification identifying the relevent refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Add(Ektron.Cms.Search.RefinementInfo)">
            <summary>
            Add a RefinementInfo data structure to the criteria.
            </summary>
            <param name="refinementInfo"></param>
        </member>
        <member name="M:Ektron.Cms.Search.RefinementCriteria.Clear">
            <summary>
            Clears this criteria of any refinement specifications or 
            restrictions that it may contain.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementCriteria.Items">
            <summary>
            Gets a read-only collection of the refinement information associated
            with this criteria.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.RefinementCriteria.IsEnabled">
            <summary>
            Gets or sets a flag indicating whether or not refinement functionality
            is enabled for a query.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.StringRefinementSpecification">
            <summary>
            The StringRefinementSpecification represents a strongly typed refinement specification 
            for string index properties.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Constructor
            </summary>
            <param name="property">Refinement property</param>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.String)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Search.StringRefinementSpecification.#ctor(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.String,Ektron.Cms.Search.RefinementOrderData)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="P:Ektron.Cms.Search.StringRefinementSpecification.Filter">
            <summary>
            Hidden until this functionality becomes available.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.StringRefinementSpecification.Order">
            <summary>
            Hidden until this functionality becomes available.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementOrder">
            <summary>
            The RefinementOrder enumeration describes the available methods
            by which refinement values may be sorted.
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="F:Ektron.Cms.Search.RefinementOrder.Frequency">
            <summary>
            Sort order is determined according to the frequency of terms.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.RefinementOrder.Count">
            <summary>
            Sort order is determined according to the count of facet buckets.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.RefinementOrder.Label">
            <summary>
            Sort order is determined according to the label of the facet buckets.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.RefinementOrderData">
            <summary>
            The RefinementOrderData class describes the method by which
            refinement results should be sorted.
            </summary>
            <remarks>
            Hidden until this functionality becomes available.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Search.SearchContentProperty">
            <summary>
            The ContentProperty class provides access to the PropertyExpressions 
            which map default content properties to index fields.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Id">
            <summary>
            Gets the PropertyExpression for the content ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Language">
            <summary>
            Gets the PropertyExpression for the content language field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderId">
            <summary>
            Gets the PropertyExpression for the folder ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ContentType">
            <summary>
            Gets the PropertyExpression for the content type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ContentSubType">
            <summary>
            Gets the PropertyExpression for the content subtype field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Title">
            <summary>
            Gets the PropertyExpression for the content title field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.TaxonomyCategory">
            <summary>
            Gets the PropertyExpression for the taxonomy category field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Path">
            <summary>
            Gets the PropertyExpression for the content path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Tags">
            <summary>
            Gets the PropertyExpression for the content tags field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Rank">
            <summary>
            Gets the PropertyExpression for the rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Size">
            <summary>
            Gets the PropertyExpression for the content size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Description">
            <summary>
            Gets the PropertyExpression for the content description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Author">
            <summary>
            Gets the PropertyExpression for the content author field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.DateCreated">
            <summary>
            Gets the PropertyExpression for the content date created field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.DateModified">
            <summary>
            Gets the PropertyExpression for the content date modified field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.XmlConfigId">
            <summary>
            Gets the PropertyExpression for the content SmartForm ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ExpiryType">
            <summary>
            Gets the PropertyExpression for the content expiry type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.ExpiryDate">
            <summary>
            Gets the PropertyExpression for the content expiry date field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderName">
            <summary>
            Gets the PropertyExpression for the content folder name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.GoLiveDate">
            <summary>
            Gets the PropertyExpression for the content go live date field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapDate">
            <summary>
            Gets the PropertyExpression for the map date field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapLongitude">
            <summary>
            Gets the PropertyExpression for the map longitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapLatitude">
            <summary>
            Gets the PropertyExpression for the map latitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.MapAddress">
            <summary>
            Gets the PropertyExpression for the map address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderPath">
            <summary>
            Gets the PropertyExpression for the content folder path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.FolderIdPath">
            <summary>
            Gets the PropertyExpression for the content folder ID path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.Private">
            <summary>
            Gets the PropertyExpresion for the field indicating whether or not the content is private.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.AssetVersion">
            <summary>
            Gets the PropertyExpression for the asset version path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchContentProperty.SiteId">
            <summary>
            Gets the PropertyExpression for the ID of the parent site.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchCredentials">
            <summary>
            The SearchCredentials class is a data structure describing the
            credentials necessary to communicate with a search service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCredentials.Domain">
            <summary>
            Gets or sets the Window's domain.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCredentials.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchCustomProperty">
            <summary>
            The SearchCustomProperty class is a factory for property expressions
            targeting custom property fields.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetStringProperty(System.String)">
            <summary>
            Gets a StringPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>StringPropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetIntegerProperty(System.String)">
            <summary>
            Gets a IntegerPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>IntegerPropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetDecimalProperty(System.String)">
            <summary>
            Gets a DecimalPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>DecimalPropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetDateProperty(System.String)">
            <summary>
            Gets a DatePropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>DatePropertyExpression representing the custom property field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchCustomProperty.GetBooleanProperty(System.String)">
            <summary>
            Gets a BooleanPropertyExpression representing the custom property field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the custom property field</param>
            <returns>BooleanPropertyExpression representing the custom property field</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchECommerceProperty">
            <summary>
            The ECommerceProperty class provides access to the default
            PropertyExpressions for formulating e-commerce queries.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Id">
            <summary>
            Gets the PropertyExpression for product content ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Language">
            <summary>
            Gets the PropertyExpression for the product content language field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.CatalogNumber">
            <summary>
            Gets the PropertyExpression for product folder ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Description">
            <summary>
            Gets the PropertyExpression for the product description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the product QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ImageUrl">
            <summary>
            Gets the PropertyExpression for the product image field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.PathCategory">
            <summary>
            Gets the PropertyExpression for the product content path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Rank">
            <summary>
            Gets the PropertyExpression for the result rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted product summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Size">
            <summary>
            Gets the PropertyExpression for the product content size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ProductType">
            <summary>
            Gets the PropertyExpression for the product type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ProductTypeId">
            <summary>
            Gets the PropertyExpression for the product type ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.SkuNumber">
            <summary>
            Gets the PropertyExpression for the SKU number field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Height">
            <summary>
            Gets the PropertyExpression for the product height field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Width">
            <summary>
            Gets the PropertyExpression for the product width field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Length">
            <summary>
            Gets the PropertyExpression for the product length field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Weight">
            <summary>
            Gets the PropertyExpression for the product weight field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Purchased">
            <summary>
            Gets the PropertyExpression for the purchased field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.CurrencyId">
            <summary>
            Gets the PropertyExpression for the currency ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.ListPrice">
            <summary>
            Gets the PropertyExpression for the list price field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.SalePrice">
            <summary>
            Gets the PropertyExpression for the sale price field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Buyable">
            <summary>
            Gets the PropertyExpression for the buyable field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Title">
            <summary>
            Gets the PropertyExpression for the product title field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchECommerceProperty.Discontinued">
            <summary>
            Gets the PropertyExpression for the product discontinued field.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchGroupProperty">
            <summary>
            The GroupProperty class provides access to the default
            PropertyExpressions for formulating community group queries.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Id">
            <summary>
            Gets the PropertyExpression for the group ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Name">
            <summary>
            Gets the PropertyExpression for the name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.TaxonomyCategory">
            <summary>
            Gets the PropertyExpression for the taxonomy category field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.CreatorId">
            <summary>
            Gets the PropertyExpression for the group creator ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Enroll">
            <summary>
            Gets the PropertyExpression for the enroll field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Location">
            <summary>
            Gets the PropertyExpression for the location field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.ShortDescription">
            <summary>
            Gets the PropertyExpression for the short description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.LongDescription">
            <summary>
            Gets the PropertyExpression for the long description field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Path">
            <summary>
            Gets the PropertyExpression for the path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Tags">
            <summary>
            Gets the PropertyExpression for the tags field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Rank">
            <summary>
            Gets the PropertyExpression for the rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Avatar">
            <summary>
            Gets the PropertyExpression for the user avatar field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.DateModified">
            <summary>
            Gets the PropertyExpression for the date modified field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Title">
            <summary>
            Gets the PropertyExpression for the title field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Size">
            <summary>
            Gets the PropertyExpression for the size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.EmailAddress">
            <summary>
            Gets the PropertyExpression for the email address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchGroupProperty.Type">
            <summary>
            Gets the PropertyExpression for the user type field.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchMetadataProperty">
            <summary>
            The SearchMetadataProperty class is a factory for property expressions
            targeting metadata fields.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetStringProperty(System.String)">
            <summary>
            Gets a StringPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>StringPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetIntegerProperty(System.String)">
            <summary>
            Gets a IntegerPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>IntegerPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetDecimalProperty(System.String)">
            <summary>
            Gets a DecimalPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>DecimalPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetDateProperty(System.String)">
            <summary>
            Gets a DatePropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>DatePropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchMetadataProperty.GetBooleanProperty(System.String)">
            <summary>
            Gets a BooleanPropertyExpression representing the metadata field
            identified by the specified name value.
            </summary>
            <param name="name">Name of the metadata field</param>
            <returns>BooleanPropertyExpression representing the metadata field</returns>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Search.SearchProfiles.KeywordProfile.Equals(System.Object)">
            <summary>
            Returns true if the specified KeywordProfile's Term is equal to the Term in this instance of KeywordProfile
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if the specified object equals this one, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Interfaces.Search.SearchProfiles.KeywordProfile.GetHashCode">
            <summary>
            Gets the hash code based on the Term for this instance of KeywordProfile.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProvider">
            <summary>
            The SearchProvider class is a data structure describing a component
            capabable of providing search functionality to a CMS site.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.Equals(System.Object)">
            <summary>
            Returns true if the specified object is a provider equivalent to this one.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchProvider.ToString">
            <summary>
            Gets the string representation of this instance.
            </summary>
            <returns>String representation of this instance</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.Id">
            <summary>
            Gets or sets the ID for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.Type">
            <summary>
            Gets or sets the type code for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.AdminEndpoint">
            <summary>
            Gets or sets the administrative service endpoint for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.AdminCredentials">
            <summary>
            Gets or sets the credentials for this provider's administrative service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.ExtendedConfiguration">
            <summary>
            Gets or sets the extended configuration data XML for this provider.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProvider.Components">
            <summary>
            Gets or sets the collection of components associated with this provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProviderComponent">
            <summary>
            The SearchProviderComponent class is a data structure describing a component
            supporting a SearchProvider associated with the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Id">
            <summary>
            Gets or sets the ID for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Type">
            <summary>
            Gets or sets the type code for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.ProviderId">
            <summary>
            Gets or sets the ID of the parent provider for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Endpoint">
            <summary>
            Gets or sets the service endpoint for this component.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.Credentials">
            <summary>
            Gets or sets the credentials for this component's service.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchProviderComponent.ExtendedConfiguration">
            <summary>
            Gets or sets the extended configuration data XML for this component.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProviderComponentType">
            <summary>
            The SearchProviderComponentType identifies the type code
            values for SearchProviderComponents.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderComponentType.Content">
            <summary>
            Gets the type code for a 'Content' (indexing) search component.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderComponentType.Query">
            <summary>
            Gets the type code for a 'Query' search component.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchProviderType">
            <summary>
            The SearchProviderType identifies the type code
            values for SearchProviders.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderType.MsSearchServer">
            <summary>
            Gets the type code for a Microsoft Search Server provider.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SearchProviderType.MsFast">
            <summary>
            Gets the type code for a Microsoft Fast provider.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchResponseData">
            <summary>
            The SearchResponseData class is a data structure delivering
            the results of a search query.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResponseData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.Results">
            <summary>
            Gets or sets a collection of results relevent to the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.SuggestedResults">
            <summary>
            Gets or sets a collection of suggested results relevent to the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.PagingInfo">
            <summary>
            Gets or sets the paging details for this result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.SpellingSuggestion">
            <summary>
            Gets or sets a spelling suggestion for the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.ElapsedTime">
            <summary>
            Gets or sets the elapsed execution time for the submitted query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.Terms">
            <summary>
            Gets or sets a collection of search terms identified in submitted query.        
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResponseData.Facets">
            <summary>
            Gets or sets a list of Facets corresponding to the Search Results
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchResultData">
            <summary>
            The SearchResultData class represents an individual result item
            of a search query. 
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Constructor
            </summary>
            <param name="row">Result data row</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.#ctor(System.Data.DataRow)">
            <summary>
            Constructor
            </summary>
            <param name="row">Result data row</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsNull(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="property">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsNull(System.String)">
            <summary>
            Returns true if the value of the specified field is null.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property value is null, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.HasColumn(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="property">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.HasProperty(System.String)">
            <summary>
            Returns true if the specified property exists in the result item.
            </summary>
            <param name="propertyName">Property</param>
            <returns>True if the property exists in the result item, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsMultiValue(Ektron.Cms.Search.Expressions.PropertyExpression)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="property">Property expression</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.IsMultiValue(System.String)">
            <summary>
            Returns true if the field associated with the specified property expression
            represents a collection of values.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>True if the field contains a collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(System.String)">
            <summary>
            Returns the values of the field associated with the specified property. If the value
            represents a single-value result, the single-value form will be returned. If the 
            value represents a multi-value result, the multi-value (collection) form will be
            returned.
            </summary>
            <param name="propertyName">Property name</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Returns the value of the field associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Value of the field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">String property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Decimal property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Integer property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Date property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.GetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets a collection of values associated with the specified property.
            </summary>
            <param name="property">Boolean property expression</param>
            <returns>Collection of values</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(System.String,System.Object)">
            <summary>
            Sets a value for the specified property.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.BooleanPropertyExpression,System.Boolean)">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Boolean value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DatePropertyExpression,System.DateTime)">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Date value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.IntegerPropertyExpression,System.Int64)">
            <summary>
            Sets a value for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Integer (long) value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DecimalPropertyExpression,System.Double)">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Decimal value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.StringPropertyExpression,System.String)">
            <summary>
            Sets a value for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">Collection of string values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets a collection of values for the specified string property.
            </summary>
            <param name="property">String property expression</param>
            <param name="value">String value</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Sets a collection of values for the specified integer property.
            </summary>
            <param name="property">Integer property expression</param>
            <param name="value">Collection of integer (long) values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets a value for the specified decimal property.
            </summary>
            <param name="property">Decimal property expression</param>
            <param name="value">Collection of decimal values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Sets a value for the specified boolean property.
            </summary>
            <param name="property">Boolean property expression</param>
            <param name="value">Collection of boolean values</param>
        </member>
        <member name="M:Ektron.Cms.Search.SearchResultData.SetValue(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Sets a value for the specified date property.
            </summary>
            <param name="property">Date property expression</param>
            <param name="value">Collection of date values</param>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.PropertyCount">
            <summary>
            Returns the number of fields in this result item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Similarity">
            <summary>
            Gets or sets datac describing how closely this result item 
            relates to other items in the result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(System.String)">
            <summary>
            Gets and sets the value for the specified property. If the value of the field
            is null, DBNull is returned.
            </summary>
            <param name="propertyName">Name of property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.StringPropertyExpression)">
            <summary>
            Gets and sets the value for the specified string property. If the value of the field is
            null, String.Empty is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DecimalPropertyExpression)">
            <summary>
            Gets and sets the value for the specified decimal property. If the value of the field
            is null, 0 is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.IntegerPropertyExpression)">
            <summary>
            Gets and sets the value for the specified integer property. If the value of the field
            is null, 0 is returned.
            </summary>        
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DatePropertyExpression)">
            <summary>
            Gets and sets the value for the specified date property. If the value of the field
            is null, DateTime.MinValue is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.BooleanPropertyExpression)">
            <summary>
            Gets and sets the value for the specified boolean property. If the value of the field
            is null, false is returned.
            </summary>
            <param name="property">Property</param>
            <returns>Value for the specified property</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.StringMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified string property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of strings</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.IntegerMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified integer property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of integer (long) values</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DecimalMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified decimal property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of decimal</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.BooleanMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified boolean property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of boolean</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchResultData.Item(Ektron.Cms.Search.Expressions.DateMultiValuePropertyExpression)">
            <summary>
            Gets and sets a collection of values for the specified date property.
            </summary>
            <param name="m">Multi-value property expression</param>
            <returns>Collection of date</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchSettingsData">
            <summary>
            Ektron CMS site search settings object
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.Equals(System.Object)">
            <summary>
            Returns true if the specified object is a SearchSettingsData instance equivalent to this one.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSettingsData.ToString">
            <summary>
            Gets the string representation of this instance.
            </summary>
            <returns>String representation of this instance</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.Empty">
            <summary>
            Gets the singleton 'empty' instance of SearchSettingsData.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.UniqueId">
            <summary>
            Gets or sets the unique id for the associated CMS site.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.ContentSource">
            <summary>
            Gets or sets the name of the content source for the associated CMS site.
            </summary>        
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.Interval">
            <summary>
            Gets or sets the incremental crawl interval for the content source.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.AdminService">
            <summary>
            Gets or sets the search server admin service URL (with port).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.QueryService">
            <summary>
            Gets or sets the search query service URL (with port).
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.Filter">
            <summary>
            Gets or sets the filters for data operations that trigger
            the indexing process.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.IsActive">
            <summary>
            Gets or sets a flag indicating if this configuration is the 
            active configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchSettingsData.ExtendedConfiguration">
            <summary>
            Gets or sets the extended configuration data assocatied with
            this search configuration.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SearchSmartFormProperty">
            <summary>
            The SearchSmartFormProperty class is a factory for property expressions
            targeting Smart Form fields.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetStringProperty(System.String)">
            <summary>
            Gets a StringPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>StringPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetIntegerProperty(System.String)">
            <summary>
            Gets a IntegerPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>IntegerPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetDecimalProperty(System.String)">
            <summary>
            Gets a DecimalPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>DecimalPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetDateProperty(System.String)">
            <summary>
            Gets a DatePropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>DatePropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchSmartFormProperty.GetBooleanProperty(System.String)">
            <summary>
            Gets a BooleanPropertyExpression representing the Smart Form field
            identified by the specified XPath value.
            </summary>
            <param name="xPath">Path identifying the target Smart Form field</param>
            <returns>BooleanPropertyExpression representing the Smart Form field</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchType">
            <summary>
            Helper class for generating expressions to limit search result types.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsContent">
            <summary>
            Generates an expression that limits search result type to content.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsNonUserContent">
            <summary>
            Generates an expression that limits search result type to content.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsForum">
            <summary>
            Generates an expression that limits search result type to forums.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsMultimedia">
            <summary>
            Generates an expression that limits search result type to multimedia.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsDocument">
            <summary>
            Generates an expression that limits search result type to CMS documents. 
            Any valid document types added using the CMS, such as office files, images, pdf or multimedia are included when limiting results by using this property 
            (Please note that valid file types are defined in the Asset Server Setup in the Settings section of workarea of your site).
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsProduct">
            <summary>
            Generates an expression that limits search result type to products.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsUser">
            <summary>
            Generates an expression that limits search result type to users.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsGroup">
            <summary>
            Generates an expression that limits search result type to groups.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SearchType.IsExternal">
            <summary>
            Generates an expression that limits search result type to groups.
            </summary>
            <returns>Search expression tree</returns>
        </member>
        <member name="T:Ektron.Cms.Search.SearchUserProperty">
            <summary>
            The UserProperty class provides access to the default
            PropertyExpressions for formulating user queries.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Id">
            <summary>
            Gets the PropertyExpression for the user ID field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Language">
            <summary>
            Gets the PropertyExpression for the user language field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.UserName">
            <summary>
            Gets the PropertyExpression for the user name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.EmailAddress">
            <summary>
            Gets the PropertyExpression for the email address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.DisplayName">
            <summary>
            Gets the PropertyExpression for the display name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.QuickLink">
            <summary>
            Gets the PropertyExpression for the QuickLink field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.TaxonomyCategory">
            <summary>
            Gets the PropertyExpression for the taxonomy category field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Path">
            <summary>
            Gets the PropertyExpression for the path field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Tags">
            <summary>
            Gets the PropertyExpression for the user tags field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Rank">
            <summary>
            Gets the PropertyExpression for the rank field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.HighlightedSummary">
            <summary>
            Gets the PropertyExpression for the highlighted summary field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Size">
            <summary>
            Gets the PropertyExpression for the content size field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Avatar">
            <summary>
            Gets the PropertyExpression for the user avatar field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.Type">
            <summary>
            Gets the PropertyExpression for the user type field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MapLongitude">
            <summary>
            Gets the PropertyExpression for the map longitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MapLatitude">
            <summary>
            Gets the PropertyExpression for the map latitude field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MapAddress">
            <summary>
            Gets the PropertyExpression for the map address field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.DateModified">
            <summary>
            Gets the PropertyExpression for the date modified field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.FirstName">
            <summary>
            Gets the PropertyExpression for the first name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.LastName">
            <summary>
            Gets the PropertyExpression for the last name field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.PrivateProfile">
            <summary>
            Gets the PropertyExpression for the private profile field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.UserFriends">
            <summary>
            Gets the PropertyExpression for the user fiends field.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SearchUserProperty.MembershipUser">
            <summary>
            Gets the PropertyExpression for the membership user field.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SimilarityResponseData">
            <summary>
            The SimilarityResponseData class encapsulates information describing
            how closely a result item relates to other items in the result set.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SimilarityResponseData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilarityResponseData.SimilarityVector">
            <summary>
            Gets or sets a collection of similiarty tokens which
            provide document term relevency data.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SimilaritySearchCriteria">
            <summary>
            The SimilaritySearchCriteria class captures metadata associated
            with a particular result item. This data is used to refine the
            parent query to a set of results that are similar to that
            result item.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SimilaritySearchCriteria.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilaritySearchCriteria.IsEnabled">
            <summary>
            Gets or sets a flag indicating whether or not similarity search
            should be enabled for the parent query.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilaritySearchCriteria.SimilarityVector">
            <summary>
            Gets a document vector describing a particular indexed item which 
            is to be evaluated by the search provider, identifying other similar
            documents.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SimilaritySearchCriteria.QueryType">
            <summary>
            Gets or sets the type of similarity query to be issued.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SimilarityQueryType">
            <summary>
            The SimilarityQueryType describes the individual types of similarity
            queries that may be issued.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SimilarityQueryType.Include">
            <summary>
            The similarity query will match similar items even if the parent query
            has no matches.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SimilarityQueryType.Require">
            <summary>
            The similarity query will only match similar items if the parent query
            has matches also.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Search.SimilarityQueryType.Exclude">
            <summary>
            Similar items will be excluded from the parent query.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SuggestedResultData">
            <summary>
            Defines a suggested search result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultData.Equals(System.Object)">
            <summary>
            Returns true if the specified suggested result is equal
            to this instance.
            </summary>
            <param name="obj">Suggested result to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultData.GetHashCode">
            <summary>
            Returns the hash code for this instance of SuggestedResultData.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultData.ToString">
            <summary>
            Returns the string representation of this instance of SuggestedResultData.
            </summary>
            <returns>Suggested result string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultData.Title">
            <summary>
            Gets and sets the title of the suggested result
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultData.Url">
            <summary>
            Gets and sets the URL of the suggested result
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultData.Description">
            <summary>
            Gets and sets the description of the suggested result
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SuggestedResultSet">
            <summary>
            The SuggestedResultSet associates a set of search terms with an
            ordered collection of suggested result items.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResultSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.Id">
            <summary>
            Gets or sets the unique identifier for this suggested result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.Name">
            <summary>
            Gets or sets the name for this suggested result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.Phrases">
            <summary>
            Gets the collection of additional search terms supporting this
            suggested result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.SuggestedResults">
            <summary>
            Gets the collection of suggested results associated with the
            terms of this result set.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResultSet.LastModified">
            <summary>
            Gets or sets the date and time at which this suggested result set
            was last modified.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SynonymSet">
            <summary>
            The SynonymSet class is a data structure representing
            an individual set of synonymous search terms.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSet.Contains(System.String)">
            <summary>
            Returns true if the synonym set contains the specified term.
            </summary>
            <param name="term">Synonym term</param>
            <returns>True if the synonym set contains the specified term</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSet.Id">
            <summary>
            Gets or sets the synonym set identifier.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSet.LanguageId">
            <summary>
            Gets or sets the language id;
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSet.Terms">
            <summary>
            Gets or sets the collection of synonymous terms.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SynonymSetTerm">
            <summary>
            The SynonymSetTerm class is a data structure identifying
            an individual term associated with a SynonymSet.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SynonymSetTerm.Equals(System.Object)">
            <summary>
            Returns true if the specified object is equal to this term, false otherwise.
            </summary>
            <param name="obj">Term to compare</param>
            <returns>True if the specified object is equal to this term, false otherwise</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSetTerm.Id">
            <summary>
            Gets or sets the term's identifier.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SynonymSetTerm.Term">
            <summary>
            Gets or sets the value of the term.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Search.SuggestedResult">
            <summary>
            The SuggestedResult class is a data structure representing an
            individual suggested result item of a suggested result set. It
            identifies the target of the suggested result and provides
            additional descriptive data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.Equals(System.Object)">
            <summary>
            Returns true if the specified Suggested Result is equal
            to this instance.
            </summary>
            <param name="obj">Suggested result to compare</param>
            <returns>True if equal, false otherwise</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.GetHashCode">
            <summary>
            Returns the hash code for this instance of SuggestedResult.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Ektron.Cms.Search.SuggestedResult.ToString">
            <summary>
            Returns the string representation of this instance of SuggestedResult.
            </summary>
            <returns>Suggested result string</returns>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Id">
            <summary>
            Gets or sets the unique identifier for this suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Title">
            <summary>
            Gets or sets the title of the suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Url">
            <summary>
            Gets or sets the URL for the suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.Description">
            <summary>
            Gets or sets the description for the suggested result.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Search.SuggestedResult.ContentId">
            <summary>
            Gets or sets the content ID associated with suggested result.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData">
            <summary>
            Data class representing a single alias configuration
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.Id">
            <summary>
            Unique Identifier for this record
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.Type">
            <summary>
            The Type of alias 
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.LanguageId">
            <summary>
            The langauge Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.SourceId">
            <summary>
            Optional. Source entity in the CMS. This changes meaning depending on the ConfigurationType. If its Folder Alias this is a folder Id, if taxonomy alias, its a Taxonomy ID.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.SiteId">
            <summary>
            The MultiSite Id
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.FileExtensionId">
            <summary>
            The file extension to use in alias generation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.IsEnabled">
            <summary>
            Indicates if this configuration is enabled.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.Name">
            <summary>
            Friendly name of this configuration
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.AliasPriority">
            <summary>
            The Priority order
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasRuleData.IsDeleted">
            <summary>
            Indicates delted status. Rules are soft deleted.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UrlAliasRegExData">
            <summary>
            A data class used to get or set information about a URL Alias that uses RegEx.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.UrlAliasRegExData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.UrlAliasRegExData.#ctor(System.String,System.Int64,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="expressionName"></param>
            <param name="siteId"></param>
            <param name="expression"></param>
            <param name="expressionMap"></param>
        </member>
        <member name="M:Ektron.Cms.UrlAliasRegExData.#ctor(System.String,System.Int64,System.String,System.String,System.Int64,System.String,System.Boolean,Ektron.Cms.Common.EkEnumeration.RegExPriority,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="expressionName"></param>
            <param name="siteId"></param>
            <param name="expression"></param>
            <param name="expressionMap"></param>
            <param name="regexId"></param>
            <param name="transformedUrl"></param>
            <param name="isEnabled"></param>
            <param name="priority"></param>
            <param name="timeStamp"></param>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.RegExId">
            <summary>
            Gets the unique ID generated for each record.
            </summary>
            <value></value>
            <returns>The unique ID generated for each record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.SiteId">
            <summary>
            Gets or sets the root folder ID of the site. Returns zero if no site is specified.
            </summary>
            <value></value>
            <returns>The root folder ID of the site. Returns zero if no site is specified.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.ExpressionName">
            <summary>
            Gets or sets a descriptive name for the expression.
            </summary>
            <value></value>
            <returns>A descriptive name for the expression.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.Expression">
            <summary>
            Gets or sets the regular expression to be used.
            </summary>
            <value></value>
            <returns>The regular expression to be used.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.ExpressionMap">
            <summary>
            Gets or sets the destination for the expression.
            </summary>
            <value></value>
            <returns>The destination for the expression.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.TransformedUrl">
            <summary>
            Gets or sets a sample of how the ExpressionMap URL will look.
            </summary>
            <value></value>
            <returns>A sample of how the ExpressionMap URL will look.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.IsEnabled">
            <summary>
            Gets or sets whether the expression is active or not.
            </summary>
            <value></value>
            <returns>Returns true if the expression is active. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.UrlAliasRegExData.Priority">
            <summary>
            Gets or sets the look up order for the expression list. Priorities are:
              * None
              * High
              * Medium
              * Low 
            </summary>
            <value></value>
            <returns>The look up order for the expression list.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.IAliasRuleManager">
            <summary>
            Manager for interactions with Alias Configurations. Alias Configurations define rules for Alias Mapping Generation.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData">
            <summary>
            A Data Transfer Object (DTO) for IRegistrationService; holds a registered files ID and path.
            </summary>
            
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.#ctor">
            <summary>
            parameterless default constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.#ctor(System.String)">
            <summary>
            Constructor that accepts and applies the file-ID to the FileID property.
            </summary>
            <param name="fileId"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.#ctor(System.String,System.String)">
            <summary>
            Constructor that accepts and applies the file-ID to the FileID property, 
            and the file-path to the FilePath property.
            </summary>
            <param name="fileId"></param>
            <param name="filePath"></param>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.FileId">
            <summary>
            The Text-ID of the registered file.
            </summary>
        </member>
        <member name="P:Ektron.Cms.BusinessObjects.Settings.Registration.RegistrationData.FilePath">
            <summary>
            The path of the file on the file system.
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SiteId">
            <summary>
            long integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SourceId">
            <summary>
            Long integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.AutoAliasType">
            <summary>
            as of EkEnumeration.AutoAliasType
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.LanguageId">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.FileExtension">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.IsEnabled">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.Example">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SelectedPath">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.ExcludedPath">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SourceParmName">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.SourceName">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.PageNameType">
            <summary>
            as of EkEnumeration.AutoAliasNameType
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.AutoAliasProperty.ReplacementCharacter">
            <summary>
            String
            </summary>
        </member>
        <member name="T:Ektron.Cms.UrlAliasing.ManualAliasProperty">
            <summary>
            Properties used as criteria
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.AliasId">
            <summary>
            (long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.ContentLanguage">
            <summary>
            (integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.SiteId">
            <summary>
            (Long Integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.HostName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.AliasName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.ContentTitle">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.Target">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.LibraryId">
            <summary>
            (Long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.ContentId">
            <summary>
            (Long integer)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.QueryStringAction">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.QueryString">
            <summary>
            (as of EkEnumeration.QueryStringActionType)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.FileExtension">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.IsDefault">
            <summary>
            (Boolean)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.AliasPageName">
            <summary>
            (String)
            </summary>
        </member>
        <member name="F:Ektron.Cms.UrlAliasing.ManualAliasProperty.DisplayAlias">
            <summary>
            (String)
            </summary>
        </member>
        <member name="T:Ektron.Cms.Common.UrlAliasAutoData">
            <summary>
            A data class used to get or set information about an Automatic URL Alias.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.Common.UrlAliasAutoData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Common.UrlAliasAutoData.#ctor(System.Int64,Ektron.Cms.Common.EkEnumeration.AutoAliasType,System.Int64,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="siteId"></param>
            <param name="autoAliasType"></param>
            <param name="sourceId"></param>
            <param name="fileExtension"></param>
        </member>
        <member name="M:Ektron.Cms.Common.UrlAliasAutoData.#ctor(System.Int64,Ektron.Cms.Common.EkEnumeration.AutoAliasType,System.Int64,System.String,System.Int64,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,Ektron.Cms.Common.EkEnumeration.AutoAliasNameType,System.String,System.String,System.String,System.DateTime,System.Int64,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="siteId"></param>
            <param name="autoAliasType"></param>
            <param name="sourceId"></param>
            <param name="fileExtension"></param>
            <param name="autoId"></param>
            <param name="aliasName"></param>
            <param name="target"></param>
            <param name="languageId"></param>
            <param name="sourceName"></param>
            <param name="isEnabled"></param>
            <param name="example"></param>
            <param name="pagenametype"></param>
            <param name="replacementCharacter"></param>
            <param name="hostName"></param>
            <param name="selectedPath"></param>
            <param name="timeStamp"></param>
            <param name="contentId"></param>
            <param name="excludedPath"></param>
            <param name="sourceParmname"></param>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.Id">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.AutoId">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.AliasName">
            <summary>
            Gets or sets the alias name for the URL.
            </summary>
            <value></value>
            <returns>The alias name for the URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.Target">
            <summary>
            Gets or sets the destination for the alias. 
            </summary>
            <value></value>
            <returns>The destination for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SiteId">
            <summary>
            Gets or sets the root folder ID of the site. If no site is specified, returns 0 (zero).
            </summary>
            <value></value>
            <returns>The root folder ID of the site. If no site is specified, returns 0 (zero).</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.AutoAliasType">
            <summary>
            Gets or sets the automatic alias source type. Types are Taxonomy and Folder.
            </summary>
            <value></value>
            <returns>The automatic alias source type.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.LanguageId">
            <summary>
            Gets the language ID for the automatic alias. 
            </summary>
            <value></value>
            <returns>The language ID for the automatic alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.FileExtension">
            <summary>
            Gets or sets the selected file extension.
            </summary>
            <value></value>
            <returns>The selected file extension.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SourceId">
            <summary>
            Gets or sets either the taxonomy ID or the folder ID depending on the auto alias type selected. 
            </summary>
            <value></value>
            <returns>Either the taxonomy ID or the folder ID depending on the auto alias type selected.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SourceName">
            <summary>
            Gets the name of the taxonomy or folder selected depending on the auto alias type selected.
            </summary>
            <value></value>
            <returns>The name of the taxonomy or folder selected depending on the auto alias type selected.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.IsEnabled">
            <summary>
            Gets or sets whether the configuration is active or not.
            </summary>
            <value></value>
            <returns>True if the configuration is active or not. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.Example">
            <summary>
            Gets or sets a sample of the selected configuration.
            </summary>
            <value></value>
            <returns>A sample of the selected configuration.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.PageNameType">
            <summary>
            Gets or sets the name for the configuration. Available types are:
              * ContentTitle
              * ContentId
              * ContentIdAndLanguage
            </summary>
            <value></value>
            <returns>The name for the configuration.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.ReplacementCharacter">
            <summary>
            Gets or sets the character that will replace special characters in the generated URL.
            </summary>
            <value></value>
            <returns>The character that will replace special characters in the generated URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.HostName">
            <summary>
            Gets the name of the host where the content resides.
            </summary>
            <value></value>
            <returns>The name of the host where the content resides.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.SelectedPath">
            <summary>
            Returns the folder or taxonomy path selected by the user
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.FormattedSelectedPath">
            <summary>
            Returns the folder or taxonomy path with modifications 
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasAutoData.ExcludedPath">
            <summary>
            Returns the folder or taxonomy path excluded from the selected path.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Common.UrlAliasCommunityData">
            <summary>
            A data class used to get or set information about an Automatic URL Alias.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.Id">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.Target">
            <summary>
            Gets the destination for the alias. 
            </summary>
            <value></value>
            <returns>The destination for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.LanguageId">
            <summary>
            Gets the language ID for the automatic alias. 
            </summary>
            <value></value>
            <returns>The language ID for the automatic alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.IsEnabled">
            <summary>
            Gets or sets whether the configuration is active or not.
            </summary>
            <value></value>
            <returns>True if the configuration is active or not. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.Example">
            <summary>
            Gets or sets a sample of the selected configuration.
            </summary>
            <value></value>
            <returns>A sample of the selected configuration.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.ReplacementCharacter">
            <summary>
            Gets or sets the character that will replace special characters in the generated URL.
            </summary>
            <value></value>
            <returns>The character that will replace special characters in the generated URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasCommunityData.HostName">
            <summary>
            Gets the name of the host where the content resides.
            </summary>
            <value></value>
            <returns>The name of the host where the content resides.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Ektron.Cms.Common.UrlAliasManualData">
            <summary>
            A data class used to get or set information about a Manual URL Alias.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.SiteId">
            <summary>
            Gets the root folder ID of the site. If no site is specified, returns 0 (zero).
            </summary>
            <value></value>
            <returns>The root folder ID of the site. If no site is specified, returns 0 (zero).</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.Id">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.AliasId">
            <summary>
            Gets the unique ID generated for this record.
            </summary>
            <value></value>
            <returns>The unique ID generated for this record.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.LibraryId">
            <summary>
            Gets or sets the Library ID for the content. 
            </summary>
            <value></value>
            <returns>The Library ID for the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.ContentId">
            <summary>
            Gets or sets the Content ID.
            </summary>
            <value></value>
            <returns>The content ID.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.ContentLanguage">
            <summary>
            Gets the content language.
            </summary>
            <value></value>
            <returns>The content language.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.ContentTitle">
            <summary>
            Gets the title of the content.
            </summary>
            <value></value>
            <returns>The title of the content.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.AliasName">
            <summary>
            Gets or sets the alias name for the URL without the extension. 
            </summary>
            <value></value>
            <returns>The alias name for the URL without the extension.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.QueryString">
            <summary>
            Gets or sets the querystring parameters to append to the aliased URL.
            </summary>
            <value></value>
            <returns>The querystring parameters to append to the aliased URL.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.QueryStringAction">
            <summary>
            Gets or sets the querystringaction parameters.
            </summary>
            <value></value>
            <returns>The querystring parameters.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.IsDefault">
            <summary>
            Gets or sets which alias name should show when the content has multiple aliases.
            </summary>
            <value></value>
            <returns>Which alias name should show when the content has multiple aliases.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.IsEnabled">
            <summary>
            Gets or sets whether the alias name is active or not.
            </summary>
            <value></value>
            <returns>Returns true if the alias name is active. Otherwise, it returns false.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.Target">
            <summary>
            Gets or sets the destination URL for the alias.
            </summary>
            <value></value>
            <returns>The destination URL for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.FileExtension">
            <summary>
            Gets or sets the file extension for the alias.
            </summary>
            <value></value>
            <returns>The file extension for the alias.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.DisplayAlias">
            <summary>
            Gets the alias URL with the extension and query parameters.  
            </summary>
            <value></value>
            <returns>The alias URL with the extension and query parameters.</returns>
            <remarks>This is a computed field.</remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.HostName">
            <summary>
            Gets the name of the host where the content resides.
            </summary>
            <value></value>
            <returns>The name of the host where the content resides.</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ektron.Cms.Common.UrlAliasManualData.AliasPageName">
            <summary>
            Gets the name of the alias without the query string.
            </summary>
            <value></value>
            <returns>The name of the alias without the query string.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>        
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.Exceptions.StorableActionSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:Ektron.Cms.StorableActions.IStorableActionManager">
            <summary>
            The IStorableActionManager inferface describes a component capable
            of persisting and retrieving StorableActions.
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.Add(Ektron.Cms.StorableActions.StorableAction)">
            <summary>
            Adds a new StorableAction to the underlying data store.
            </summary>
            <param name="action">Action to be added</param>
            <returns>Action with unique ID assigned</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.Delete(System.Guid)">
            <summary>
            Deletes the StorableAction with the specified unique identifier.
            </summary>
            <param name="id">ID of the action to delete</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.Get(System.Guid)">
            <summary>
            Gets the StorableAction with the specified unqiue identifier.
            </summary>
            <param name="id">ID of the action to retrieve</param>
            <returns>StorableAction with the specified ID</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.GetList(System.Int64)">
            <summary>
            Gets a collection of StorableActions associated available to 
            the specified user.
            </summary>
            <param name="userId">User ID</param>
            <returns>Collection of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.GetList``1">
            <summary>
            Gets a collection of StorableActions of the specified type.
            </summary>
            <typeparam name="T">Type of StorableAction</typeparam>
            <returns>Collection of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionManager.GetList``1(System.Int64)">
            <summary>
            Gets a collection of StorableActions of the specified type
            available to the specified user.
            </summary>
            <typeparam name="T">Type of StorableAction</typeparam>
            <param name="userId">User ID</param>
            <returns>Collection of StorableActions</returns>
        </member>
        <member name="T:Ektron.Cms.StorableActions.IStorableActionProvider">
            <summary>
            The IStorableActionProvider interface describes a component
            capable of accessing and saving StorableActions to a specific
            type of data store (SQL Server, etc.)
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.Add(Ektron.Cms.StorableActions.StorableAction)">
            <summary>
            Adds the specified StorableAction to the underlying data store.
            </summary>
            <param name="action">StorableAction to save</param>
            <returns>StorableAction with updated fields</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.Delete(System.Guid)">
            <summary>
            Deletes the StorableAction with the specified ID from the
            underlying data store.
            </summary>
            <param name="id">ID of the StorableAction</param>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.Get(System.Guid)">
            <summary>
            Gets the StorableAction with the specified ID frmo the
            underlying data store.
            </summary>
            <param name="id">ID of the StorableAction</param>
            <returns>StorableAction</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.GetList(System.Int64)">
            <summary>
            Gets a collection of actions available to the specified user from
            the underlying data store.
            </summary>
            <param name="userId">User ID</param>
            <returns>Collecion of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.GetList(System.Type)">
            <summary>
            Gets a collection of actions of the specified type.
            </summary>
            <param name="type">Type of StorableAction</param>
            <returns>Collecion of StorableActions</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionProvider.GetList(System.Type,System.Int64)">
            <summary>
            Gets a collection of actions of the specified type.
            </summary>
            <param name="type">Type of StorableAction</param>
            <param name="userId">User ID</param>
            <returns>Collecion of StorableActions</returns>
        </member>
        <member name="T:Ektron.Cms.StorableActions.IStorableActionSerializer">
            <summary>
            The IStorableActionSerializer interface describes a component capable
            of serializing and deserializing StorableActions to a format in which
            it can be persisted.
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionSerializer.Serialize(Ektron.Cms.StorableActions.StorableAction)">
            <summary>
            Serializes the specified StorableAction.
            </summary>
            <param name="action">Action to be serialized</param>
            <returns>Serialized data string</returns>
        </member>
        <member name="M:Ektron.Cms.StorableActions.IStorableActionSerializer.Deserialize(System.String)">
            <summary>
            Deserialize the specified data string to a StorableAction.
            </summary>
            <param name="data">Data string to be deserialized</param>
            <returns>StorableAction represented by the data string</returns>
        </member>
        <member name="T:Ektron.Cms.StorableActions.StorableAction">
            <summary>
            The StorableAction describes the base for all concrete 
            StorableAction implementations. A StorableAction represents
            some activity, which can be persisted, that accepts variable 
            inputs and delivers a result.
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.StorableAction.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.StorableActions.StorableAction.Execute(System.Collections.Generic.List{Ektron.Cms.StorableActions.IStorableActionTokenSource})">
            <summary>
            Executes the action.
            </summary>
            <param name="tokenSource">Data source delivering action parameters</param>
            <returns>Result set for the action.</returns>
        </member>
        <member name="P:Ektron.Cms.StorableActions.StorableAction.Id">
            <summary>
            Gets or sets the unique identifier for the action.
            </summary>                
        </member>
        <member name="P:Ektron.Cms.StorableActions.StorableAction.Name">
            <summary>
            Gets or sets the name of the action.
            </summary>
        </member>
        <member name="P:Ektron.Cms.StorableActions.StorableAction.Creator">
            <summary>
            Gets or sets the creator of the action. The value of this
            field may be 0 if the action is available to all users.
            </summary>        
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoAssignmentProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoAssignmentData">
            <summary>
            Data class representing a TodoAssignment in the Cms.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoAssignmentData.UserId">
            <summary>
            Gets or sets the user ID of the TodoAssignment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoAssignmentData.UserName">
            <summary>
            Gets or sets the username of the TodoAssignment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemCommentProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Id">
            <summary>
            Gets or sets the ID of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.UserId">
            <summary>
            Gets or sets the user ID of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Username">
            <summary>
            Gets or sets the username of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Avatar">
            <summary>
            Gets or sets the avatar url of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Timestamp">
            <summary>
            Gets or sets the timestamp of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.Message">
            <summary>
            Gets or sets the message of the TodoItemComment.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemCommentData.TodoItemId">
            <summary>
            Gets or sets the TodoItemId of the TodoItemComment.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemCommentCriteria">
            <summary>
            Criteria class used for creating filter requests for retreiving Todo Comments from the CMS.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemPriority">
            <summary>
            Enumeration of TodoItem priorities.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemStatus">
            <summary>
            Enumeration of TodoItem statuses.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemCriteria">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoItemData">
            <summary>
            Data class representing a TodoItem in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.TodoListId">
            <summary>
            Gets or sets the ID of the TodoItem's containing TodoList.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.EditorId">
            <summary>
            Gets or sets the ID of the TodoItem's last editor.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Title">
            <summary>
            Gets or sets the title of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Description">
            <summary>
            Gets or sets the description of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Status">
            <summary>
            Gets or sets the priority of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Priority">
            <summary>
            Gets or sets the priority of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.StartDate">
            <summary>
            Gets or sets the start date of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.DueDate">
            <summary>
            Gets or sets the due date of the TodoItem.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.AssignedTo">
            <summary>
            Gets or sets the list of targets to which the TodoItem is assigned.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoItemData.Comments">
            <summary>
            Gets or sets the list of TodoItem comments.
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoListProperty">
            <summary>
            Enumeration of properties used for sorting and filtering.
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.Id">
            <summary>
            The TodoList id (long)
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.Name">
            <summary>
            The TodoList name (string)
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.ObjectType">
            <summary>
            The TodoList associated object type (integer as of EkEnumeration.CMSObjectTypes)
            </summary>
        </member>
        <member name="F:Ektron.Cms.ToDo.TodoListProperty.ObjectId">
            <summary>
            The TodoList associated object ID (long)
            </summary>
        </member>
        <member name="T:Ektron.Cms.ToDo.TodoListData">
            <summary>
            Data class representing a TodoList in the CMS.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoListData.Name">
            <summary>
            Gets or sets the TodoList name.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoListData.ObjectType">
            <summary>
            Gets or sets the TodoList associated object type.
            </summary>
        </member>
        <member name="P:Ektron.Cms.ToDo.TodoListData.ObjectId">
            <summary>
            Gets or sets the TodoList associated object ID.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasCriteria">
            <summary>
            Criteria class for use specifically with AliasData
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData">
            <summary>
            Data class representing a single alias record
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.ConfigurationId">
            <summary>
            Parent Alias configuration that generated this alias
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.Alias">
            <summary>
            The Alias URL, will be used to match incoming requests
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.LanguageId">
            <summary>
            The Language Id of the alias
            </summary>
        </member>
        <member name="P:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasData.SiteId">
            <summary>
            The multisite Id
            </summary>
        </member>
        <member name="T:Ektron.Cms.Settings.UrlAliasing.DataObjects.AliasProperty">
            <summary>
            Enumeration representing AliasData properties that can be filtered and sorted on via Criteria
            </summary>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.SourceDeleted(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.AliasRuleType)">
            <summary>
            Call when a source is deleted from the CMS.
            When an auto alias source is deleted this method should be called. This method will remove the generated aliases according to the defined rule
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.SourceModified(System.Int64,Ektron.Cms.Common.EkEnumeration.AliasRuleType,System.Int32)">
            <summary>
            Call when an source is modified in the CMS.
            When an auto alias source is modifed, aliases based on the source may need to be modifed. e.g. A taxonomy node name change.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.AssignedToSource(System.Int64,Ektron.Cms.Common.EkEnumeration.AliasRuleType,System.Int64,System.Int32)">
            <summary>
            Call when assigning an item to a Source e.g. Add content to a folder, assign content to a taxonomy.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.RemovedFromSource(System.Int64,Ektron.Cms.Common.EkEnumeration.AliasRuleType,System.Int64,System.Int32)">
            <summary>
            Call when assigning an item to a Source e.g. Add content to a folder, assign content to a taxonomy.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.UpdateContentTemplateForAliases(System.Int64,System.Int32)">
            <summary>
            Call when a source template has been changed from the CMS.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.UpdateSiteIdForAliasMove(System.Int64)">
            <summary>
            Call when a folder is moved into a Multisite. Any folder rules and aliases pointing to the sub folder tree and content will be updated with the correct siteID.
            </summary>
            <param name="sourceType"></param>
        </member>
        <member name="M:Ektron.Cms.Settings.UrlAliasing.IAliasGenerator.TargetModifed(System.Int64,System.Int32,Ektron.Cms.Common.EkEnumeration.TargetType)">
            <summary>
            
            </summary>
            <param name="targetId"></param>
        </member>
        <member name="M:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.GetUserData(System.String)">
            <summary>
            Returns a new UserData object prepopulated with any properties from the external authentication provider.
            </summary>
            <param name="userKey">The key of the user in the third party authenticator.</param>
            <returns></returns>
        </member>
        <member name="P:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.RequestInformation">
            <summary>
            Gets or sets the current EkRequestInformation
            </summary>
        </member>
        <member name="P:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.IsHttps">
            <summary>
            Gets a flag indicating if current request is https.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Users.Authentication.UserAuthenticationDataProvider.AuthenticationTypeId">
            <summary>
            Gets the Authentication Type Associated with this UserData provider.
            </summary>
        </member>
        <member name="M:Ektron.Cms.TaskData.Validate">
            <summary>
            validation implementation
            </summary>
            <returns>ValidationResults data </returns>
        </member>
        <member name="P:Ektron.Cms.TaskData.AssignedToUserID">
            <summary>
            The Id of the user to assign the Task to.
            This is a required property to successfully assign a task to a user.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.AssignorUserId">
            <summary>
            The Id of the user assigning the Task
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.State">
            <summary>
            One of the following values from Common.EkEnumeration.TaskState:
            Prototype = "0", NotStarted = "1", Active = "2", AwaitingData = "3", 
            OnHold = "4", Pending = "5", Reopened = "6", Completed = "7", Archived = "8",
            or Deleted = "9"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.Status">
            <summary>
            Obsolete superceded by "State"
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.AssignedToUser">
            <summary>
            The username of the user who the Task is assigned to.
            This value is populated when retrieving TaskData.
            While adding a new Task, use the AssignedToUserID property.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskData.Assignor">
            <summary>
            The username of the user assigning the Task.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskCategoryData.Title">
            <summary>
            Gets or sets the title of the Task Category.
            </summary>
        </member>
        <member name="P:Ektron.Cms.TaskCategoryData.IsActive">
            <summary>
            Gets or sets the Active flag.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserContext">
            <summary>
            Summary description for UserContext
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUser">
            <summary>
            Gets the current user
            </summary>
            <returns>The current user data, or <c>null</c>.</returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserDevice(System.Boolean)">
            <summary>
            Gets the current user device configuration information
            </summary>
            <param name="useCache">
            By default the code will use Caching, but this may be bypassed if desired (e.g. 
            for Device Preview, where cached values may be out of sync).
            </param>
            <returns>
            The list of user's CmsDeviceConfigurationData
            </returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserLocationInfo">
            <summary>
            Gets the current user location information using GeoIP database
            </summary>
            <returns>User location data or <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetReferrer">
            <summary>
            Gets the current user referrer information
            </summary>
            <returns>User referrer data.</returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentOrganization">
            <summary>
            Gets the current user location information using GeoIP database
            </summary>
            <returns>User company data or <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.SetCurrentUserPricebookId(System.Int64)">
            <summary>
            Sets the Current User PricebookId in the session
            </summary>
            <param name="pricebookId">Id of the pricebook</param>
        </member>
        <member name="M:Ektron.Cms.UserContext.SetCurrentUserPricebookIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            Sets the Current User PricebookIds in the session
            </summary>
            This Method to be made public in future
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserPricebookId">
            <summary>
             Gets the Current User PricebookId from the session
            </summary>
            <returns>PricebookId</returns>
        </member>
        <member name="M:Ektron.Cms.UserContext.GetCurrentUserPricebookIdList">
            <summary>
            Gets the Current User PricebookIds from the session
            </summary>
            <returns></returns>
            This Method to be made public in future
        </member>
        <member name="M:Ektron.Cms.UserContext.ClearData">
            <summary>
            Clears the current user context data, device configuration data, location information 
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserContext.OverrideIP(System.String)">
            <summary>
            Sets the currunt user's ip for testing 
            </summary>
            <param name="ip">valid ip address</param>
        </member>
        <member name="P:Ektron.Cms.UserContext.Session">
            <summary>
            Gets the current Session object.
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserContext.IP">
            <summary>
            Gets the IP address of the current user
            </summary>
        </member>
        <member name="P:Ektron.Cms.UserContext.CurrentUsername">
            <summary>
            Gets or sets the current username, or <c>null</c>.
            </summary>
        </member>
        <member name="T:Ektron.Cms.UserContextCacheManager">
            <summary>
            Implements a session data cache whose lifetime is only limited to one request.
            </summary>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUser(System.String)">
            <summary>
            Gets the current user, if any, of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <returns>The current user, or <c>null</c>.</returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUser(System.String,Ektron.Cms.UserData)">
            <summary>
            Sets the current user of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="user">The user.</param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserLocationInfo(System.String)">
            <summary>
            Gets the current user location information, of a session
            </summary>
            <param name="sessionId">The session ID</param>
            <returns>The current user's location information, od <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserLocationInfo(System.String,Ektron.Cms.UserLocationData)">
            <summary>
            Sets the current user location in the session
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="userLocationData">The user's location information</param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserDevice(System.String)">
            <summary>
            Gets the current user device configurations
            </summary>
            <param name="sessionId">The session ID.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserDevice(System.String,System.Collections.Generic.List{Ektron.Cms.Device.CmsDeviceConfigurationData})">
            <summary>
            Sets the current  user device configurations in session
            </summary>
            <param name="sessionId"></param>
            <param name="userDeviceData"></param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserOrganization(System.String,Ektron.Cms.UserOrganizationData)">
            <summary>
            Sets the current user organization in session
            </summary>
            <param name="sessionId"></param>
            <param name="userOrganizationData"></param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserPricebookIdList(System.String)">
            <summary>
            Gets the current user Pricebookids in the session
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserPricebookIdList(System.String,System.Collections.Generic.List{System.Int64})">
            <summary>
            Sets the current user pricebookid in the session
            </summary>
            <param name="sessionId"></param>
            <param name="pricebookids"></param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.GetCurrentUserReferrer(System.String)">
            <summary>
            Gets the current user referrer information, of a session
            </summary>
            <param name="sessionId">The session ID</param>
            <returns>The current user's referrer information, or <c>null</c></returns>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.SetCurrentUserReferrer(System.String,Ektron.Cms.UserReferrerData)">
            <summary>
            Sets the current user referrer in the session
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:Ektron.Cms.UserContextCacheManager.ClearData(System.String)">
            <summary>
            Clears all cached data of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityStrategy.OnAfterDeleteActivity(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity is deleted.
            </summary>
            <param name="id">ID of Activity that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityStrategy.OnAfterUpdateActivity(Ektron.Cms.Activity.ActivityData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity is edited.
            </summary>
            <param name="activity">The Activity that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ActivityCommentStrategy">
            <summary>
            Activity Comment strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityCommentStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityCommentStrategy.OnAfterDeleteActivityComment(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity Comment is deleted.
            </summary>
            <param name="id">ID of ActivityComment that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ActivityCommentStrategy.OnAfterUpdateActivityComment(Ektron.Cms.Activity.ActivityCommentData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Activity Comment is edited.
            </summary>
            <param name="activity">The ActivityComment that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CountryStrategy">
            <summary>
            Base class for handling Country Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CountryStrategy.OnCanDelete(System.Int32,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Country.CanDelete.  It should return true if deleting the country is possible.  
            If delete should nopt be allowed, it should return false and append an appropriate message to the messages parameter.
            </summary>
            <param name="countryId">Id of country to be deleted</param>
            <param name="result">ValidationResult to be populated with ValidationErrors if delete should not be allowed.</param>
            <param name="args">Event arguments</param>
            <returns>Returns true if the country can be deleted.</returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CountryStrategy.OnDelete(System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Country.Delete.
            </summary>
            <param name="countryId">Id of country being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.RegionStrategy">
            <summary>
            Base class for handling Region Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.RegionStrategy.OnCanDelete(System.Int64,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Region.CanDelete.  It should return true if deleting the Region is possible.  
            If delete should nopt be allowed, it should return false and append an appropriate message to the messages parameter.
            </summary>
            <param name="regionId">Id of Region to be deleted</param>
            <param name="result">ValidationResult to be populated with ValidationErrors if delete should not be allowed.</param>
            <param name="args">Event arguments</param>
            <returns>Returns true if the Region can be deleted.</returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.RegionStrategy.OnDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called as part of Region.Delete.
            </summary>
            <param name="regionId">Id of Region being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteStrategy.OnAfterDeleteFavorite(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a favorite is deleted.
            </summary>
            <param name="id">ID of favorite that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteStrategy.OnAfterUpdateFavorite(Ektron.Cms.Community.FavoriteItemData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a favorite is edited.
            </summary>
            <param name="favoriteItemData">The favorite that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteTaxonomyStrategy.OnAfterDeleteFavoriteTaxonomy(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Favorite Taxonomy is deleted.
            </summary>
            <param name="id">ID of Favorite Taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FavoriteTaxonomyStrategy.OnAfterUpdateFavoriteTaxonomy(Ektron.Cms.Community.FavoriteTaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Favorite Taxonomy is edited.
            </summary>
            <param name="favoriteTaxonomyData">The Favorite Taxonomy that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsStrategy.OnAfterDeleteFriend(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend is deleted.
            </summary>
            <param name="id">ID of friend that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsStrategy.OnAfterUpdateFriend(Ektron.Cms.Community.FriendsData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend is edited.
            </summary>
            <param name="friendsData">The friend that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsTaxonomyStrategy.OnAfterDeleteFriendTaxonomy(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend taxonomy is deleted.
            </summary>
            <param name="id">ID of friend taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.FriendsTaxonomyStrategy.OnAfterUpdateFriendTaxonomy(Ektron.Cms.Community.FriendTaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a friend taxonomy is edited.
            </summary>
            <param name="friendTaxonomyData">The friend taxonomy that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnAdd(Ektron.Cms.CommunityGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a community group is added.
            </summary>
            <param name="groupData">Added community group data.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnUpdate(Ektron.Cms.CommunityGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a community group is updated.
            </summary>
            <param name="groupData">Updated community group data.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a community group is deleted.
            </summary>
            <param name="id">ID of community group that was deleted.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnAfterUserAdd(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is added to a community group.
            </summary>
            <param name="CommunityGroupId">ID of community group user was added to.</param>
            <param name="userId">ID of user added to community group.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CommunityGroupStrategy.OnAfterUserDelete(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is removed from a community group.
            </summary>
            <param name="CommunityGroupId">ID of community group user was removed from.</param>
            <param name="userId">ID of user removed from community group.</param>
            <param name="eventArgs"></param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MessageBoardStrategy">
            <summary>
            Messageboard strategy
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAdd(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called on a messageboard add
            </summary>
            <param name="messageBoardData">messageboard data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnUpdate(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method 
            </summary>
            <param name="messageBoardData">message Board Data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called on a messageboard delete
            </summary>
            <param name="id">id of the messageboard</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAfterReplyAdd(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called adter a reply was added
            </summary>
            <param name="messageBoardData">messageBoardData</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnMessageApprove(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called on a message approval 
            </summary>
            <param name="messageBoardData">message Board Data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAfterUpdate(Ektron.Cms.MessageBoardData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a MessageBoardData object is edited.
            </summary>
            <param name="messageBoardData">The MessageBoardData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MessageBoardStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a MessageBoardData object is deleted.
            </summary>
            <param name="id">ID of MessageBoardData object that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MicroMessageStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a microMessage is deleted.
            </summary>
            <param name="id">ID of microMessage that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MicroMessageStrategy.OnAfterUpdate(Ektron.Cms.MicroMessageData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a MicroMessage is edited.
            </summary>
            <param name="microMessageData">The microMessage that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.RatingStrategy">
            <summary>
            Rating strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.RatingStrategy.OnAfterDeleteRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Object Rating is deleted.
            </summary>
            <param name="id">ID of Object Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.RatingStrategy.OnAfterUpdateRating(Ektron.Cms.RatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Object Rating is edited.
            </summary>
            <param name="ratingData">The Object RatingData that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsRatingStrategy.OnAfterDeleteRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Rating is deleted.
            </summary>
            <param name="id">ID of Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsRatingStrategy.OnAfterUpdateRating(Ektron.Cms.RatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Rating is edited.
            </summary>
            <param name="data">The Rating that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ContentRatingStrategy">
            <summary>
            Content rating strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ContentRatingStrategy.OnAfterDeleteContentRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is deleted.
            </summary>
            <param name="id">ID of Content Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ContentRatingStrategy.OnAfterUpdateContentRating(Ektron.Cms.ContentRatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is edited.
            </summary>
            <param name="contentRating">The Content Rating that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsContentRatingStrategy.OnAfterDeleteContentRating(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is deleted.
            </summary>
            <param name="id">ID of Content Rating that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsContentRatingStrategy.OnAfterUpdateContentRating(Ektron.Cms.ContentRatingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Content Rating is edited.
            </summary>
            <param name="data">The Content Rating that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.UserStrategy">
            <summary>
            User Strategy Base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeAddUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is added
            </summary>
            <param name="userData">new user data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterAddUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            this method is called after a user is added
            </summary>
            <param name="userData">new user data</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeDeleteUser(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is deleted
            </summary>
            <param name="Id">user id</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterDeleteUser(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is deleted
            </summary>
            <param name="Id">user id</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeUpdateUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is updated
            </summary>
            <param name="userData">userdata</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterUpdateUser(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user update
            </summary>
            <param name="userData">userdata</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeLogin(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is logged into the cms.
            </summary>
            <param name="userData">User Data representing user logging in.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterLogin(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is logged into the cms.
            </summary>
            <param name="userData">User Data representing user that has logged in.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeLogout(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user is logged out of the cms.
            </summary>
            <param name="userData">User Data representing user that has logged out.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterLogout(Ektron.Cms.UserData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user is logged out of the cms.
            </summary>
            <param name="userData">User Data representing user that has logged out.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterAddColleague(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after two users become colleagues.  There is no significance to the ordering of the users.
            </summary>
            <param name="userOneId">Id of the the first user in the colleague connection.</param>
            <param name="userTwoId">Id of the the second user in the colleague connection.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterDeleteColleague(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after two users' colleague relationship is deleted.  There is no significance to the ordering of the users.
            </summary>
            <param name="userOneId">Id of the the first user in the colleague connection.</param>
            <param name="userTwoId">Id of the the second user in the colleague connection.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterColleagueRequest(Ektron.Cms.Community.ActionRequestData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user recieves a colleague request.
            </summary>
            <param name="invitationData">invitationData</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeUserAddInGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user add in to the Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterUserAddInGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
             This method is called after a user added in the Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnBeforeUserDeleteFromGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
             This method is called before a user delete from Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserStrategy.OnAfterUserDeleteFromGroup(System.Int64,System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
              This method is called after a user deleted from Group
            </summary>
            <param name="userId">userId</param>
            <param name="groupId">groupId</param>
            <param name="eventArgs">cms event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.WebEventStrategy">
            <summary>
            Web event strategies base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeAdd(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before adding a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterAdd(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after adding a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before deleting a webevent
            </summary>
            <param name="id">id of the webevent</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after deleting a webevent
            </summary>
            <param name="id">id of the webevent</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforePublish(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before publishing a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterPublish(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after publishing a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeUpdate(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterUpdate(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeAddVariance(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterAddVariance(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after updating a webevent
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnBeforeCancelOccurrence(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented , this method is called before cancelling an occurence
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.WebEventStrategy.OnAfterCancelOccurrence(Ektron.Cms.Common.Calendar.WebEventData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented , this method is called after cancelling an occurence
            </summary>
            <param name="eventData">event data on this operation</param>
            <param name="eventArgs">cms Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnBeforeDeleteUserCustomProperty(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is deleted.
            </summary>
            <param name="id">ID of user custom property to be deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnAfterDeleteUserCustomProperty(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is deleted.
            </summary>
            <param name="id">ID of user custom property that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnBeforeUpdateUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user custom property is edited.
            </summary>
            <param name="userCustomPropertyData">The user custom property to be edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnAfterUpdateUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is edited.
            </summary>
            <param name="userCustomPropertyData">The user custom property that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnBeforeAddUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called before a user custom property is added.
            </summary>
            <param name="userCustomPropertyData">The user custom property to be added.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserCustomPropertyStrategy.OnAfterAddUserCustomProperty(Ektron.Cms.UserCustomPropertyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user custom property is added.
            </summary>
            <param name="userCustomPropertyData">The user custom property that was added.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnBeforeAdd(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a library item is added.
            </summary>
            <param name="taxonomyData">Library item to be added.</param>
            <param name="eventArgs">Event arguments for event.</param>        
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnAfterAdd(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a library item is added.
            </summary>
            <param name="taxonomyData">Library item that was added.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnBeforeUpdate(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a library item is updated.
            </summary>
            <param name="taxonomyData">Library item to be updated.</param>
            <param name="eventArgs">Event arguments for event.</param>       
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnAfterUpdate(Ektron.Cms.LibraryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a library item is updated.
            </summary>
            <param name="taxonomyData">Library item that was updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a library item is deleted.
            </summary>
            <param name="id">Id of library item to be deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LibraryStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a library item is deleted.
            </summary>
            <param name="id">Id of library item that was deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.AutoMachineTranslate">
            <summary>
            Automatically performs machine translation to locales ending with x-mt when source content is marked ready for translation.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LocalizationObjectStrategy">
            <summary>
            Events for translation import and export
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationObjectStrategy.#ctor">
            <summary>
            Initializes a new instance of the LocalizationObjectStrategy class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.CancellableEventArgs">
            <summary>
            Event argument class used for cancellable cms events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.CmsEventArgs">
            <summary>
            Event argument class used for CMS events.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CmsEventArgs.ObjectId">
            <summary>
            Gets or sets the Id of the object that the event was raised for.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CmsEventArgs.RequestInformation">
            <summary>
            Gets or sets the current requestinformation being used.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CmsEventArgs.Transaction">
            <summary>
            gets or sets the current transaction being used.  Will be null if not applicable.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CancellableEventArgs.IsCancelled">
            <summary>
            Gets or sets the is cancelled flag indicating whether or not the action raising the event should be cancelled.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.CancellableEventArgs.CancellationMessage">
            <summary>
            Gets or sets the message indicating the reason for the action cancellation.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationObjectStrategy.ContentLocalizationStateEventArgs.IsValid">
            <summary>
            Gets or sets the is valid flag indicating whether or not the custom criteria are valid.
            </summary>
        </member>
        <member name="T:Ektron.Cms.BusinessObjects.Localization.AutoPseudoLocalize">
            <summary>
            Automatically performs pseudo localization to locales ending with x-pseudo when source content is TBD.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageDataObject">The CmsMEssageData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageData">The CmsMessageData object which was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageTypeStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageTypeData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsMessageTypeStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageTypeData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageTypeDataObject">The CmsMessageTypeData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageTypeStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a CmsMessageData object is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Cms_CmsMessageTypeStrategy.OnAfterUpdate(Ektron.Cms.Messaging.CmsMessageTypeData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="cmsMessageTypeData">The CmsMessageData object which was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MetaDataStrategy">
            <summary>
            Metadata strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.OnAfterMetaTypeAdded(Ektron.Cms.MetaTypeBaseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a meta type is added.
            </summary>
            <param name="metaType">The meta type that was added.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.OnAfterMetaTypeEdited(Ektron.Cms.MetaTypeBaseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a meta type is edited.
            </summary>
            <param name="metaType">The meta type that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MetaDataStrategy.OnAfterMetaTypeDeleted(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a meta type is deleted.
            </summary>
            <param name="metaTypeId">ID of meta type that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MenuStrategy">
            <summary>
            Menu strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MenuStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.TaxonomyItemStrategy">
            <summary>
            Taxonomy item strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyItemStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyItemStrategy.OnAfterDeleteTaxonomyItem(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is deleted.
            </summary>
            <param name="id">ID of TaxonomyItem that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyItemStrategy.OnAfterUpdateTaxonomyItem(Ektron.Cms.TaxonomyItemData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is edited.
            </summary>
            <param name="taxonomyItem">The TaxonomyItem that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyItemStrategy.OnAfterDeleteTaxonomyItem(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is deleted.
            </summary>
            <param name="id">ID of TaxonomyItem that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyItemStrategy.OnAfterUpdateTaxonomyItem(Ektron.Cms.TaxonomyItemData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TaxonomyItem is edited.
            </summary>
            <param name="taxonomyItem">The TaxonomyItem that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.TaxonomyStrategy">
            <summary>
            Base class for handling Taxonomy Strategy events.  To implement a strategy extension for taxonomy events, you must derive from ths class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeAdd(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is added.
            </summary>
            <param name="taxonomyData">TaxonomyData to be added.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterAdd(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is added.
            </summary>
            <param name="taxonomyData">TaxonomyData that was added.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeUpdate(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is updated.
            </summary>
            <param name="taxonomyData">TaxonomyData to be updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterUpdate(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is updated.
            </summary>
            <param name="taxonomyData">TaxonomyData that was updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeDelete(System.Int64,System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is deleted.
            </summary>
            <param name="id">Id of taxonomy to be deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterDelete(System.Int64,System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is deleted.
            </summary>
            <param name="id">Id of taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeCopy(System.Int64,System.Int64,System.Int32,System.Boolean,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a taxonomy node is copied.
            </summary>
            <param name="sourceId">ID of source node</param>
            <param name="destinationId">ID of destination node</param>
            <param name="languageId">Taxonomy language Id</param>        
            <param name="deleteSource">Indicates whether the source is to be deleted</param>
            <param name="eventArgs">Event arguments for event</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterCopy(System.Int64,System.Int64,System.Int32,System.Boolean,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a taxonomy node is copied.
            </summary>
            <param name="sourceId">ID of source node</param>
            <param name="newId">ID of new node</param>
            <param name="languageId">Taxonomy language Id</param>    
            <param name="deleteSource">Indicates whether the source is to be deleted</param>
            <param name="eventArgs">Event arguments for event</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeAssignItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterAssignItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeAssignItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterAssignItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is added to a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeRemoveItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterRemoveItem(Ektron.Cms.TaxonomyRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnBeforeRemoveItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item to be added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaxonomyStrategy.OnAfterRemoveItem(Ektron.Cms.TaxonomySyncRequest,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after an item is removed from a taxonomy node.
            </summary>
            <param name="request">Data object representing item added to taxonomy.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyStrategy.OnAfterDelete(System.Int64,System.Int32,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Taxonomy is deleted.
            </summary>
            <param name="id">ID of Taxonomy that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTaxonomyStrategy.OnAfterUpdate(Ektron.Cms.TaxonomyData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a Taxonomy is edited.
            </summary>
            <param name="taxonomyData">The Taxonomy that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.PermissionStrategy">
            <summary>
            The PermissionStrategy is an abstract class describing a component capable of
            responding to permissions-related events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.RoleStrategy">
            <summary>
            The RoleStrategy is an abstract class describing a component capable of
            responding to CMS Role -related events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy">
            <summary>
            Ensures device previews are assigned to the correct breakpoint.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.DeviceBreakpointStrategy">
            <summary>
            The base class for pre-processing and post-processing of add, update and
            delete transactions of device breakpoints.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnAfterAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called after a device breakpoint is added.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnAfterDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Called after a device breakpoint is deleted.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnAfterUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called after a device breakpoint is updated.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnBeforeAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called before a device breakpoint is added.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnBeforeDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Called before a device breakpoint is deleted.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.DeviceBreakpointStrategy.OnBeforeUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Called before a device breakpoint is updated.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.breakpoints">
            <summary>
            Local reference to the device breakpoint manager implementation.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.previews">
            <summary>
            Local reference to the device preview manager implementation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.OnAfterAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Assigns device previews from other breakpoints
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.OnAfterUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Confirms device previews currently assigned to the breakpoint and searches
            for previews from other breakpoints to assign.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.OnBeforeDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Assigns device previews orphaned by the breakpoint being deleted to the next
            largest breakpoint or none.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.GetBreakpoint(System.Int32,System.Int64)">
            <summary>
            Gets the breakpoint that applies to the supplied width.
            </summary>
            <param name="width">Width to find a breakpoint for.</param>
            <param name="excludedBreakpointId">The ID of a breakpoint to exclude from the search.</param>
            <returns>
            The matching breakpoint or null.
            </returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.GetNextBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Gets the next breakpoint.
            </summary>
            <param name="breakpoint">The breakpoint to search from.</param>
            <returns>The next breakpoint or null</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if a null breakpoint is supplied.</exception>
        </member>
        <member name="M:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.GetPreviousBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Gets the previous breakpoint.
            </summary>
            <param name="breakpoint">The breakpoint to search from.</param>
            <returns>The previous breakpoint or null.</returns>
        </member>
        <member name="P:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.Breakpoints">
            <summary>
            Gets the device breakpoint manager.
            </summary>
            <value>
            The device breakpoint manage.
            </value>
        </member>
        <member name="P:Ektron.Cms.Extensibility.AssignPreviewDeviceBreakpointStrategy.Previews">
            <summary>
            Gets the device preview manager.
            </summary>
            <value>
            The device preview manage.
            </value>
        </member>
        <member name="T:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy">
            <summary>
            Manages generic devices for each breakpoint based on copies of preview 
            device templates.
            </summary>
        </member>
        <member name="F:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.previews">
            <summary>
            Local reference to the device preview manager implementation.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy"/> class
            and populates its internal data.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.OnAfterAddDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Create a new device preview for the breakpoint for each available 
            device preview template.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.OnBeforeDeleteDeviceBreakpoint(System.Int64)">
            <summary>
            Deletes preview devices for the breakpoint which have been created
            from a device preview template.
            </summary>
            <param name="id">The ID of the breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.OnAfterUpdateDeviceBreakpoint(Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Updates preview devices for the breakpoint which have been created
            from a device preview template so their width matches the 
            breakpoint.
            </summary>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.GetModelName(Ektron.Cms.Mobile.DevicePreviewTemplateData,Ektron.Cms.Settings.Mobile.DeviceBreakpointData)">
            <summary>
            Gets the name of the model based on template and the breakpoint.
            </summary>
            <param name="template">The device.</param>
            <param name="breakpoint">The breakpoint.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.ScaleDevicePreviewDimensions(Ektron.Cms.Mobile.DevicePreviewData,System.Int32)">
            <summary>
            Scales the device preview dimensions to the provided viewport 
            width.
            </summary>
            <param name="preview">The device preview to update.</param>
            <param name="viewportWidth">The width of the viewport after scaling.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.ScaleDevicePreviewDimensions(Ektron.Cms.Mobile.DevicePreviewData,System.Int32,Ektron.Cms.Mobile.DevicePreviewTemplateData)">
            <summary>
            Scales the template dimensions to the provided viewport width and
            applies them to the preview device.
            </summary>
            <param name="preview">The device preview to update.</param>
            <param name="viewportWidth">The width of the viewport after scaling.</param>
            <param name="template">The template on which the scaling is based.</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.Previews">
            <summary>
            Gets the device preview manager.
            </summary>
            <value>
            The device preview manage.
            </value>
        </member>
        <member name="P:Ektron.Cms.Extensibility.GenericPreviewDeviceBreakpointStrategy.TemplateDevices">
            <summary>
            Gets or sets all of the available template devices.
            </summary>
            <value>
            The template devices.
            </value>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationAgentSettingStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationAgentData object is deleted.
            </summary>
            <param name="id">ID of NotificationAgentData object that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationAgentSettingStrategy.OnAfterUpdate(Ektron.Cms.Notifications.NotificationAgentData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationAgentData object is edited.
            </summary>
            <param name="notificationAgentData">The notificationAgentData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationPreferenceStrategy.OnAfterDeleteNotificationPreference(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationPreference is deleted.
            </summary>
            <param name="id">ID of notificationPreference that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.NotificationPreferenceStrategy.OnAfterUpdateNotificationPreference(Ektron.Cms.Notifications.NotificationPreferenceData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a NotificationPreference is edited.
            </summary>
            <param name="notificationPreferenceData">The notificationPreference that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserNotificationSettingStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a UserNotificationSettingData object is deleted.
            </summary>
            <param name="id">ID of UserNotificationSettingData object that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserNotificationSettingStrategy.OnAfterUpdate(Ektron.Cms.Notifications.UserNotificationSettingData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a UserNotificationSettingData object is edited.
            </summary>
            <param name="userNotificationSettingData">The UserNotificationSettingData object that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskCategoryStrategy.OnAfterDeleteTaskCategory(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task category is deleted.
            </summary>
            <param name="id">ID of task category that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskCategoryStrategy.OnAfterUpdateTaskCategory(Ektron.Cms.TaskCategoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task category is edited.
            </summary>
            <param name="taskCategoryData">The task category that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskStrategy.OnAfterDeleteTask(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task is deleted.
            </summary>
            <param name="id">ID of task that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TaskStrategy.OnAfterUpdateTask(Ektron.Cms.TaskData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a task is edited.
            </summary>
            <param name="taskData">The task that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.TodoListStrategy">
            <summary>
            TodoList strategy base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TodoListStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TodoListStrategy.OnAfterDeleteTodoList(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.TodoListStrategy.OnAfterUpdateTodoList(Ektron.Cms.ToDo.TodoListData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="todoList">The TodoList that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTodoListStrategy.OnAfterDeleteTodoList(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is deleted.
            </summary>
            <param name="id">ID of TodoList that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CmsTodoListStrategy.OnAfterUpdateTodoList(Ektron.Cms.ToDo.TodoListData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a TodoList is edited.
            </summary>
            <param name="todoList">The TodoList that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserGroupStrategy.OnAfterDeleteUserGroup(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user group is deleted.
            </summary>
            <param name="id">ID of user group that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserGroupStrategy.OnAfterAddUserGroup(Ektron.Cms.UserGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user group is added.
            </summary>
            <param name="userGroupData">The user group that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.UserGroupStrategy.OnAfterUpdateUserGroup(Ektron.Cms.UserGroupData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a user group is edited.
            </summary>
            <param name="userGroupData">The user group that was edited.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.XmlConfigurationStrategy">
            <summary>
            Xml configuration strategy methods - base class
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterDeleteXmlConfiguration(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after an xml config was deleted
            </summary>
            <param name="id"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterPublishXmlConfiguration(Ektron.Cms.XmlConfigData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after publishing an xml config
            </summary>
            <param name="data">data</param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterUpdateXmlConfiguration(Ektron.Cms.XmlConfigData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after an xml config update
            </summary>
            <param name="data">xmlconfig data</param>
            <param name="eventArgs">event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.XmlConfigurationStrategy.OnAfterUpdateXmlIndex(Ektron.Cms.XmlConfigData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Executes a strategy method after updating index fields (2nd screen) while updating smart forms.
            </summary>
            <param name="data">xmlconfig data</param>
            <param name="eventArgs">event args</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Content.BlogStrategy">
            <summary>
            Base class for handling Region Strategy events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.BasketStrategy">
            <summary>
            Base class for handling Basket Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterBasketCreate(Ektron.Cms.Commerce.BasketData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a basket is created.
            </summary>
            <param name="basketData">BasketData to be created.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterBasketSave(Ektron.Cms.Commerce.BasketData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a basket is saved.
            </summary>
            <param name="basketData">BasketData that has be saved.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeBasketDelete(System.Int64,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before a basket is deleted.
            </summary>
            <param name="basketId">Id of basket that will be deleted.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the deletion.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterBasketDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a basket is deleted.
            </summary>
            <param name="basketId">Id of Basket that has been deleted.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeItemAdded(Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called before an item is added to a basket.
            </summary>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the item add.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterItemAdded(Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called after an item is added to a basket..
            </summary>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeKitUpdated(Ektron.Cms.Commerce.KitConfigData,Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called before a kit configuration is updated.
            </summary>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel update.</param>
            <param name="currentKitConfiguration">The Current Kit Configuration before the update.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterKitUpdated(Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs)">
            <summary>
            This method is called after a kit configuration is updated.
            </summary>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnBeforeItemRemoved(System.Int64,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before an item is removed from a basket.
            </summary>
            <param name="basketItemId">Id of basketItem to be removed.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the Item removal.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketStrategy.OnAfterItemRemoved(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after an item is removed from a basket..
            </summary>
            <param name="basketItemId">Id of basket item removed.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs">
            <summary>
            Event arguments for basket item events.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.ProductId">
            <summary>
            Gets or sets Id of product associated with basket item.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.VariantId">
            <summary>
            Gets or sets Id of variant associated with basket item.  Will be 0 if basket item is not a variant.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.KitConfiguration">
            <summary>
            Gets or sets kit configuration associated with basket item.  Will be null if basket item is not a kit configuration.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.Commerce.BasketItemEventArgs.BasketItemId">
            <summary>
            Gets or sets Id of basket item.  Will be 0 if basket item has not been saved yet.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy">
            <summary>
            Base class for handling CatalogEntry Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnBeforeAdd(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a CatalogEntry is added.
            </summary>
            <param name="entryData">catalogEntryData to be added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterAdd(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a CatalogEntry is added.
            </summary>
            <param name="entryData">catalogEntryData that was added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnBeforeUpdate(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a CatalogEntry is updated.
            </summary>
            <param name="entryData">catalogEntryData to be added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterUpdate(Ektron.Cms.Commerce.EntryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a CatalogEntry is updated.
            </summary>
            <param name="entryData">catalogEntryData that was updated.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnBeforeDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called before a CatalogEntry has been deleted.
            </summary>
            <param name="entryId">Id of CatalogEntry to be deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called afater a CatalogEntry has been deleted.
            </summary>
            <param name="entryId">Id of CatalogEntry being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterCheckIn(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called afater a CatalogEntry has been checkedIn.
            </summary>
            <param name="entryId">Id of CatalogEntry being checked in.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CatalogEntryStrategy.OnAfterPublish(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a CatalogEntry is published.
            </summary>
            <param name="entryId">Id of Entry that was published.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.BasketCalculatorStrategy">
            <summary>
            Base class for handling BasketCalculator Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the Basket is calculated.
            </summary>
            <param name="basketCalculatorData">BasketCalculatorData to be calculated.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.BasketCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the basket is calculated.
            </summary>
            <param name="basketCalculatorData">basketCalculatorData that has been calculated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CustomerStrategy">
            <summary>
            Base class for handling Customer Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CustomerStrategy.OnAfterAdd(Ektron.Cms.Commerce.CustomerData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a customer is added.
            </summary>
            <param name="customerData">customerData that was added.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CustomerStrategy.OnAfterUpdate(Ektron.Cms.Commerce.CustomerData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after a customer is updated.
            </summary>
            <param name="customerData">customerData that was updated.</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CustomerStrategy.OnAfterDelete(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called afater a custoemr has been deleted.
            </summary>
            <param name="customerId">Id of Customer being deleted</param>
            <param name="args">Event Arguments</param>
            <returns></returns>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.OrderStrategy">
            <summary>
            Base class for handling Order Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.OrderStrategy.OnBeforeOrderPlaced(Ektron.Cms.Commerce.BasketData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before an order is placed
            </summary>
            <param name="basketData">BasketData to be converted to an order.</param>
            <param name="eventArgs">Event arguments for event.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.OrderStrategy.OnAfterOrderPlaced(Ektron.Cms.Commerce.OrderData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after an order has been placed.
            </summary>
            <param name="orderData">OrderData that has been placed.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.OrderStrategy.OnAfterStatusChange(Ektron.Cms.Commerce.OrderData,Ektron.Cms.Common.EkEnumeration.OrderStatus,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after an order's status has been changed.
            </summary>
            <param name="orderData">Order being updated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.TaxCalculatorStrategy">
            <summary>
            Base class for handling TaxCalculator Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.TaxCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the tax costs are calculated.
            </summary>
            <param name="basketData">BasketData to be calculated.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.TaxCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the tax costs are calculated.
            </summary>
            <param name="basketData">BasketData that has been calculated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.CouponCalculatorStrategy">
            <summary>
            Base class for handling CouponCalculator Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CouponCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,System.Collections.Generic.List{Ektron.Cms.Commerce.CouponData},Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the basket coupons are calculated.
            </summary>
            <param name="basketData">BasketDaat to be calculated.</param>
            <param name="coupons">Coupons applied to basket.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.CouponCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,System.Collections.Generic.List{Ektron.Cms.Commerce.CouponData},Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the basket coupons are calculated.
            </summary>
            <param name="basketData">BasketData that has been calculated.</param>
            <param name="coupons">Coupons applied to basket.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.InventoryStrategy">
            <summary>
            Base class for handling Inventory Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnBeforeInventorySave(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            This method is called before inventory is saved.  This method could be called before inventory is updated via the product or via an order.
            </summary>
            <param name="inventoryData">Inventory being saved.</param>
            <param name="eventArgs">cancellable event arguments for this action.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnAfterInventorySave(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after inventory is saved.  This method could be called before inventory is updated via the product or via an order.
            </summary>
            <param name="inventoryData">Inventory being saved.</param>
            <param name="eventArgs">event arguments for this action.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnInventoryReorderLevelReached(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called when inventory has been decreased below the reorder threshhold.
            </summary>
            <param name="inventoryData">Id of catalog entry being affected.</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.InventoryStrategy.OnInventoryNowInStock(Ektron.Cms.Commerce.InventoryData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called when inventory has been added to a previously out of stock item.
            </summary>
            <param name="inventoryData">Id of catalog entry being affected.</param>
            <param name="eventArgs">cms event args</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Commerce.ShippingCalculatorStrategy">
            <summary>
            Base class for handling ShippingCalcualtor Strategy events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.ShippingCalculatorStrategy.OnBeforeCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Commerce.ShippingMethodData,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            When implemented, this method is called before the shipping rates are calculated.
            </summary>
            <param name="basketData">BasketData to be calculated.</param>
            <param name="shippingMethod">Currently selelcted shipping method for basket.  May be null if no method has been selected yet.</param>
            <param name="eventArgs">Event arguments for event.  Set IsCancelled equal to true to cancel the calculation.</param>
            <returns></returns>
        </member>
        <member name="M:Ektron.Cms.Extensibility.Commerce.ShippingCalculatorStrategy.OnAfterCalculate(Ektron.Cms.Commerce.BasketCalculatorData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            When implemented, this method is called after the shipping rates are calculated.   This method can be used to modify Shipping rates after calculation.
            </summary>
            <param name="basketData">BasketData that has been calculated.</param>
            <param name="eventArgs">Event arguments for event.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ConfigurationStrategy">
            <summary>
            The ConfigurationStrategy is an abstract class describing a component capable of
            responding to CMS Site Configuration -related events.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.Content.FormStrategy">
            <summary>
            Base class for handling Form Strategy events.  To implement a strategy extension for Form events, you must derive from ths class.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ESyncDataTransformStrategy">
            <summary>
            This is a strategy which provides a mechanism wherein developers can modify the data rows being synced during the database
            portion of eSync.
            </summary>
            <remarks>
            By design, the DataRow exposed via this strategy is disconnected from the actual eSync row. This is so that the
            developer is not able to delete rows from the actual table. Deleting rows can produce undesirable effects
            and is not supported in this version of the strategy.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncDataTransformStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.ESyncDataTransformStrategy"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncDataTransformStrategy.OnAfterDataRowSelected(System.Data.DataRow,Ektron.Cms.CoreService.SyncDataTransformContext)">
            <summary>
            Called after the sync framework has determined the rows to be synced as per the sync criteria.
            </summary>
            <param name="disconnectedRow">
            A row corresponding to the actual row which will be synced. Any changes to this will be propagated back to the original row.
            Note however that this is disconnected from the actual DataRow object and does not provide access to the real DataTable or
            Dataset being used by the sync framework. Only row value changes are supported for transformation.
            </param>
            <param name="context">This parameter provides more context about the DataRow being passed.</param>
            <remarks>
            By design, this event is raised synchronously for every row in the DataTable, so that there is minimal impact on eSync
            memory consumption or performance.
            </remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.ESyncNotificationStrategy">
            <summary>
            This is a strategy which provides a mechanism wherein developers can subscribe to eSync events synchronously and obtain information about the same.
            Not all methods are directly driven by the synchronization process within the MS Sync Framework. Although the MS Sync Framework performs the actual 
            synchronization, the Ektron eSync process wraps around it and performs actions before and after the call to it. 
            </summary>
            <remarks>
            Some events are raised both on the local service and on the peer service around the same time (one after the other). Any unhandled error within 
            the methods will be logged. However they will NOT cause eSync to abort. File Sync is referred to as "Folder Sync" because all file sync operations
            are eventually carried out as folder syncs.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunStartFromLocal(Ektron.Cms.CoreService.SyncProfile,Ektron.Cms.Extensibility.SyncCommandEventArgs)">
            <summary>
            Called after a Database Sync initiated by an eSync run has started. This method is provided because an eSync can
            cause multiple database syncs (Ex: Package Sync, UGC Sync). This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <param name="commandArgs">
            The <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> instance which can be used to send commands to control the execution of the Database Sync being run presently.
            </param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. This event is cancellable and properties can be propagated 
            back to EWS via the syncProfileData parameter.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunCompleteFromLocal(Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by an eSync run has completed. This method is provided because some eSync types can
            cause multiple database syncs (Ex: Package Sync, UGC Sync). This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            This method is called even if the database sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunErrorFromLocal(System.Exception,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by an eSync run has errored out. This method is provided because some eSync types can
            cause multiple database syncs (Ex: Package Sync, UGC Sync). This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunStartFromLocal(Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile,Ektron.Cms.Extensibility.SyncCommandEventArgs)">
            <summary>
            Called after a Folder Sync initiated by an eSync run has started. This method is provided because some eSync types can
            cause multiple folder syncs. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <param name="commandArgs">The <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> instance which can be used to send commands to control the execution of the Folder Sync being run presently.</param>
            <remarks>
            This event is cancellable and properties can be propagated back to EWS via the syncProfileData parameter.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunCompleteFromLocal(Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by an eSync run has completed. This method is provided because some eSync types can
            cause multiple folder syncs. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if the database sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunErrorFromLocal(System.Exception,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by an eSync run has errored out. This method is provided because some eSync types can
            cause multiple folder syncs. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunStartFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by a peer Ektron Windows Service has started. This happens after OnAfterESyncRunStartFromLocal()
            has been raised on the peer server. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunCompleteFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by a peer Ektron Windows Service has completed. This happens after OnAfterESyncRunCompleteFromLocal()
            has been raised on the peer server. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if eSync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunErrorFromPeer(System.Exception,Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by a peer Ektron Windows Service has errored out.This happens after OnAfterESyncRunErrorFromLocal()
            has been raised on the peer server. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="peerDetails">The peer server details.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunStartFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by a peer eSync run has started. This happens after OnAfterDatabaseSyncRunStartFromLocal()
            has been raised on the peer server. This method is provided because an eSync can cause multiple database syncs (Ex: Package Sync, UGC Sync). 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunCompleteFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by a peer eSync run has completed. This happens after OnAfterDatabaseSyncRunCompleteFromLocal()
            has been raised on the peer server. This method is provided because an eSync can cause multiple database syncs (Ex: Package Sync, UGC Sync). 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            This method is called even if the database sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterDatabaseSyncRunErrorFromPeer(System.Exception,Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Database Sync initiated by a peer eSync run has errored out. This happens after OnAfterDatabaseSyncRunCompleteFromLocal()
            has been raised on the peer server. This method is provided because an eSync can cause multiple database syncs (Ex: Package Sync, UGC Sync). 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="peerDetails">The peer server details.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated for this event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunStartFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by a peer eSync run has started. This happens after OnAfterFolderSyncRunStartFromLocal()
            has been raised on the peer server. This method is provided because some eSync types can cause multiple folder syncs. 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunCompleteFromPeer(Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by a peer eSync run has completed. This happens after OnAfterFolderSyncRunCompleteFromPeer()
            has been raised on the peer server. This method is provided because some eSync types can cause multiple folder syncs. 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="peerDetails">The peer server details.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if the file sync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterFolderSyncRunErrorFromPeer(System.Exception,Ektron.Cms.CoreService.PeerServerDetails,Ektron.Cms.CoreService.FolderSyncProfile,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after a Folder Sync initiated by a peer eSync run has errored out. This happens after OnAfterFolderSyncRunErrorFromLocal()
            has been raised on the peer server. This method is provided because some eSync types can cause multiple folder syncs. 
            This method is NOT initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="peerDetails">The peer server details.</param>
            <param name="folderSyncProfileData">The folder sync profile data. This will contain more details about the specific folder sync.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnLocalDatabaseSyncProgress(Ektron.Cms.CoreService.DatabaseSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a database sync initiated locally is running. This method is initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The database sync progress information.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnLocalFileSyncProgress(Ektron.Cms.CoreService.FileSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a file sync initiated locally is running. This event is not raised for all file syncs. 
            This method is initiated by the actual synchronization process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The file sync progress information.</param>
            <param name="syncProfileData">The sync profile data.</param>
            <remarks>
            The behavior of this event corresponds directly to the behavior of the MS Sync Framework 
            'SessionProgress' and 'StateChanged' events of the SyncOrchestrator class.
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnPeerDatabaseSyncProgress(Ektron.Cms.CoreService.DatabaseSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a database sync initiated by a peer is running. This happens when the peer server is running database sync to the
            local server as part of the eSync process. This method is initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The database sync progress information.</param>
            <param name="syncProfileData">Generic eSync profile information. This can be NULL in certain circumstances</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnPeerFileSyncProgress(Ektron.Cms.CoreService.FileSyncProgress,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called when a file sync initiated by a peer is running. This happens when the peer server is running file sync to the
            local server as part of the eSync or Load Balancing process. This method is initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="syncProgress">The file sync progress information.</param>
            <param name="syncProfileData">The sync profile data.</param>
            <remarks>
            Not all properties of the SyncProfile parameter are populated in a progress event. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.ESyncNotificationStrategy"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunStartFromLocal(Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile,Ektron.Cms.Extensibility.SyncCommandEventArgs)">
            <summary>
            Called after an eSync run orchestrated by the local Ektron Windows Service has started. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <param name="commandArgs">The <see cref="T:Ektron.Cms.Extensibility.SyncCommandEventArgs"/> instance which can be used to send commands to control the execution of the eSync being run presently.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunCompleteFromLocal(Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by the local Ektron Windows Service has completed. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
            <remarks>
            This method is called even if eSync errors out.
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.ESyncNotificationStrategy.OnAfterESyncRunErrorFromLocal(System.Exception,Ektron.Cms.CoreService.SyncSpecificDetails,Ektron.Cms.CoreService.SyncProfile)">
            <summary>
            Called after an eSync run orchestrated by the local Ektron Windows Service has errored out. This method is NOT initiated by the actual synchronization
            process being performed by the MS Sync Framework.
            </summary>
            <param name="ex">The exception raised.</param>
            <param name="details">Details specific to the eSync currently running.</param>
            <param name="syncProfileData">Generic eSync profile information.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy">
            <summary>
            This is a strategy which provides a mechanism wherein developers can subscribe to local load balancer events synchronously and obtain information about the same.
            Load Balancing of files by folder sync can be triggered by file watchers assigned to folders within sites configured to be load balanced OR 
            when eSync synchronizes the Templates or Work Area folders to a server which is load balanced.
            </summary>
            <remarks>
            All events are raised on the local service only. 
            </remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy"/> class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.OnBeforeRunStart(System.Collections.Generic.List{Ektron.Cms.CoreService.LoadBalancedFile},Ektron.Cms.CoreService.LoadBalanceProfile)">
            <summary>
            Called before the local load balancer starts syncing the files in the queue.
            </summary>
            <param name="files">The files in the load balancer queue which are going to be synced currently.</param>
            <param name="profile">The load balance profile which provides more information about the load balancer session.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.OnAfterRunError(System.Exception,System.Collections.Generic.List{Ektron.Cms.CoreService.LoadBalancedFile},Ektron.Cms.CoreService.LoadBalanceProfile)">
            <summary>
            Called after the local load balancer synchronization session has errored out.
            </summary>
            <param name="ex">The exception which caused the error.</param>
            <param name="files">The files in the load balancer queue which were being synced when the error occured.</param>
            <param name="profile">The load balance profile which provides more information about the load balancer session.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LoadBalancerNotificationStrategy.OnAfterRunComplete(System.Collections.Generic.List{Ektron.Cms.CoreService.LoadBalancedFile},Ektron.Cms.CoreService.LoadBalanceProfile)">
            <summary>
            Called after the local load balancer synchronization session has completed successfully. If the session errored
            out, this event will not be raised.
            </summary>
            <param name="files">The files in the load balancer queue which have been synced currently.</param>
            <param name="profile">The load balance profile which provides more information about the load balancer session.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LocaleStrategy">
            <summary>
            Events for translation import and export
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocaleStrategy.#ctor">
            <summary>
            Initializes a new instance of the LocaleStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocaleStrategy.DetermineRequestedLocale(System.Web.HttpRequest,System.Web.HttpCookie,Ektron.Cms.Localization.LocaleData@,Ektron.Cms.BusinessObjects.Localization.ILocaleManager,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            Determines the locale given the HttpRequest and HttpCookie
            </summary>
            <summary>
            Strategy to determine the locale given the context, HttpRequest and HttpCookie
            </summary>
            <param name="request">The HttpRequest</param>
            <param name="cookie">The HttpCookie</param>
            <param name="requestedLocale">The selected locale or null if none determined, in which case, 
            unless cancelled, the default algorithm will be used.</param>
            <param name="sender">The instance of the ILocaleManager determining the requested locale</param>
            <param name="eventArgs">The event arguments.</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.LocalizationStrategy">
            <summary>
            Events for translation import and export
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.#ctor">
            <summary>
            Initializes a new instance of the LocalizationStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeImport(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before a XLIFF import occurs. May be cancelled. OnAfterImport is always called, even if cancelled.
            </summary>
            <param name="xliffUrl">The path holding files to be imported.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnGetImportList(System.Collections.Generic.List{System.String},Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called when the list of files to import is generated.
            To import more files, add them to the list.
            To prevent importing files, remove them from the list.
            </summary>
            <param name="fileNames">List of files to import</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnGetUnzippedFile(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called after a zip file is unzipped, and for each file present in the zip.
            </summary>
            <param name="fileNameAndPath">The file that is in the zip</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeValidateXliff(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before imported XLIFF is validated.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeMergeXliff(System.String,System.String,Ektron.Cms.Xslt.ArgumentList,System.Xml.XmlUrlResolver,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before imported XLIFF is merged with its skeleton.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="mergeXsltFilePath">The file path to the XSLT that performs the merge.</param>
            <param name="args">Arguments for the XSLT transform</param>
            <param name="skeletonResolver">Resolver to fetch the skeleton</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterMergeXliff(System.String,System.String@,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after imported XLIFF is merged with its skeleton.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="translatedContent">The translated skeleton after merging.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeUpdate(System.String,System.String,System.Int32,System.Int32,System.DateTime,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before the content is updated in the database.
            </summary>
            <param name="fileName">The file name of the XLIFF document.</param>
            <param name="skeletonFileName">The file name of the skeleton document.</param>
            <param name="translatedLanguageID">The target language</param>
            <param name="originalLanguageID">The source language</param>
            <param name="dateModified">The date modified of the source object</param>
            <param name="eventArgs">Event arguments</param>
            <remarks>ObjectType and ObjectId are provided in the eventArgs</remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterUpdate(System.String,System.String,System.Int32,System.Int32,System.DateTime,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after the content is updated in the database.
            </summary>
            <param name="fileName">The file name of the XLIFF document.</param>
            <param name="skeletonFileName">The file name of the skeleton document.</param>
            <param name="translatedLanguageID">The target language</param>
            <param name="originalLanguageID">The source language</param>
            <param name="dateModified">The date modified of the source object</param>
            <param name="eventArgs">Event arguments</param>
            <remarks>ObjectType and ObjectId are provided in the eventArgs</remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterValidateXliff(System.String,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after imported XLIFF is validated.
            </summary>
            <param name="xliffFilePath">The file name of the XLIFF document.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterImport(Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Always called when the import job is done, whether cancelled or not. The job id is provided in the eventArgs.
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeExport(Ektron.Cms.Localization.LocalizationExportJob,System.String,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before a XLIFF export occurs. May be cancelled. OnAfterExport is always called, even if cancelled.
            </summary>
            <param name="exportJob">Parameters for the export process.</param>
            <param name="xliffPath">file path to the xliff file.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnGetExportList(Ektron.Cms.Localization.LocalizationExportJob,System.Collections.Generic.List{Ektron.Cms.Localization.LocalizableItem},Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called when the list of items to export is generated.
            To export more items, add them to the list.
            To prevent exporting items, remove them from the list.
            </summary>
            <param name="exportJob">Parameters for the export process.</param>
            <param name="itemList">List of items to export</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeExportItem(Ektron.Cms.Localization.LocalizableItem,Ektron.Cms.Localization.LocalizationState,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before a CMS object is exported.
            </summary>
            <param name="item">The item being exported</param>
            <param name="locState">The localization state of the CMS object</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnCreateSkeleton(System.String@,System.String@,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called when an XLIFF skeleton is created, but before it is saved.
            </summary>
            <param name="fileName">The file name of the skeleton</param>
            <param name="skeleton">The skeleton document</param>
            <param name="eventArgs">Event arguments</param>
            <remarks>ObjectType and ObjectId are provided in the eventArgs</remarks>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnCreateXliff(System.String@,System.String@,Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs)">
            <summary>
            Called when an XLIFF file is created from a skeleton, but before it is saved. One XLIFF file is created for all target languages.
            </summary>
            <param name="fileName">The file name of the XLIFF file</param>
            <param name="xliff">The XLIFF document</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterExportItem(Ektron.Cms.Localization.LocalizableItem,Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after a CMS object is exported.
            </summary>
            <param name="item">The item being exported</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeCompressFiles(System.Int32,System.Collections.Generic.List{Ektron.Cms.Localization.LocaleData},System.String,System.String@,System.Int64@,Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs)">
            <summary>
            Called before files are copied and compressed for each target locale. May be cancelled. OnAfterCompressFiles is always called, even if cancelled.
            </summary>
            <param name="sourceLanguageId">The source language</param>
            <param name="targetLocales">List of target languages</param>
            <param name="path">Directory path of the files to compress</param>
            <param name="xliffFileNameFormat">Format of the file names to compress</param>
            <param name="maxZipFileSize">Maximum size, in bytes, of the ZIP to create.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterCompressFiles(Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Called after files are copied and compressed for each target locale.
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnBeforeZipFiles(System.String,System.String[]@,System.String@,System.String@,System.Int64@,Ektron.Cms.Extensibility.CancellableEventArgs)">
            <summary>
            Called before files are zipped together.
            </summary>
            <param name="path">Directory path where the files to ZIP are stored.</param>
            <param name="fileNamePatterns">Pattern of file names to ZIP using "*" as wildcard</param>
            <param name="zipFilePath">Directory path where the ZIP file(s) are to be stored.</param>
            <param name="zipFileNameFormat">The name of the ZIP file to create with "{0}" in the name for multiple files</param>
            <param name="maxZipFileSize">Maximum size, in bytes, of the ZIP to create.</param>
            <param name="eventArgs">Event arguments, ObjectId is -1.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterZipFiles(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Called after files are zipped together.
            </summary>
            <param name="fileNames">List of files that were compressed in the ZIP files.</param>
            <param name="zipFileNames">List of ZIP files created.</param>
            <param name="filesPerZip">List of files in each ZIP file.</param>
            <param name="eventArgs">Event arguments, ObjectId is -1.</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.LocalizationStrategy.OnAfterExport(Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs)">
            <summary>
            Always called when the export job is done, whether cancelled or not. The job id is provided in the eventArgs.
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs.JobId">
            <summary>
            Gets localization job ID of the CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CancellableLocalizationEventArgs.ExceptionMessage">
            <summary>
            Gets or sets an exception message. Will result in an exception being thrown if the message is not empty.
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs.JobId">
            <summary>
            Gets localization job ID of the CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.LocalizationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.Skeleton">
            <summary>
            The skeleton document
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.SourceLocale">
            <summary>
            The source locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.TargetLocale">
            <summary>
            The target locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.SkeletonType">
            <summary>
            Gets type used in the Skeleton
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.LocalizationStrategy.CreateXliffEventArgs.TranslatedXliffFilePath">
            <summary>
            Gets the file name and path to the previous translated and imported XLIFF file or empty string if it doesn't exist.
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MachineTranslationStrategy">
            <summary>
            Algorithm to immediately translate content
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MachineTranslationStrategy.#ctor">
            <summary>
            Initializes a new instance of the MachineTranslationStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MachineTranslationStrategy.Translate(System.String@,Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs)">
            <summary>
            Translates the given content using machine translation.
            </summary>
            <param name="content">The source content to translate.</param>
            <param name="eventArgs">Arguments, including the source and target locales.</param>
            <remarks>Typically eventArgs.Locale.Tag.PrivateUseSubtag will be "mt"</remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs">
            <summary>
            Arguments, including the target pseudo-locale as the 'Locale' property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.#ctor(Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Initializes a new instance of the MachineTranslationEventArgs class.
            </summary>
            <param name="sourceLocale">The source locale</param>
            <param name="targetLocale">The target locale</param>
            <param name="objectType">The CMS object type</param>
            <param name="objectId">The CMS object ID, or -1 if none</param>
            <param name="requestInformation">The request information</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.SourceLocale">
            <summary>
            Gets the source locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.TargetLocale">
            <summary>
            Gets the target locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.MachineTranslationStrategy.MachineTranslationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.PseudoLocalizationStrategy">
            <summary>
            "Pseudo-localizing is one technique for validating the translation-readiness of your software. 
            It allows you to run and test your software with strings that are distinctly non-English but still quite readable. 
            Lingering hard coded English strings are exposed. Logic dependencies on specific English values 
            become apparent. Dialog sizing problems are visible."
            http://www.codeproject.com/KB/cs/ploc.aspx
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.#ctor">
            <summary>
            Initializes a new instance of the PseudoLocalizationStrategy class.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalize(System.String@,Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs)">
            <summary>
            Localizes the given content into a "pseudo" language to test translation-readiness.
            </summary>
            <param name="content">The source content to pseudo-localize.</param>
            <param name="eventArgs">Arguments, including the target pseudo-locale as the 'Locale' property.</param>
            <remarks>Typically eventArgs.Locale.Tag.PrivateUseSubtag will be "pseudo"</remarks>
        </member>
        <member name="T:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs">
            <summary>
            Arguments, including the target pseudo-locale as the 'Locale' property.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs.#ctor(Ektron.Cms.Localization.LocaleData,Ektron.Cms.Localization.LocalizableCmsObjectType,System.Int64,Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            Initializes a new instance of the PseudoLocalizationEventArgs class.
            </summary>
            <param name="locale">The target pseudo-locale</param>
            <param name="objectType">The CMS object type</param>
            <param name="objectId">The CMS object ID, or -1 if none</param>
            <param name="requestInformation">The request information</param>
        </member>
        <member name="P:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs.Locale">
            <summary>
            Gets the target pseudo-locale
            </summary>
        </member>
        <member name="P:Ektron.Cms.Extensibility.PseudoLocalizationStrategy.PseudoLocalizationEventArgs.ObjectType">
            <summary>
            Gets type of CMS object
            </summary>
        </member>
        <member name="T:Ektron.Cms.Extensibility.CollectionStrategy">
            <summary>
            Collection Strategy interface
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CollectionStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CollectionStrategy.OnAfterDeleteCollection(System.Int64,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a collection is deleted.
            </summary>
            <param name="id">ID of the collection that was deleted.</param>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.CollectionStrategy.OnAfterUpdateCollection(Ektron.Cms.Organization.ContentCollectionData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            This method is called after a collection is edited
            </summary>
            <param name="collectionData">The collection data that was edited</param>
            <param name="eventArgs">Events args</param>
        </member>
        <member name="T:Ektron.Cms.Extensibility.QueryStrategy">
            <summary>
            The QueryStrategy is an abstract class describing a component capable of
            responding to query-related events.
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnBeforeKeywordQuery(Ektron.Cms.Search.KeywordSearchCriteria,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals that a 'keyword' query is about to be requested.
            </summary>
            <param name="criteria">Criteria for the pending query</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnAfterKeywordQuery(Ektron.Cms.Search.KeywordSearchCriteria,Ektron.Cms.Search.SearchResponseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals the completion of a 'keyword' query.
            </summary>
            <param name="criteria">Criteria for the query</param>
            <param name="response">Query response</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnBeforeAdvancedQuery(Ektron.Cms.Search.AdvancedSearchCriteria,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals that an 'advanced' query is about to be requested.
            </summary>
            <param name="criteria">Criteria for the pending query</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.Extensibility.QueryStrategy.OnAfterAdvancedQuery(Ektron.Cms.Search.AdvancedSearchCriteria,Ektron.Cms.Search.SearchResponseData,Ektron.Cms.Extensibility.CmsEventArgs)">
            <summary>
            Signals the completion of an 'advanced' query.
            </summary>
            <param name="criteria">Criteria for the query</param>
            <param name="response">Query response</param>
            <param name="eventArgs">CMS event arguments</param>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.Register(System.Type,System.Type)">
            <summary>
            Registers a mapping within the current container for the 
            specified types. If a type mapping already exists for the 
            'from' type, it will be override with the specified mapping.
            </summary>
            <param name="from">Interface or class type key</param>
            <param name="to">Type to map</param>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.IsRegistered(System.Type)">
            <summary>
            Returns true if the specified type has a corresponding
            mapping registered within the current container, false otherwise.
            </summary>
            <param name="type">Interface or class type key</param>
            <returns>True if the specified type has a mapping, false otherwise.</returns>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.GetMappedType(System.Type)">
            <summary>
            Returns the type mapped to the specified type within the current 
            container. If no mapping exists, null is returned.
            </summary>
            <param name="fromType">Type key</param>
            <returns>Mapped type</returns>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.GetDevicePreviewManager">
            <summary>
            Gets the device preview manager configured for the container.
            </summary>
            <returns>The configured device preview manager.</returns>
        </member>
        <member name="M:Ektron.Cms.ObjectFactory.LoadStrategy``1(System.String)">
            <summary>
            Loads a strategy instance of the specified type.
            </summary>
            <typeparam name="T">Strategy type</typeparam>
            <param name="typeName">The assembly-qualified name of the type to get.</param>
            <returns>Strategy instance of the specified type</returns>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.ecmCookie(System.String)">
            <summary>
            Returns the value for a given key.
            </summary>
            <param name="keyName">The cookie key.</param>
            <returns>Object</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.GetEktGUID">
            <summary>
            Returns a unique ID stored as EktGUID, used to track visitors to the site.
            </summary>
            <returns>A unique identifier for the current visitor.</returns>
            <remarks>If the cookie value is not set, this function will set it and return the new GUID value. Otherwise it returns the cookie GUID.
            If the user does not have cookies enabled, it returns String.Empty.</remarks>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.ProcessServiceCall(Ektron.Cms.Common.EkRequestInformation)">
            <summary>
            This checks the current BusinessObject call to see if it is being made in a WCF service context.
            If it is, it checks for authentication headers and does any neccessary impersonation\environment modifications
            </summary>
            <param name="requestInformation"></param>
        </member>
        <member name="M:Ektron.Cms.BusinessObjects.RequestInformationManager.GetUserByToken(System.String,Ektron.Cms.Common.EkRequestInformation)">
            <summary> 
            Gets a user based upon a supplied authentication token.
            </summary>
            <returns>The current user data, or <c>null</c>.</returns>
        </member>
    </members>
</doc>
